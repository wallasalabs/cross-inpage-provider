{"version":3,"file":"static/chunks/1453.b0bfdcfc0738cbea.js","mappings":"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","sources":["webpack://_N_E/./components/algoWalletConnect/api.ts","webpack://_N_E/./components/algoWalletConnect/scenarios.ts","webpack://_N_E/./components/algoWalletConnect/dapps.config.ts","webpack://_N_E/./components/algoWalletConnect/AlgoExample.tsx","webpack://_N_E/./components/dappList/DAppList.tsx"],"sourcesContent":["import _regeneratorRuntime from\"@babel/runtime/regenerator\";import algosdk from'algosdk';export var ChainType;(function(ChainType){ChainType[\"MainNet\"]=\"mainnet\";ChainType[\"TestNet\"]=\"testnet\";})(ChainType||(ChainType={}));var mainNetClient=new algosdk.Algodv2('','https://mainnet-api.algonode.cloud','');var testNetClient=new algosdk.Algodv2('','https://testnet-api.algonode.cloud','');function clientForChain(chain){switch(chain){case ChainType.MainNet:return mainNetClient;case ChainType.TestNet:return testNetClient;default:throw new Error(\"Unknown chain type: \"+chain);}}export function apiGetTxnParams(chain){var params;return _regeneratorRuntime.async(function apiGetTxnParams$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(clientForChain(chain).getTransactionParams().do());case 2:params=_context.sent;return _context.abrupt(\"return\",params);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function apiSubmitTransactions(chain,stxns){var _await$clientForChain,txId;return _regeneratorRuntime.async(function apiSubmitTransactions$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(clientForChain(chain).sendRawTransaction(stxns).do());case 2:_await$clientForChain=_context2.sent;txId=_await$clientForChain.txId;_context2.next=6;return _regeneratorRuntime.awrap(waitForTransaction(chain,txId));case 6:return _context2.abrupt(\"return\",_context2.sent);case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);}function waitForTransaction(chain,txId){var client,lastStatus,lastRound,status;return _regeneratorRuntime.async(function waitForTransaction$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:client=clientForChain(chain);_context3.next=3;return _regeneratorRuntime.awrap(client.status().do());case 3:lastStatus=_context3.sent;lastRound=lastStatus['last-round'];case 5:if(!true){_context3.next=19;break;}_context3.next=8;return _regeneratorRuntime.awrap(client.pendingTransactionInformation(txId).do());case 8:status=_context3.sent;if(!status['pool-error']){_context3.next=11;break;}throw new Error(\"Transaction Pool Error: \"+status['pool-error']);case 11:if(!status['confirmed-round']){_context3.next=13;break;}return _context3.abrupt(\"return\",status['confirmed-round']);case 13:_context3.next=15;return _regeneratorRuntime.awrap(client.statusAfterBlock(lastRound+1).do());case 15:lastStatus=_context3.sent;lastRound=lastStatus['last-round'];_context3.next=5;break;case 19:case\"end\":return _context3.stop();}}},null,null,null,Promise);}","import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}import algosdk from'algosdk';import{apiGetTxnParams,ChainType}from'./api';var testAccounts=[algosdk.mnemonicToSecretKey('cannon scatter chest item way pulp seminar diesel width tooth enforce fire rug mushroom tube sustain glide apple radar chronic ask plastic brown ability badge'),algosdk.mnemonicToSecretKey('person congress dragon morning road sweet horror famous bomb engine eager silent home slam civil type melt field dry daring wheel monitor custom above term'),algosdk.mnemonicToSecretKey('faint protect home drink journey humble tube clinic game rough conduct sell violin discover limit lottery anger baby leaf mountain peasant rude scene abstract casual')];export function signTxnWithTestAccount(txn){var sender=algosdk.encodeAddress(txn.from.publicKey);for(var _iterator=_createForOfIteratorHelperLoose(testAccounts),_step;!(_step=_iterator()).done;){var testAccount=_step.value;if(testAccount.addr===sender){return txn.signTxn(testAccount.sk);}}throw new Error(\"Cannot sign transaction from unknown test account: \"+sender);}function getAssetIndex(chain){if(chain===ChainType.MainNet){return 31566704;}if(chain===ChainType.TestNet){return 10458941;}throw new Error(\"Asset not defined for chain \"+chain);}function getAssetReserve(chain){if(chain===ChainType.MainNet){return'2UEQTE5QDNXPI7M3TU44G6SYKLFWLPQO7EBZM7K7MHMQQMFI4QJPLHQFHM';}if(chain===ChainType.TestNet){return'UJBZPEMXLD6KZOLUBUDSZ3DXECXYDADZZLBH6O7CMYXHE2PLTCW44VK5T4';}throw new Error(\"Asset reserve not defined for chain \"+chain);}function getAppIndex(chain){if(chain===ChainType.MainNet){return 305162725;}if(chain===ChainType.TestNet){return 22314999;}throw new Error(\"App not defined for chain \"+chain);}var singlePayTxn=function singlePayTxn(chain,address){var suggestedParams,txn,txnsToSign;return _regeneratorRuntime.async(function singlePayTxn$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context.sent;txn=algosdk.makePaymentTxnWithSuggestedParamsFromObject({from:address,to:address,amount:100000,note:new Uint8Array(Buffer.from('example note value')),suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This is a payment transaction that sends 0.1 Algos to yourself.'}];return _context.abrupt(\"return\",[txnsToSign]);case 6:case\"end\":return _context.stop();}}},null,null,null,Promise);};var singleAssetOptInTxn=function singleAssetOptInTxn(chain,address){var suggestedParams,assetIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAssetOptInTxn$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context2.sent;assetIndex=getAssetIndex(chain);txn=algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({from:address,to:address,amount:0,assetIndex:assetIndex,note:new Uint8Array(Buffer.from('example note value')),suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction opts you into the USDC asset if you have not already opted in.'}];return _context2.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context2.stop();}}},null,null,null,Promise);};var singleAssetTransferTxn=function singleAssetTransferTxn(chain,address){var suggestedParams,assetIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAssetTransferTxn$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context3.sent;assetIndex=getAssetIndex(chain);txn=algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({from:address,to:address,amount:1000000,assetIndex:assetIndex,note:new Uint8Array(Buffer.from('example note value')),suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction will send 1 USDC to yourself.'}];return _context3.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context3.stop();}}},null,null,null,Promise);};var singleAssetCloseTxn=function singleAssetCloseTxn(chain,address){var suggestedParams,assetIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAssetCloseTxn$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context4.sent;assetIndex=getAssetIndex(chain);txn=algosdk.makeAssetTransferTxnWithSuggestedParamsFromObject({from:address,to:getAssetReserve(chain),amount:0,assetIndex:assetIndex,note:new Uint8Array(Buffer.from('example note value')),closeRemainderTo:testAccounts[1].addr,suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction will opt you out of the USDC asset. DO NOT submit this to MainNet if you have more than 0 USDC.'}];return _context4.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context4.stop();}}},null,null,null,Promise);};var singleAppOptIn=function singleAppOptIn(chain,address){var suggestedParams,appIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAppOptIn$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context5.sent;appIndex=getAppIndex(chain);txn=algosdk.makeApplicationOptInTxnFromObject({from:address,appIndex:appIndex,note:new Uint8Array(Buffer.from('example note value')),appArgs:[Uint8Array.from([0]),Uint8Array.from([0,1])],suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction will opt you into a test app.'}];return _context5.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context5.stop();}}},null,null,null,Promise);};var singleAppCall=function singleAppCall(chain,address){var suggestedParams,appIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAppCall$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context6.sent;appIndex=getAppIndex(chain);txn=algosdk.makeApplicationNoOpTxnFromObject({from:address,appIndex:appIndex,note:new Uint8Array(Buffer.from('example note value')),appArgs:[Uint8Array.from([0]),Uint8Array.from([0,1])],suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction will invoke an app call on a test app.'}];return _context6.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context6.stop();}}},null,null,null,Promise);};var singleAppCloseOut=function singleAppCloseOut(chain,address){var suggestedParams,appIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAppCloseOut$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context7.sent;appIndex=getAppIndex(chain);txn=algosdk.makeApplicationCloseOutTxnFromObject({from:address,appIndex:appIndex,note:new Uint8Array(Buffer.from('example note value')),appArgs:[Uint8Array.from([0]),Uint8Array.from([0,1])],suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction will opt you out of the test app.'}];return _context7.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context7.stop();}}},null,null,null,Promise);};var singleAppClearState=function singleAppClearState(chain,address){var suggestedParams,appIndex,txn,txnsToSign;return _regeneratorRuntime.async(function singleAppClearState$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return _regeneratorRuntime.awrap(apiGetTxnParams(chain));case 2:suggestedParams=_context8.sent;appIndex=getAppIndex(chain);txn=algosdk.makeApplicationClearStateTxnFromObject({from:address,appIndex:appIndex,note:new Uint8Array(Buffer.from('example note value')),appArgs:[Uint8Array.from([0]),Uint8Array.from([0,1])],suggestedParams:suggestedParams});txnsToSign=[{txn:txn,message:'This transaction will forcibly opt you out of the test app.'}];return _context8.abrupt(\"return\",[txnsToSign]);case 7:case\"end\":return _context8.stop();}}},null,null,null,Promise);};export var scenarios=[{name:'1. Sign pay txn',scenario:singlePayTxn},{name:'2. Sign asset opt-in txn',scenario:singleAssetOptInTxn},{name:'3. Sign asset transfer txn',scenario:singleAssetTransferTxn},{name:'4. Sign asset close out txn',scenario:singleAssetCloseTxn},{name:'5. Sign app opt-in txn',scenario:singleAppOptIn},{name:'6. Sign app call txn',scenario:singleAppCall},{name:'7. Sign app close out txn',scenario:singleAppCloseOut},{name:'8. Sign app clear state txn',scenario:singleAppClearState}];","export var dapps=[{name:'Tiny Man',url:'https://app.tinyman.org/#/swap?asset_in=0'},{name:'Humble Swap',url:'https://app.humble.sh/pool'},{name:'Folks Finnce',url:'https://app.folks.finance/markets'},{name:'Algofi',url:'https://app.algofi.org/'}];","import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React from'react';import{useState,useCallback}from'react';import algosdk from'algosdk';import WalletConnect from'@walletconnect/client';import QRCodeModal from'algorand-walletconnect-qrcode-modal';import{scenarios,signTxnWithTestAccount}from'./scenarios';import{ChainType,apiSubmitTransactions}from'./api';import{DAppList}from'../dappList/DAppList';import{dapps}from'./dapps.config';function stringToChainType(s){switch(s){case ChainType.MainNet.toString():return ChainType.MainNet;case ChainType.TestNet.toString():return ChainType.TestNet;default:throw new Error(\"Unknown chain selected: \"+s);}}export default function AlgoExample(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),connector=_useState2[0],setConnector=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),accounts=_useState4[0],setAccounts=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),address=_useState6[0],setAddress=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),connected=_useState8[0],setConnected=_useState8[1];var _useState9=useState(ChainType.TestNet),_useState10=_slicedToArray(_useState9,2),chain=_useState10[0],setChain=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),formattedResult=_useState12[0],setFormattedResult=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),signedTxns=_useState14[0],setSignedTxns=_useState14[1];var handleSessionUpdate=useCallback(function(accounts){var address=accounts[0];setAccounts(accounts);setAddress(address);},[]);var handleConnected=useCallback(function(payload){var accounts=payload.params[0].accounts;var address=accounts[0];setAccounts(accounts);setAddress(address);setConnected(true);},[]);var handleResetApp=useCallback(function(){setAddress('');setAccounts([]);setConnector(null);setConnected(false);},[]);var handleDisconnected=useCallback(function(){handleResetApp();},[handleResetApp]);var subscribeToEvents=useCallback(function(connector){if(!connector){return;}connector.on('session_update',function(error,payload){console.log(\"algo connector.on(\\\"session_update\\\")\",payload);if(error){throw error;}var accounts=payload.params[0].accounts;handleSessionUpdate(accounts);});connector.on('connect',function(error,payload){console.log(\"algo connector.on(\\\"connect\\\")\",payload);if(error){throw error;}handleConnected(payload);});connector.on('disconnect',function(error){console.log(\"algo connector.on(\\\"disconnect\\\")\");if(error){throw error;}handleDisconnected();});if(connector.connected){var _accounts=connector.accounts;var _address=_accounts[0];setAccounts(_accounts);setAddress(_address);setConnected(true);handleSessionUpdate(_accounts);}setConnector(connector);},[handleConnected,handleDisconnected,handleSessionUpdate]);var handleConnectWallet=useCallback(function _callee(){var bridge,connector;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:bridge='https://bridge.walletconnect.org';connector=new WalletConnect({storageId:'walletconnect_algo',bridge:bridge,qrcodeModal:QRCodeModal});window.wcConnector=connector;setConnector(connector);if(connector.connected){_context.next=7;break;}_context.next=7;return _regeneratorRuntime.awrap(connector.createSession({network:'algo'}));case 7:subscribeToEvents(connector);case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);},[subscribeToEvents]);var handleSignTxnScenario=useCallback(function _callee2(scenario){var txnsToSign,flatTxns,walletTxns,params,result,indexToGroup,signedPartialTxns,_signedTxns,signedTxnInfo,_formattedResult;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(connector){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:_context2.prev=2;_context2.next=5;return _regeneratorRuntime.awrap(scenario(chain,address));case 5:txnsToSign=_context2.sent;flatTxns=txnsToSign.reduce(function(acc,val){return acc.concat(val);},[]);walletTxns=flatTxns.map(function(_ref){var txn=_ref.txn,signers=_ref.signers,authAddr=_ref.authAddr,message=_ref.message;return{txn:Buffer.from(algosdk.encodeUnsignedTransaction(txn)).toString('base64'),signers:signers,authAddr:authAddr,message:message};});params=[walletTxns];_context2.next=11;return _regeneratorRuntime.awrap(connector.sendCustomRequest({method:'algo_signTxn',params:params}));case 11:result=_context2.sent;console.log('Raw response:',result);indexToGroup=function indexToGroup(index){for(var group=0;group<txnsToSign.length;group++){var groupLength=txnsToSign[group].length;if(index<groupLength){return[group,index];}index-=groupLength;}throw new Error(\"Index too large for groups: \"+index);};signedPartialTxns=txnsToSign.map(function(){return[];});result.forEach(function(r,i){var _toSign$signers2;var _indexToGroup=indexToGroup(i),_indexToGroup2=_slicedToArray(_indexToGroup,2),group=_indexToGroup2[0],groupIndex=_indexToGroup2[1];var toSign=txnsToSign[group][groupIndex];if(r==null){var _toSign$signers;if(toSign.signers!==undefined&&((_toSign$signers=toSign.signers)==null?void 0:_toSign$signers.length)<1){signedPartialTxns[group].push(null);return;}throw new Error(\"Transaction at index \"+i+\": was not signed when it should have been\");}if(toSign.signers!==undefined&&((_toSign$signers2=toSign.signers)==null?void 0:_toSign$signers2.length)<1){throw new Error(\"Transaction at index \"+i+\" was signed when it should not have been\");}var rawSignedTxn=Buffer.from(r,'base64');signedPartialTxns[group].push(new Uint8Array(rawSignedTxn));});_signedTxns=signedPartialTxns.map(function(signedPartialTxnsInternal,group){return signedPartialTxnsInternal.map(function(stxn,groupIndex){if(stxn){return stxn;}return signTxnWithTestAccount(txnsToSign[group][groupIndex].txn);});});signedTxnInfo=signedPartialTxns.map(function(signedPartialTxnsInternal,group){return signedPartialTxnsInternal.map(function(rawSignedTxn,i){if(rawSignedTxn==null){return null;}var signedTxn=algosdk.decodeSignedTransaction(rawSignedTxn);var txn=signedTxn.txn;var txID=txn.txID();var unsignedTxID=txnsToSign[group][i].txn.txID();if(txID!==unsignedTxID){throw new Error(\"Signed transaction at index \"+i+\" differs from unsigned transaction. Got \"+txID+\", expected \"+unsignedTxID);}if(!signedTxn.sig){throw new Error(\"Signature not present on transaction at index \"+i);}return{txID:txID,signingAddress:signedTxn.sgnr?algosdk.encodeAddress(signedTxn.sgnr):undefined,signature:Buffer.from(signedTxn.sig).toString('base64')};});});_formattedResult={method:'algo_signTxn',body:signedTxnInfo};setConnector(connector);setSignedTxns(_signedTxns);setFormattedResult(_formattedResult);_context2.next=29;break;case 24:_context2.prev=24;_context2.t0=_context2[\"catch\"](2);console.error(_context2.t0);setConnector(connector);setFormattedResult(null);case 29:case\"end\":return _context2.stop();}}},null,null,[[2,24]],Promise);},[address,chain,connector]);var handleSubmitTxs=useCallback(function _callee3(){var i,confirmedRound;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(signedTxns==null)){_context3.next=2;break;}throw new Error('Transactions to submit are null');case 2:i=0;case 3:if(!(i<signedTxns.length)){_context3.next=17;break;}_context3.prev=4;_context3.next=7;return _regeneratorRuntime.awrap(apiSubmitTransactions(chain,signedTxns[i]));case 7:confirmedRound=_context3.sent;console.log(\"Transaction confirmed at round \"+confirmedRound);_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](4);console.error(\"Error submitting transaction at index \"+i+\":\",_context3.t0);case 14:i++;_context3.next=3;break;case 17:case\"end\":return _context3.stop();}}},null,null,[[4,11]],Promise);},[signedTxns,chain]);var handleKissSession=useCallback(function _callee4(){return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(connector.killSession());case 2:handleResetApp();case 3:case\"end\":return _context4.stop();}}},null,null,null,Promise);},[connector,handleResetApp]);return React.createElement(\"div\",null,React.createElement(DAppList,{dapps:dapps}),React.createElement(\"main\",null,connected&&React.createElement(\"p\",null,\"Connected to \",React.createElement(\"select\",{onChange:function onChange(event){return setChain(stringToChainType(event.target.value));},value:chain},React.createElement(\"option\",{value:ChainType.TestNet},\"Algorand TestNet\"),React.createElement(\"option\",{value:ChainType.MainNet},\"Algorand MainNet\"))),connected?React.createElement(React.Fragment,null,React.createElement(\"div\",null,React.createElement(\"pre\",null,\"Connected as: \",address),React.createElement(\"button\",{onClick:handleKissSession},\"Disconnect\")),formattedResult&&React.createElement(\"div\",null,React.createElement(\"pre\",null,\"formattedResult: \",JSON.stringify(formattedResult)),React.createElement(\"button\",{onClick:handleSubmitTxs},'Submit transaction to network.')),scenarios.map(function(_ref2){var name=_ref2.name,scenario=_ref2.scenario;return React.createElement(\"button\",{key:name,onClick:function onClick(){return handleSignTxnScenario(scenario);}},name);}),React.createElement(\"button\",{onClick:function onClick(){return connector.killSession();}},\"Disconnect\")):React.createElement(React.Fragment,null,React.createElement(\"button\",{onClick:handleConnectWallet},\"Connect Wallet\"))));}","import React from'react';import styles from'../../styles/Home.module.css';function DAppList(props){var dapps=props.dapps;return React.createElement(\"div\",{className:styles.container},React.createElement(\"h3\",null,\"Top DApps\"),React.createElement(\"ul\",null,dapps.map(function(dapp){return React.createElement(\"li\",{key:dapp.name},React.createElement(\"a\",{href:dapp.url,target:'_blank'},dapp.name,\" \\u2197\"));})));}export{DAppList};"],"names":["ChainType","mainNetClient","algosdk","testNetClient","clientForChain","chain","MainNet","TestNet","Error","apiGetTxnParams","params","_regeneratorRuntime","_context","prev","next","getTransactionParams","do","sent","abrupt","stop","Promise","apiSubmitTransactions","stxns","_await$clientForChain","txId","_context2","sendRawTransaction","waitForTransaction","client","lastStatus","lastRound","status","_context3","pendingTransactionInformation","statusAfterBlock","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","bind","Array","isArray","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","done","value","TypeError","arr","len","arr2","testAccounts","signTxnWithTestAccount","txn","_step","sender","publicKey","_iterator","testAccount","addr","signTxn","sk","getAssetIndex","getAssetReserve","getAppIndex","scenarios","scenario","address","suggestedParams","txnsToSign","to","amount","note","Uint8Array","Buffer","message","assetIndex","_context4","closeRemainderTo","appIndex","_context5","appArgs","_context6","_context7","_context8","dapps","url","AlgoExample","_useState","useState","_useState2","_slicedToArray","connector","setConnector","_useState3","_useState4","setAccounts","_useState5","_useState6","setAddress","_useState7","_useState8","connected","setConnected","_useState9","_useState10","setChain","_useState11","_useState12","formattedResult","setFormattedResult","_useState13","_useState14","signedTxns","setSignedTxns","handleSessionUpdate","useCallback","accounts","handleConnected","payload","handleResetApp","handleDisconnected","subscribeToEvents","on","error","console","log","_accounts","_address","handleConnectWallet","WalletConnect","storageId","bridge","qrcodeModal","QRCodeModal","window","wcConnector","createSession","network","handleSignTxnScenario","flatTxns","walletTxns","result","indexToGroup","signedPartialTxns","_signedTxns","signedTxnInfo","_formattedResult","reduce","acc","val","concat","map","_ref","signers","authAddr","sendCustomRequest","method","index","group","groupLength","forEach","r","_toSign$signers2","_indexToGroup","_indexToGroup2","groupIndex","toSign","_toSign$signers","undefined","push","rawSignedTxn","signedPartialTxnsInternal","stxn","signedTxn","txID","unsignedTxID","sig","signingAddress","sgnr","signature","body","t0","handleSubmitTxs","confirmedRound","handleKissSession","killSession","React","DAppList","onChange","event","s","stringToChainType","target","onClick","JSON","stringify","_ref2","key","props","className","styles","dapp","href"],"sourceRoot":""}