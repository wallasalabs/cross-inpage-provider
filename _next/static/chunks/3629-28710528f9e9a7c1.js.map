{"version":3,"file":"static/chunks/3629-28710528f9e9a7c1.js","mappings":"2qDAoBgB,EAAYA,GAM1B,GAAiC,aAA7B,UAAwC,CAC1C,IAAIC,EAAqBC,SAASC,eAClC,SAAmB,WAEbD,SAASC,gBAAkBF,GAAsBC,SAASE,SAASJ,KACrE,QAAsBA,WAI1B,QAAsBA,GCazB,SAQe,EAAiBA,EAAkBK,GACjD,MACuB,aAArBL,EAAQM,UAhDT,SAEqBN,GACtB,KAAMA,aAAmBO,gBAAkBP,aAAmBQ,YAC5D,OAAO,EAGT,MAA4BR,EAAQS,MAA/BC,EAAL,EAAKA,QAASC,EAAd,EAAY,WAERC,EACU,SAAZF,GACe,WAAfC,GACe,aAAfA,EAGF,GAAIC,EAAW,CACb,IACA,GAAiEC,EADtCb,EAAQc,cAAcC,YAA1CF,kBAC2Eb,GAApEgB,EAAd,EAAKN,QAAsCO,EAA3C,EAA+BN,WAE/BC,EACsB,SAApBI,GACuB,WAAvBC,GACuB,aAAvBA,EAIJ,OAAOL,EAuBL,CAAeZ,IAtBlB,SAE2BA,EAAkBK,GAC5C,OACGL,EAAQkB,aAAa,YACA,YAArBlB,EAAQM,WACPD,GAC0B,YAA1BA,EAAaC,UACXN,EAAQkB,aAAa,SAezB,CAAmBlB,EAASK,MAC1BL,EAAQmB,eAAiB,EAAiBnB,EAAQmB,cAAenB,ICMvE,IAAM,EAAe,gBAAmC,MAEpD,EAAwB,KAA5B,SAYgB,EAAWoB,GACzB,IAMkB,EANbC,EAA8CD,EAA9CC,SAAUC,EAAoCF,EAAtC,QAAWG,EAA2BH,EAA7B,aAAgBI,EAAaJ,EAAf,UAChCK,GAAW,IAAAC,UACXC,GAAS,IAAAD,UACTE,GAAW,IAAAF,QAAkB,IAC7BG,GAAM,IAAAC,YAAW,GAEjBC,EAA2B,QAAb,EAAG,OAAHF,QAAA,IAAAA,OAAA,EAAAA,EAAKD,gBAAQ,IAAb,IAAiB,MAEnC,SAAgB,WAGd,IADA,IAAII,EAAOP,EAASQ,QAAQC,YACxBC,EAAQ,GACLH,GAAQA,IAASL,EAAOM,SAC7BE,EAAMC,KAAKJ,GACXA,EAAOA,EAAKE,YAGdN,EAASK,QAAUE,IAClB,CAACd,EAAUU,IAIV,EAAeM,YAAYN,KAAiB,EAAeM,YAAYT,IACzE,EAAeU,YAAYV,EAAUG,GAG5B,EAAeM,YAAYT,GACjCN,QAAUA,EA6IhB,SAE4BM,EAAgCN,GAC3D,IAAIiB,GAAc,IAAAb,UAEdc,GAAM,IAAAd,QAAO,OACjB,SAAgB,WACd,IAAI,EAAQE,EAASK,QACrB,GAAKX,EAAL,CAUA,IAAImB,EAAS,SAAIC,GACf,KAAc,QAAVA,EAAEC,KAAiBD,EAAEE,QAAUF,EAAEG,SAAWH,EAAEI,UAAY,EAAmBlB,GAAjF,CAIA,IAAImB,EAAiB7C,SAASC,cAC1B6C,EAAQpB,EAASK,QACrB,GAAK,EAAiBc,EAAgBC,GAAtC,CAIA,IAAIC,EAAS,EAAuB,EAAaD,GAAQ,CAACE,UAAU,GAAOF,GAC3EC,EAAOE,YAAcJ,EACrB,IAAIK,EAAeV,EAAEW,SAAWJ,EAAOK,eAAiBL,EAAOM,WAC1DH,IACHH,EAAOE,YAAcT,EAAEW,SAAWL,EAAMA,EAAMQ,OAAS,GAAGC,mBAAqBT,EAAM,GAAGU,uBACxFN,EAAeV,EAAEW,SAAWJ,EAAOK,eAAiBL,EAAOM,YAG7Db,EAAEiB,iBACEP,GACF,EAAaA,GAAa,MAI1BQ,EAAO,SAAIlB,IAGR,GAAe,EAAgB,EAAad,IAC/C,EAAcA,EACdW,EAAYN,QAAUS,EAAEmB,QACf,EAAmBjC,KAAc,EAAsBc,EAAEmB,OAAQjC,GAGtEW,EAAYN,QACdM,EAAYN,QAAQ6B,QACX,GACT,EAAkB,EAAY7B,SAEvB,EAAmBL,KAC5BW,EAAYN,QAAUS,EAAEmB,SAIxBE,EAAM,SAAIrB,GAEZF,EAAIP,QAAU+B,uBAAsB,WAE9B,EAAmBpC,KAAc,EAAsB1B,SAASC,cAAeyB,KACjF,EAAcA,EACV1B,SAAS+D,KAAK7D,SAASsC,EAAEmB,SAC3BtB,EAAYN,QAAUS,EAAEmB,OACxBtB,EAAYN,QAAQ6B,SACX,GACT,EAAkB,EAAY7B,cAUtC,OAJA/B,SAASgE,iBAAiB,UAAWzB,GAAW,GAChDvC,SAASgE,iBAAiB,UAAWN,GAAS,GAC9C,EAAMO,SAAO,SAACnE,GAAD,OAAYA,EAAQkE,iBAAiB,UAAWN,GAAS,MACtE,EAAMO,SAAO,SAACnE,GAAD,OAAYA,EAAQkE,iBAAiB,WAAYH,GAAQ,MAC/D,WACL7D,SAASkE,oBAAoB,UAAW3B,GAAW,GACnDvC,SAASkE,oBAAoB,UAAWR,GAAS,GACjD,EAAMO,SAAO,SAACnE,GAAD,OAAYA,EAAQoE,oBAAoB,UAAWR,GAAS,MACzE,EAAMO,SAAO,SAACnE,GAAD,OAAYA,EAAQoE,oBAAoB,WAAYL,GAAQ,OA5ErEvB,EAAIP,UACNoC,qBAAqB7B,EAAIP,SACzBO,EAAIP,QAAU,QA4EjB,CAACL,EAAUN,KAGd,IAAAgD,YAAU,WACR,OAAO,WACD9B,EAAIP,SACNoC,qBAAqB7B,EAAIP,YAG5B,CAACO,IA5OJ,CAAoBZ,EAAUN,GAyT/B,SAEwBM,EAAgCL,EAAuBD,GAE9E,IAAMiD,GAAmB,IAAA7C,QAA2B,qBAAbxB,SAA2BA,SAASC,cAAoC,OAI/G,SAAgB,WACd,IAAI6C,EAAQpB,EAASK,QACrB,GAAKV,IAAgBD,EAArB,CAIA,IAAIsC,EAAO,WAGJ,IAAe,EAAgB,EAAahC,KAC/C,EAAcA,IAMlB,OAFA1B,SAASgE,iBAAiB,UAAWN,GAAS,GAC9CZ,EAAMmB,SAAO,SAACnE,GAAD,OAAYA,EAAQkE,iBAAiB,UAAWN,GAAS,MAC/D,WACL1D,SAASkE,oBAAoB,UAAWR,GAAS,GACjDZ,EAAMmB,SAAO,SAACnE,GAAD,OAAYA,EAAQoE,oBAAoB,UAAWR,GAAS,UAE1E,CAAChC,EAAUN,KAGd,SAAgB,WAEd,GADA,EAAee,YAAYT,GAAU4C,cAAgBD,EAAiBtC,QACjEV,EAAL,CAQA,IAAIkB,EAAS,SAAIC,GACf,KAAc,QAAVA,EAAEC,KAAiBD,EAAEE,QAAUF,EAAEG,SAAWH,EAAEI,SAAlD,CAIA,IAAIC,EAAiB7C,SAASC,cAC9B,GAAK,EAAiB4C,EAAgBnB,EAASK,SAA/C,CAGA,IAAIuC,EAAgB,EAAenC,YAAYT,GAAU4C,cAGrDvB,EAAS,EAAuB/C,SAAS+D,KAAM,CAACf,UAAU,IAG9DD,EAAOE,YAAcJ,EACrB,IAAIK,EAAeV,EAAEW,SAAWJ,EAAOK,eAAiBL,EAAOM,WAS/D,GAPKrD,SAAS+D,KAAK7D,SAASoE,IAAkBA,IAAkBtE,SAAS+D,OACvEO,EAAgB,KAChB,EAAenC,YAAYT,GAAU4C,cAAgB,QAKjDpB,IAAgB,EAAiBA,EAAaxB,EAASK,WAAauC,EAAe,CACvFvB,EAAOE,YAAcqB,EAArB,GAIEpB,EAAeV,EAAEW,SAAWJ,EAAOK,eAAiBL,EAAOM,iBACpD,EAAiBH,EAAaxB,EAASK,UAEhDS,EAAEiB,iBACFjB,EAAE+B,kBACErB,EACF,EAAaA,GAAa,GAtJ3B,EA2J0BoB,GAGvB,EAAaA,GAAe,GAF5BzB,EAAe2B,WAYvB,OAJKpD,GACHpB,SAASgE,iBAAiB,UAAWzB,GAAW,GAG3C,WACAnB,GACHpB,SAASkE,oBAAoB,UAAW3B,GAAW,GAErD,IAAI+B,EAAgB,EAAenC,YAAYT,GAAU4C,cAGzD,GACEjD,GACGiD,IAED,EAAiBtE,SAASC,cAAeyB,EAASK,UAC9C/B,SAASC,gBAAkBD,SAAS+D,MAAQ,IAAgBrC,GAElE,CAEA,IAAI+C,EAAa,EAAeC,QAChCZ,uBAAsB,WAEpB,GAAI9D,SAASC,gBAAkBD,SAAS+D,KAEtC,QAAIY,EAAWF,EAAWtC,YAAYT,GAC/BiD,GAAU,CACf,GAAIA,EAASL,eAAiBtE,SAAS+D,KAAK7D,SAASyE,EAASL,eAE5D,YADA,EAAaK,EAASL,eAGxBK,EAAWA,EAASC,gBAM7B,CAAClD,EAAUL,EAAcD,IAxb5B,CAAgBM,EAAUL,EAAcD,GA2SzC,SAEqBM,EAAgCJ,GACpD,IAAMuD,EAAe,SAAavD,IAClC,IAAA8C,YAAU,WACJS,EAAa9C,UACf,EAAcL,EACT,EAAiB1B,SAASC,cAAe,EAAY8B,UACxD,EAAkBL,EAASK,UAG/B8C,EAAa9C,SAAU,IACtB,CAACL,IAtTJ,CAAaA,EAAUJ,IAGvB,SAAgB,WACd,GAAII,IAAaG,GAA8B,MAAfA,GAC9B,OAAO,WAKFH,IAAa,IAAe,EAAgBA,EAAU,IACrDG,IAAe,EAAeM,YAAYN,KAE5C,EAAcA,GAEhB,EAAeiD,eAAepD,MAGjC,CAACA,EAAUG,IAEd,IAAIkD,EAkBL,SAEmCrD,GAClC,MAAO,CACLsD,UADK,WACsC,IAAjCC,EAAgC,uDAAJ,GAChCnC,EAAQpB,EAASK,QAChBmD,EAAgCD,EAAhCC,KAAMlC,EAA0BiC,EAA5B,SAAYE,EAAgBF,EAAlB,KAAQG,EAAUH,EAAZ,OACrBnD,EAAOoD,GAAQlF,SAASC,cACxBoF,EAAWvC,EAAM,GAAGU,uBACpBT,EAAS,EAAuB,EAAaD,GAAQ,CAACE,SAAAA,EAAD,OAAWoC,GAAStC,GAC7EC,EAAOE,YAAc,EAAiBnB,EAAMgB,GAAShB,EAAOuD,EAC5D,IAAIhC,EAAWN,EAAOM,WAQtB,OAPKA,GAAY8B,IACfpC,EAAOE,YAAcoC,EACrBhC,EAAWN,EAAOM,YAEhBA,GACF,EAAaA,GAAU,GAElBA,GAETiC,cAlBK,WAkB0C,IAAjCL,EAAgC,uDAAJ,GACpCnC,EAAQpB,EAASK,QAChBmD,EAAgCD,EAAhCC,KAAMlC,EAA0BiC,EAA5B,SAAYE,EAAgBF,EAAlB,KAAQG,EAAUH,EAAZ,OACrBnD,EAAOoD,GAAQlF,SAASC,cACxBoF,EAAWvC,EAAMA,EAAMQ,OAAS,GAAGC,mBACnCR,EAAS,EAAuB,EAAaD,GAAQ,CAACE,SAAAA,EAAD,OAAWoC,GAAStC,GAC7EC,EAAOE,YAAc,EAAiBnB,EAAMgB,GAAShB,EAAOuD,EAC5D,IAAIjC,EAAeL,EAAOK,eAQ1B,OAPKA,GAAgB+B,IACnBpC,EAAOE,YAAcoC,EACrBjC,EAAeL,EAAOK,gBAEpBA,GACF,EAAaA,GAAc,GAEtBA,GAETmC,WAnCK,WAmCkB,IAAZN,EAAW,uDAAJ,GACZnC,EAAQpB,EAASK,QAChBiB,EAAoBiC,EAApBjC,SAAUoC,EAAUH,EAAZ,OACTlC,EAAS,EAAuB,EAAaD,GAAQ,CAACE,SAAAA,EAAD,OAAWoC,GAAStC,GAC7EC,EAAOE,YAAcH,EAAM,GAAGU,uBAC9B,IAAIH,EAAWN,EAAOM,WAItB,OAHIA,GACF,EAAaA,GAAU,GAElBA,GAETmC,UA9CK,WA8CiB,IAAZP,EAAW,uDAAJ,GACXnC,EAAQpB,EAASK,QAChBiB,EAAoBiC,EAApBjC,SAAUoC,EAAUH,EAAZ,OACTlC,EAAS,EAAuB,EAAaD,GAAQ,CAACE,SAAAA,EAAD,OAAWoC,GAAStC,GAC7EC,EAAOE,YAAcH,EAAMA,EAAMQ,OAAS,GAAGC,mBAC7C,IAAIH,EAAeL,EAAOK,eAI1B,OAHIA,GACF,EAAaA,GAAc,GAEtBA,IA5EQ,CAA2B1B,GAE9C,OAAO,gBACJ,EAAa+D,SAAQ,CAACC,MAAO,CAAChE,SAAAA,EAAD,aAAWqD,IADrC,gBAED,OAAI,CAAC,4BAAuBY,QAAA,EAAOC,IAAKrE,IACxCJ,EAAQ,gBACR,OAAI,CAAC,0BAAqBwE,QAAA,EAAOC,IAAKnE,KA2E7C,IAAM,EAAoB,CACxB,2CACA,yBACA,2BACA,yBACA,UACA,aACA,UACA,SACA,SACA,QACA,kBACA,kBACA,qBAGI,EAA6B,EAAkBoE,KAAK,mBAAqB,4CAE/E,EAAkB3D,KAAK,mDACvB,IAAM,EAA4B,EAAkB2D,KAAK,wCAAzD,SAES,EAAa/C,GACpB,OAAOA,EAAM,GAAG7B,cACjB,SAEQ,EAAmBS,GAC1B,QAAIoB,EAAQ,EAAeX,YAAY,GAChCW,GAASA,EAAMpB,WAAaA,GAAU,CAC3C,GAAIoB,EAAM1B,QACR,OAAO,EAGT0B,EAAQA,EAAM8B,OAGhB,OAAO,EAuGR,SAEQ,EAAiB9E,EAAkBgD,GAC1C,OAAOA,EAAMgD,MAAI,SAAChE,GAAD,OAASA,EAAK5B,SAASJ,MACzC,SAEQ,EAAsBA,GAG7B,IAHwE,IAGxE,EAH+CgD,EAAwB,uDAAN,KAGjE,IAA0B,EAAeiD,SAAS,EAAe5D,YAAYW,OAA7E,aAAsF,CAAC,IAAD,UAAlEkD,EAAkE,EAA5EtE,SACR,GAAI,EAAiB5B,EAASkG,EAAEjE,SAC9B,OAAO,EAIX,OAAO,EACR,SAEQ,EAAgBkE,EAAoBnD,GAC3C,IAD6D,IAChD,EAAT8B,EAAyC,QAAhC,IAAezC,YAAYW,UAA3B,eAAmC8B,OACzCA,GAAQ,CACb,GAAIA,EAAOlD,WAAauE,EACtB,OAAO,EAETrB,EAASA,EAAOA,OAElB,OAAO,EACR,SAEQ,EAAa9E,GAAmD,IAAjBoG,EAAgB,wDACtE,GAAe,MAAXpG,GAAoBoG,GAMjB,GAAe,MAAXpG,EACT,IACEA,EAAQ8D,QACR,MAAO,UART,IACE,EAAY9D,GACZ,MAAOqG,KAUZ,SAEQ,EAAkBrD,GAA4C,IAA1BE,IAAyB,yDAChEqC,EAAWvC,EAAM,GAAGU,uBACpBT,EAAS,EAAuB,EAAaD,GAAQ,CAACE,SAAAA,GAAWF,GACrEC,EAAOE,YAAcoC,EACrB,IAAIhC,EAAWN,EAAOM,WAGlBL,IAAaK,KACfN,EAAS,EAAuB,EAAaD,GAAQ,CAACE,UAAU,GAAQF,IACjEG,YAAcoC,EACrBhC,EAAWN,EAAOM,YAGpB,EAAaA,GA+Id,SAMe,EAAuB+C,EAAenB,EAA4BnC,GAChF,IAAIuD,GAAe,OAAJpB,QAAA,IAAAA,OAAA,EAAAA,EAAMjC,UAAW,EAA4B,EACxDD,EAAS/C,SAASsG,iBACpBF,EACAG,WAAWC,aACX,CACEC,WADF,SACa3E,GAAO,IAEZ,EAAJ,OAAQ,OAAJmD,QAAA,IAAAA,GAAU,QAAV,EAAAA,EAAMC,YAAN,eAAYhF,SAAS4B,IAChByE,WAAWG,eAGf5E,EAAiB6E,QAAQN,KACzB,EAAiBvE,IACfgB,IAAS,EAAiBhB,EAAiBgB,KACvC,OAAJmC,QAAA,IAAAA,OAAA,EAAAA,EAAMG,UAAUH,EAAKG,OAAOtD,GAK5ByE,WAAWK,YAHTL,WAAWM,iBAY1B,OAJQ,OAAJ5B,QAAA,IAAAA,OAAA,EAAAA,EAAMC,QACRnC,EAAOE,YAAcgC,EAAKC,MAGrBnC,EA+FR,IAGK,2BAIW,eAJjB,KAEU+D,QAAU,IAAIC,IAGpBC,KAAKZ,KAAO,IAAI,EAAS,CAAC1E,SAAU,OACpCsF,KAAKF,QAAQG,IAAI,KAAMD,KAAKZ,MAoE7B,OAnEA,0BAEG,WACF,OAAOY,KAAKF,QAAQI,OACrB,yBAED,SAAYC,GACV,OAAOH,KAAKF,QAAQM,IAAID,KACzB,yBAED,SAAYzF,EAAoBkD,EAAkBN,GAChD,IAAI+C,EAAaL,KAAKF,QAAQM,IAAU,OAANxC,QAAM,IAANA,EAAAA,EAAU,MACxC9C,EAAO,IAAI,EAAS,CAACJ,SAAAA,IACzB2F,EAAWC,SAASxF,GACpBA,EAAK8C,OAASyC,EACdL,KAAKF,QAAQG,IAAIvF,EAAUI,GACvBwC,IACFxC,EAAKwC,cAAgBA,KAExB,4BAED,SAAe5C,GAEb,GAAiB,OAAbA,EAAJ,CAOA,IAJA,IAIA,EAJII,EAAOkF,KAAKF,QAAQM,IAAI1F,GACxB2F,EAAavF,EAAK8C,OAGtB,IAAoBoC,KAAKjB,cAAzB,kBAAShE,EAAT,QAEIA,IAAYD,GACZA,EAAKwC,eACLvC,EAAQuC,eACRxC,EAAKJ,SAASK,SACd,EAAiBA,EAAQuC,cAAexC,EAAKJ,SAASK,WAEtDA,EAAQuC,cAAgBxC,EAAKwC,eAGjC,IAAInD,EAAWW,EAAKX,SACpBkG,EAAWE,YAAYzF,GACnBX,EAASmC,OAAS,GACpBnC,EAAS8C,SAAO,SAACuD,GAAD,OAAUH,EAAWC,SAASE,MAEhDR,KAAKF,QAAQW,OAAO3F,EAAKJ,aAC1B,gCAGA,SAAAqE,IAAA,4FACsB,OADbjE,EAAT,+BAA0BkF,KAAKZ,MACrB1E,SADV,gBAC0B,OAD1B,SAESI,EAFT,YAIKA,EAAKX,SAASmC,OAAS,GAJ5B,qBAKqBxB,EAAKX,UAL1B,wCAKkC,OAAtBqG,EALZ,QAKkC,gBACtBR,KAAKjB,SAASyB,GADQ,QALlC,2DAAAzB,EAAA,6BAWD,WAEE,IADA,IACA,EADI2B,EAAU,IAAI,EAClB,IAAiBV,KAAKjB,cAAtB,kBAASjE,EAAT,QACE4F,EAAQtF,YAAYN,EAAKJ,SAAUI,EAAK8C,OAAOlD,SAAUI,EAAKwC,eAEhE,OAAOoD,MACR,EA1EG,GA6EA,wBAOQxG,IAA8B,eAP5C,KAISC,SAAuB,GAJhC,KAKSC,SAAU,EAGf4F,KAAKtF,SAAWR,EAAMQ,SASvB,OARA,gCACD,SAASI,GACPkF,KAAK7F,SAASe,KAAKJ,GACnBA,EAAK8C,OAASoC,OACf,yBACD,SAAYlF,GACVkF,KAAK7F,SAASwG,OAAOX,KAAK7F,SAASyG,QAAQ9F,GAAO,GAClDA,EAAK8C,YAASiD,MACf,EAjBG,GAoBK,EAAiB,IAAI,EAAzB,SC1uBS,IAA6D,IAAhD3G,EAA+C,uDAAnB,GACvD,EAIIA,EAJC,UACHI,OADF,SAEEwG,EAEE5G,EAHe,YAEjB6G,EACE7G,EAFS,OAGT8G,GAAQ,IAAAxG,QAAO,CACjByG,WAAW,EACXC,eAAgB5G,IAAa,WAE/B,GAA8B,IAAA6G,WAAS,GAAvC,eAAK,EAAL,KAAgBC,EAAhB,KACA,GAA6C,IAAAD,WAAS,WAAD,OAAOH,EAAMjG,QAAQkG,WAAaD,EAAMjG,QAAQmG,kBAArG,eAAKG,EAAL,KAA0BC,EAA1B,KAEIC,GAAc,IAAAC,cAAY,WAAD,OAAOF,EAAgBN,EAAMjG,QAAQkG,WAAaD,EAAMjG,QAAQmG,kBAAiB,IAE1GO,GAAgB,IAAAD,cAAY,SAAAP,GAC9BD,EAAMjG,QAAQkG,UAAYA,EAC1BG,EAAWH,GACXM,MACC,CAACA,KAEJ,SAAwB,SAACL,GACvBF,EAAMjG,QAAQmG,eAAiBA,EAC/BK,MACC,GAAI,CAACT,YAAAA,IAER,OAAmB,QAAS,CAC1BY,WAAYX,EADc,cAE1BU,IAFGE,EAAL,EAAKA,WAKL,GAAyB,QAAe,CACtCD,YAAaX,EACba,oBAAqBH,IAFlBI,EAAL,EAAKA,iBAKL,MAAO,CAAC,UACN,EACAX,eAAgBF,EAAMjG,QAAQkG,WAAaI,EAC3CM,WAAYZ,EAASc,EAAmBF,GC5C5C,IAAI,EAAmB,gBAA2C,MA4BzC,cAftB,SACwBzH,EAA+B0E,GACxD,IAAKzE,EAA2BD,EAA3BC,SACD2H,EAAO,QADX,OAAgC5H,EAAhC,IACW,QAET0E,IAGF,OAAO,gBACJ,EAAiBH,SAAQ,CAACC,MAAOoD,GAC/B3H,M,6OCjDP,IAAM4H,EAAa,SAAC,GAAsD,IAAtD,EAAqD,EAArD,WAAqD,EAArD,QAAwB7H,GAA6B,YAIvE,OACE,qBAAgBE,QAASA,GAAzB,GADF,K,wKCEE4H,EAAgB,aAuBpB,IAAIC,EAvBJ,WAGE,IAAIC,GAAY,EAGhB,GAAIC,EAAAA,UACF,IACE,IAAIC,EAAU,GACdC,OAAOC,eAAeF,EAAS,UAAW,CACxChC,IAAK,WAEH,OADA8B,GAAY,GACL,KAGXK,OAAOvF,iBAAiB,OAAQ,KAAMoF,GACtCG,OAAOrF,oBAAoB,OAAQ,KAAMkF,GACzC,MAAO5G,IAGX,OAAO0G,EAGiBM,GAavB,SAGMC,IACP,OAAOzC,KAAK0C,aACb,SAEQC,IACP,OAAO3C,KAAK4C,iBAeC,SAASC,EAAkBC,EAAMV,GAC9C,IAAInE,EArCN,SAEoBmE,GAClB,OAAe,MAAXA,IAIGH,EAAsBG,EAAUW,QAAQX,EAAQY,UA8B5CC,CAAWb,GACtB,OAAO,SAAUzF,EAAQuG,GACvB,GAAc,MAAVvG,GAAqD,oBAA5BA,EAAOK,iBAClC,MAAM,IAAImG,MAAM,mDAGlB,IAAIrK,EAAU6D,EAEd,GAAgB,MAAZuG,EAAkB,CACpB,IAAIE,EAAiB,SAAwB5H,GAC3C,OAAO0H,IAvBSG,EAuBe7H,GAtB/B8H,YAAcD,EACpBA,EAAME,QAAUvB,EAChBqB,EAAMV,mBAAqBA,EAC3BU,EAAMZ,qBAAuBA,EACtBY,IAPR,IAEuBA,GA2BlB,OADAvK,EAAQkE,iBAAiB8F,EAAMM,EAAgBnF,GACxC,WACU,MAAXnF,GACFA,EAAQoE,oBAAoB4F,EAAMM,EAAgBnF,IAItD,OAAO+D,GCjFb,IAMIwB,EACAC,EAHAC,EAAiB,WACjBC,EAAW,WAGXC,GAAyB,EACzBC,EAAY,IAAIC,IAChBC,EAAW,WACXC,EAAQ,QACRC,EAAQ,QAERC,EAAc,cAGdC,EAAY,YACZC,EAAY,YACZC,EAAU,UACVC,EAAc,cACdC,EAAc,cACdC,EAAS,SACTC,EAAkB,kBAClBC,EAAc,cACdC,EAAY,YACZC,EAAa,aAEbC,EAAgB,CAClBC,SAAS,GAEPC,EAAiB,CACnB/B,SAAS,EACT8B,SAAS,GAGPE,EAAkBnC,EAvBX,OAuBmCgC,GAC1CI,EAAmBpC,EAtBX,QAsBoCgC,GAG5CK,EAA8BrC,EAbX,mBAa+CkC,GAClEI,EAAqBtC,EAzBX,UAyBsCkC,GAChDK,EAAyBvC,EAAkByB,EAAaS,GACxDM,EAAyBxC,EAAkB0B,EAAaQ,GAExDO,EAAyBzC,EAAkBqB,EAAaa,GACxDQ,EAAuB1C,EAAkBsB,EAAWY,GACpDS,EAAuB3C,EAAkBuB,EAAWW,GACpDU,EAAqB5C,EAAkBwB,EAASU,GAChDW,EAAoB7C,EAAkB2B,EAAQO,GAC9CY,EAA6B9C,EAAkB4B,EAAiBM,GAChEa,EAAyB/C,EAAkB6B,EAAaK,GACxDc,EAAuBhD,EAAkB8B,EAAWI,GACpDe,EAAwBjD,EAAkB+B,EAAYG,GAA1D,SAESgB,IACiB,MAApBvC,GAAsD,MAA1BC,IACN,MAApBD,IACFG,EAAWH,EACXA,EAAmB,MAGS,MAA1BC,IACFC,EAAiBD,EACjBA,EAAyB,MAG3BuC,KAkCH,SAEQC,EAAa5C,GACpB,IAAI6C,EAAY7C,EAAMP,KAEtB,GAzGkE,MAAvBP,OAAO4D,aAyGtB,CAC1B,GAAID,IAAc5B,EAOhB,YANIZ,IAAmBL,EAAM+C,cAC3BzC,EAAWN,EAAM+C,YACjB1C,EAAiBL,EAAM+C,YACvBJ,MAMJ,GAAIE,IAAc3B,EAMhB,YALIZ,IAAaN,EAAM+C,cACrBzC,EAAWN,EAAM+C,YACjBJ,UAMD,CAmBD,GAlBKpC,IACCsC,IAAc/B,GACZT,IAAmBM,IACrBL,EAAWK,EACXN,EAAiBM,EACjBgC,KAIAE,IAAc9B,GACZT,IAAaK,IACfL,EAAWK,EACXgC,MAMFE,IAActB,EAahB,OAZAhB,GAAyB,EAErBP,EAAMgD,SAAWhD,EAAMgD,QAAQ/J,OAAS,IAC1CsH,GAAyB,QAGvBF,IAAmBO,IACrBN,EAAWM,EACXP,EAAiBO,EACjB+B,MAQAE,IAAchC,GAAegC,IAAc7B,GAAW6B,IAAczB,GAAmByB,IAAc1B,GAAU0B,IAAcxB,GAAewB,IAAcvB,IAC5Jf,GAAyB,IAsBhC,SAEQoC,IACP,IAAItH,EAAQ,CACVgF,eAAgBA,EAChBC,SAAUA,GAEZE,EAAU5G,SAAQ,SAAUiG,GAC1BA,EAASxE,MAzBTyD,EAAAA,YACF6C,EAAgBzC,QArGjB,WAGCiB,EAAmBG,EACnBF,EAAyBC,EACzBA,EAAiBK,EACjBJ,EAAWI,EACXiC,IAEApC,GAAyB,KA6FzBqB,EAAiB1C,QA5FlB,WAGCwD,OA0FAZ,EAAmBnM,UAzFpB,SAEkBqK,GACbA,EAAMzH,SAAWyH,EAAM3H,QAAU2H,EAAM1H,SAIvCgI,IAAaI,IACfJ,EAAWI,EACXL,EAAiBK,EACjBiC,QAgFFZ,EAAuBpM,SAAUiN,GACjCZ,EAAuBrM,SAAUiN,GACjCf,EAA4BlM,UAhF7B,WAGkC,WAA7BA,SAASsN,iBACXP,OA8EFT,EAAuBtM,SAAUiN,GACjCV,EAAqBvM,SAAUiN,GAC/BT,EAAqBxM,SAAUiN,GAC/BR,EAAmBzM,SAAUiN,GAC7BL,EAAuB5M,SAAUiN,GACjCJ,EAAqB7M,SAAUiN,GAC/BH,EAAsB9M,SAAUiN,GAChCN,EAA2B3M,SAAUiN,GACrCP,EAAkB1M,SAAUiN,I,0BC/Kf,SAASM,EAASlD,EAAOjB,GACtC,IAAIoE,GAAkBC,EAAAA,EAAAA,IAAU,WAC9B,OAAO,IAAI1G,OAET2G,GAAcD,EAAAA,EAAAA,IAAU,WAC1B,IAAIzJ,EAAmB6F,EAAkBQ,EAAOjB,GAChD,OAAO,SAAUzF,EAAQgK,GACvB,IAAIC,EAAuBJ,EAAgBpG,IAAIzD,GAEnB,MAAxBiK,GACFA,IAGc,MAAZD,GACFH,EAAgB/F,OAAO9D,GAGzB,IAAIO,EAAsBF,EAAiBL,EAAQgK,GAEnD,OADAH,EAAgBvG,IAAItD,EAAQO,GACrBA,MAWX,OARA2J,EAAAA,EAAAA,IAAgB,WACd,OAAO,WACLL,EAAgBvJ,SAAQ,SAAU6J,GAChCA,OAEFN,EAAgBO,WAEjB,IACIL,ECjCT,IAAIM,GAAc,GACd/I,GAAO,CACT6G,SAAS,GAEPmC,GAAgB,uBAChBC,GAAkB,yBAEtB,SAISC,GAAoBxK,EAAQmG,EAAMsE,GACzC,IAAI/D,EAAQrK,SAASqO,YAAY,eAE7BC,EAAOF,GAAWJ,GAClBO,EAAeD,EAAKE,QACpBA,OAA2B,IAAjBD,GAAiCA,EAC3CE,EAAkBH,EAAKI,WACvBA,OAAiC,IAApBD,GAAoCA,EACjDE,EAASL,EAAKK,OAElBtE,EAAMuE,gBAAgB9E,EAAM0E,EAASE,EAAYC,GACjDhL,EAAOkL,cAAcxE,GACrB,SAGOyE,GAAezE,GACtB,IAAI+C,EAAc/C,EAAM+C,YACxB,OAAsB,MAAfA,EAAsBA,EFuKtBzC,EEpKM,SAASoE,GAASC,EAAWC,GAC1C,IAAI7N,EAAU6N,EAAO7N,QACjB8N,EAAWD,EAAOC,SAClBC,EAAeF,EAAOE,aACtBC,EAAgBH,EAAOG,cACvBC,EAAgBJ,EAAOI,cACvBC,EAAaL,EAAOK,WACpBC,IA9B8D,MAAvBhG,OAAO4D,cA+B9CqC,EAAkBjC,EAASgC,EAAW,cAAgB,YAAatK,IACnEwK,EAAmBlC,EAASgC,EAAW,eAAiB,aAActK,IACtEyK,EAAmBnC,EAASgC,EAAW,eAAiB,aAActK,IAEtE0K,EAAkBpC,EAASU,GAAehJ,IAC1C2K,EAAoBrC,EAASW,GAAiBjJ,KAClD4I,EAAAA,EAAAA,IAAgB,WACd,IAAIlK,EAASqL,EAAUjN,QAEvB,GAAe,OAAX4B,EAAiB,CAInB,IAAIkM,EAAW,SAAkBrN,GACb,MAAd8M,GACFA,EAAW9M,GAGQ,MAAjB4M,GACFA,GAAc,GAIhBI,EAAgB7L,EAAQ,MACxB+L,EAAiB/L,EAAQ,OAOvBmM,EAAgB,SAAuBtN,GACzC,IAAImB,EAASqL,EAAUjN,QAET,MAAV4B,GAAwC,UAAtBmL,GAAetM,KAC/BpB,GACF+M,GAAoBxK,EAAQuK,IAG9B2B,EAASrN,KAQTuN,EAAe,SAAsBvN,GACb,UAAtBsM,GAAetM,IACI,MAAjB6M,IAES,MAAP7M,EAAEwN,IACJxN,EAAEwN,EAAIxN,EAAEyN,SAGC,MAAPzN,EAAE0N,IACJ1N,EAAE0N,EAAI1N,EAAE2N,SAGVd,EAAc7M,KAShB4N,EAAa,SAAoB5N,GACf,MAAhB2M,GACFA,EAAa3M,GAGM,MAAjB4M,GACFA,GAAc,GAIK,MAAjBC,GACFG,EAAgB7L,EAASuL,EAA0B,KAAfa,GAGtCL,EAAiB/L,EAASuL,EAA2B,KAAhBY,IAkCvCL,EAAiB9L,EAASuL,EAA2B,KA3BjC,SAAuB1M,GACzC,IAAImB,EAASqL,EAAUjN,QAEvB,GAAc,MAAV4B,GAAwC,UAAtBmL,GAAetM,GAAgB,CAC/CpB,GACF+M,GAAoBxK,EAAQsK,IAG9BmC,EAAW5N,GAcXmN,EAAgBhM,EAASuL,EAA0B,KAZhC,SAAsBmB,GACnCA,EAAU1M,SAAWA,GACvBkM,EAASrN,KAWboN,EAAkBjM,EAASuL,EAA4B,KAPlC,SAAwBmB,GACvCA,EAAU1M,SAAWA,GACvByM,EAAW5N,WAWpB,CAACiN,EAAkBD,EAAiBE,EAAkBC,EAAiBC,EAAmBxO,EAAS8N,EAAUC,EAAcC,EAAeC,EAAeC,EAAYN,ICpK1K,IAAIsB,GAAQ,QACRC,GAAQ,QACRC,GAAsB,sBACtBC,GAAgB,gBAChBC,GAAoC,oCACpCC,GAA+B,+BAC/BC,GAAiC,iCAEjCC,GAAoB,oBACpBC,GAAuB,uBACvBC,GAAc1H,OAAO2H,OAAO,CAC9BP,cAAe,CACbH,MAAOC,GACPU,gBAAiBL,GACjBC,kBAAmBN,GACnBO,qBAAsBP,GACtBC,oBAAqBD,IAEvBK,+BAAgC,CAC9BN,MAAOK,GACPM,gBAAiBV,GACjBM,kBAAmBJ,GACnBK,qBAAsBL,GACtBD,oBAAqBD,IAEvBI,6BAA8B,CAC5BL,MAAOC,GACPU,gBAAiBV,GACjBM,kBAAmBJ,GACnBK,qBAAsBL,GACtBD,oBAAqBE,IAEvBA,kCAAmC,CACjCJ,MAAOC,GACPU,gBAAiBV,GACjBM,kBAAmBJ,GACnBK,qBAAsBL,GACtBD,oBAAqBE,IAEvBH,MAAO,CACLD,MAAOG,GACPQ,gBAAiBL,GACjBC,kBAAmBJ,GACnBK,qBAAsBL,GACtBD,oBAAqBC,MAIrBS,GAAiB,SAAwBC,GAC3C,OAAOA,IAAWR,IAAgCQ,IAAWT,IAG3DU,GAAe,SAAsBtR,GACvC,MAAwC,WAAjCA,EAAQuR,aAAa,SAG1BC,GAAqB,SAA4BH,GACnD,OAAOA,IAAWP,IAAkCO,IAAWR,IAAgCQ,IAAWT,IAOxGa,GAAkB,SAAyBlH,GAC7C,IAAI5H,EAAM4H,EAAM5H,IAEZ+O,EADSnH,EAAM1G,OACD0N,aAAa,QAE/B,MAAe,UAAR5O,IADkB,MAARA,GAAuB,aAARA,IACiB,WAAT+O,GAiFtCC,GAA8B,WAAa,IACpCA,EAAT,SAAwBxC,GACtBjI,KAAK0K,eAAiB,KACtB1K,KAAK2K,iBAAkB,EACvB3K,KAAK4K,uBAAyB,KAC9B5K,KAAK6K,sBAAuB,EAC5B7K,KAAK8K,mBAAqB,KAC1B9K,KAAK+K,sBAAwB,KAC7B/K,KAAKgL,YAAcvB,GACnBzJ,KAAKiL,UAAUhD,IAGbiD,EAAST,EAAeU,UAmX5B,OAjXAD,EAAOD,UAAY,SAAmBhD,GACpCjI,KAAKoL,QAAUnD,GAOjBiD,EAAOG,MAAQ,WACbrL,KAAKsL,+BAELtL,KAAKuL,2BAELvL,KAAKwL,+BAOPN,EAAOO,iBAAmB,WAKxB,OAJ2B,MAAvBzL,KAAK0K,iBACP1K,KAAK0K,eAAiB1K,KAAK0L,wBAGtB1L,KAAK0K,gBAGdQ,EAAOQ,qBAAuB,WAC5B,IAAIC,EAAQ3L,KAER4L,EAAQ,SAAevI,EAAOwI,GAChCxI,EAAME,UAENoI,EAAMH,8BAENG,EAAMd,sBAAuB,EAC7Bc,EAAMG,sBAAuB,EAC7BH,EAAMX,YAAcvB,GACpBkC,EAAMhB,gBAA6C,eAA3BtH,EAAMC,YAAYR,KAE1C6I,EAAMI,eAtMU,kBAsMsB1I,GAEtC,IAAI2I,EAAkBC,GAAeN,EAAMP,QAAQY,gBAAiB,EArI7C,KAuIH,IAAhBH,GAAyBG,EAAkB,EAC7CL,EAAMb,mBAAqBoB,YAAW,WACpCP,EAAMI,eAAezC,GAAOjG,KAC3B2I,GAEHL,EAAMI,eAAezC,GAAOjG,GAG9B,IAAI8I,EAAiBF,GAAeN,EAAMP,QAAQe,eAAgB,GAjJtC,KAkJ5BR,EAAMf,uBAAyBsB,YAAW,WACxCP,EAAMS,iBAAiB/I,KACtB8I,EAAiBH,IAGlBK,EAAM,SAAahJ,GACrBsI,EAAMI,eAAelC,GAAmBxG,IAGtCiJ,EAAe,SAASA,EAAajJ,GACvC,IAAIkJ,EAAUZ,EAAMP,QAAQmB,QACxB5P,EAAS0G,EAAM1G,OAEnB,GAAIgP,EAAMX,cAAgBvB,IAAiBc,GAAgBlH,GAAQ,CACjEgJ,EAAIhJ,GACJrK,SAASkE,oBAAoB,QAASoP,GACtC,IAAI9B,EAAO7N,EAAO0N,aAAa,QAC3BmC,EAAc7P,EAAO8P,QAAQC,cAGlB,MAAXH,IAFsC,SAAT/B,GAAmC,MAAhBgC,GAAuC,WAAhBA,GAA4C,UAAhBA,GAA2C,WAAhBA,GAA4C,aAAhBA,IAG5JD,EAAQlJ,KAKd,MAAO,CACLsJ,0BAA2B,SAAmCtJ,GAC5D,IAAI6E,EAAWyD,EAAMP,QAAQlD,SAM7B,OAJIA,GAAYkC,GAAa/G,EAAMuJ,gBACjCvJ,EAAM9F,kBAGQ,MAAZ2K,IAIIA,GAEV3M,UAAW,SAAmB8H,GAC5B,IAAI6E,EAAWyD,EAAMP,QAAQlD,SACzBzM,EAAM4H,EAAM5H,IACZkB,EAAS0G,EAAM1G,OAEnB,IAAKuL,GAAYqC,GAAgBlH,GAAQ,CACnCsI,EAAMX,cAAgBvB,KACxBmC,EAAMvI,GAAO,GAGbrK,SAASgE,iBAAiB,QAASsP,IAGrC,IAAI9B,EAAO7N,EAAO0N,aAAa,SACH,MAAR5O,GAAuB,aAARA,KAEN,WAAT+O,GAA8B,aAATA,IAIvCnH,EAAM5G,iBAGR4G,EAAM9F,oBAGVsP,iBAAkB,SAA0BxJ,GAC1C,OAAOuI,EAAMvI,IAEfyJ,gBAAiB,SAAyBzJ,GACP,MAA7BsI,EAAMP,QAAQ2B,aAChBpB,EAAMP,QAAQ2B,YAAY1J,GAG5B,IAAI2J,EAAQC,GAA2B5J,GAEvC,GAAoC,MAAhCsI,EAAMuB,uBAAgC,CACxC,IAAIC,EAASxB,EAAMuB,uBAAuBE,MAAQJ,EAAMI,MACpDC,EAAS1B,EAAMuB,uBAAuBI,MAAQN,EAAMM,MAEpDC,KAAKC,MAAML,EAAQE,GAAU,IAC/B1B,EAAML,iCAIZmC,mBAAoB,SAA4BpK,GAC9C,OAAOgJ,EAAIhJ,IAEbqK,qBAAsB,SAA8BrK,GACnB,oBAA3BA,EAAMC,YAAYR,OACpB6I,EAAMG,sBAAuB,GAG/BH,EAAMI,eAAejC,GAAsBzG,IAE7CsK,8BAA+B,SAAuCtK,GACpE,IAAIuK,EAAgBjC,EAAMP,QACtB1D,EAAakG,EAAclG,WAC3BQ,EAAW0F,EAAc1F,SACzB2F,EAAcD,EAAcC,YAGhC,SAAK3F,GAA2B,MAAf2F,GAAuBlC,EAAMhB,iBAA8C,gBAA3BtH,EAAMC,YAAYR,QAIjE,MAAd4E,GAIGA,IAUToG,QAAS,SAAiBzK,GACxB,IAAI0K,EAAiBpC,EAAMP,QACvBlD,EAAW6F,EAAe7F,SAC1BqE,EAAUwB,EAAexB,QAExBrE,EAYCkC,GAAa/G,EAAMuJ,gBACrBvJ,EAAM9F,mBATR8F,EAAM9F,kBAEFoO,EAAMd,sBAAwBc,EAAMG,qBACtCzI,EAAM5G,iBACc,MAAX8P,IAAoC,IAAjBlJ,EAAM3H,QAClC6Q,EAAQlJ,KAUd2K,cAAe,SAAuB3K,GACpC,IAAI4K,EAAiBtC,EAAMP,QACvBlD,EAAW+F,EAAe/F,SAC1B2F,EAAcI,EAAeJ,YAE5B3F,EAMCkC,GAAa/G,EAAMuJ,gBACrBvJ,EAAM9F,kBANW,MAAfsQ,GAAuBlC,EAAMhB,kBAAoBtH,EAAMT,mBACzDS,EAAM5G,iBACN4G,EAAM9F,sBAgBhB2N,EAAOa,eAAiB,SAAwB5B,EAAQ9G,GACtD,IAAI6K,EAAYlO,KAAKgL,YACjBmD,EAAY,KAEc,MAA1BpE,GAAYmE,KACdC,EAAYpE,GAAYmE,GAAW/D,IAGjCnK,KAAKgL,cAAgBvB,IAAiBU,IAAWN,KAIpC,MAAbsE,GAAqBA,IAAc5E,GACrC6E,QAAQC,MAAM,kCAAoClE,EAAS,cAAgB+D,EAAY,iBAC9EA,IAAcC,IACvBnO,KAAKsO,8BAA8BJ,EAAWC,EAAWhE,EAAQ9G,GAEjErD,KAAKgL,YAAcmD,KASvBjD,EAAOoD,8BAAgC,SAAuCJ,EAAWC,EAAWhE,EAAQ9G,GAQ1G,GAxWmB,SAA0B8G,GAC/C,OAAOA,IAAWL,IAAwBK,IAAWN,GAgW/C0E,CAAiBpE,KACnBnK,KAAK2K,iBAAkB,EACvB3K,KAAKkN,uBAAyB,KAE9BlN,KAAKsL,gCAGHhB,GAAmB4D,IAAc/D,IAAWX,GAAqB,CACnE,IAAIqE,EAAc7N,KAAKoL,QAAQyC,YAGZ,MAAfA,GAAgD,MAAzBxK,EAAMC,YAAY7H,MAC3CoS,EAAYxK,GACZrD,KAAK6K,sBAAuB,GAIhC,IAAI2D,EAAetE,GAAegE,GAC9BO,EAAevE,GAAeiE,GAQlC,IANKK,GAAgBC,EACnBzO,KAAK0O,UAAUrL,GACNmL,IAAiBC,GAC1BzO,KAAK2O,YAAYtL,GAGfiH,GAAmB4D,IAAc/D,IAAWN,GAAmB,CACjE,IAAI+E,EAAiB5O,KAAKoL,QACtByD,EAAeD,EAAef,YAGlC,GAAe,MAFDe,EAAerC,QAGsB,MAAhBsC,GAAwBX,IAAcxE,IAIhE+E,GAAiBD,IACpBxO,KAAK0O,UAAUrL,GAEfrD,KAAK2O,YAAYtL,IAMzBrD,KAAKuL,4BAGPL,EAAOwD,UAAY,SAAmBrL,GACpC,IAAIyL,EAAiB9O,KAAKoL,QACtB2D,EAAgBD,EAAeC,cAC/BC,EAAeF,EAAeE,aAC9BhC,EAAQC,GAA2B5J,GACvCrD,KAAKkN,uBAAyB,CAC5BE,MAAOJ,EAAMI,MACbE,MAAON,EAAMM,OAGK,MAAhB0B,GACFA,EAAa3L,GAGM,MAAjB0L,GACFA,GAAc,IAIlB7D,EAAOyD,YAAc,SAAqBtL,GAAQ,IAKvCgJ,EAAT,WACoB,MAAd4C,GACFA,EAAW5L,GAGQ,MAAjB0L,GACFA,GAAc,IAVdG,EAAiBlP,KAAKoL,QACtB2D,EAAgBG,EAAeH,cAC/BE,EAAaC,EAAeD,WAY5BE,EAAgBlD,GAAejM,KAAKoL,QAAQ+D,eAE5CA,EAAgB,EAClBnP,KAAK+K,sBAAwBmB,YAAW,WACtCG,MACC8C,GAEH9C,KAIJnB,EAAOkB,iBAAmB,SAA0B/I,GAC9CrD,KAAKgL,cAAgBrB,IAAgC3J,KAAKgL,cAAgBtB,IAC5E1J,KAAK+L,eAAevC,GAAqBnG,IAI7C6H,EAAOI,6BAA+B,WACD,MAA/BtL,KAAK4K,yBACPwE,aAAapP,KAAK4K,wBAClB5K,KAAK4K,uBAAyB,OAIlCM,EAAOK,yBAA2B,WACD,MAA3BvL,KAAK8K,qBACPsE,aAAapP,KAAK8K,oBAClB9K,KAAK8K,mBAAqB,OAI9BI,EAAOM,4BAA8B,WACD,MAA9BxL,KAAK+K,wBACPqE,aAAapP,KAAK+K,uBAClB/K,KAAK+K,sBAAwB,OAI1BN,EA/XyB,GAAlC,SAoYSwB,GAAeoD,EAAOC,EAAKC,GASlC,YARY,IAARD,IACFA,EAAM,QAGS,IAAbC,IACFA,EAAW,GAGNhC,KAAKiC,IAAIF,EAAe,OAAVD,QAA4B,IAAVA,EAAmBA,EAAQE,GACnE,SAEQtC,GAA2B5J,GAClC,IAAIoM,EAAqBpM,EAAMC,YAC3BoM,EAAiBD,EAAmBC,eACpCrJ,EAAUoJ,EAAmBpJ,QAEjC,OAAe,MAAXA,GAAmBA,EAAQ/J,OAAS,EAC/B+J,EAAQ,GAGK,MAAlBqJ,GAA0BA,EAAepT,OAAS,EAC7CoT,EAAe,GAGjBrM,EAAMC,Y,4BCrjBF,SAEJqM,KAA2Q,OAA9PA,GAAWtN,OAAOuN,QAAU,SAAUjT,GAAU,IAAK,IAAIkT,EAAI,EAAGA,EAAIC,UAAUxT,OAAQuT,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIpU,KAAOsU,EAAc1N,OAAO8I,UAAU6E,eAAeC,KAAKF,EAAQtU,KAAQkB,EAAOlB,GAAOsU,EAAOtU,IAAY,OAAOkB,GAAkBgT,GAASO,MAAMlQ,KAAM8P,WAgI/S,SAEQK,GAAkBC,GACzB,IAAIC,GAAYlP,EAAAA,EAAAA,WAAS,GAIzB,MAAO,CAHIkP,EAAU,IAGLD,EAFFC,EAAU,IAK1B,IAAIC,GAASC,GAAAA,EAAAA,OAAkB,CAC7BnR,KAAM,CACJoR,OAAQ,UACRC,YAAa,kBAGbC,IAA+BC,EAAAA,EAAAA,OAAmBC,EAAAA,EAAAA,aAjInD,SACgB1W,EAAO2W,GACxB,IAAI1W,EAAWD,EAAMC,SACjBgS,EAAiBjS,EAAMiS,eACvB2E,EAAe5W,EAAM4W,aACrBC,EAAgB7W,EAAM6W,cACtB7I,EAAWhO,EAAMgO,SACjB8I,EAAY9W,EAAM8W,UAClBnU,EAAS3C,EAAM2C,OACfmR,EAAgB9T,EAAM8T,cACtBtR,EAAUxC,EAAMwC,QAChBuU,EAAY/W,EAAM+W,UAClBC,EAAahX,EAAMgX,WACnB3V,EAAYrB,EAAMqB,UAClBsS,EAAc3T,EAAM2T,YACpBtB,EAAUrS,EAAMqS,QAChBQ,EAAc7S,EAAM6S,YACpBoE,EAAYjX,EAAMiX,UAClBC,EAAalX,EAAMkX,WACnB7X,EAAQW,EAAMX,MACd8X,EAAmBnX,EAAMmX,iBACzBC,EAAmBpX,EAAMoX,iBACzBC,EArCuT,SAEtRxB,EAAQyB,GAAY,GAAc,MAAVzB,EAAgB,MAAO,GAAI,IAA2DtU,EAAKoU,EAA5DlT,EAAS,GAAQ8U,EAAapP,OAAOqP,KAAK3B,GAAqB,IAAKF,EAAI,EAAGA,EAAI4B,EAAWnV,OAAQuT,IAAOpU,EAAMgW,EAAW5B,GAAQ2B,EAAS5Q,QAAQnF,IAAQ,IAAakB,EAAOlB,GAAOsU,EAAOtU,IAAQ,OAAOkB,EAmC7RgV,CAA8BzX,EAAO,CAAC,WAAY,iBAAkB,eAAgB,gBAAiB,WAAY,YAAa,SAAU,gBAAiB,UAAW,YAAa,aAAc,YAAa,cAAe,UAAW,cAAe,YAAa,aAAc,QAAS,mBAAoB,qBAEpT0X,EAAqBzB,IAAuC,IAArBkB,GACvCQ,EAAUD,EAAmB,GAC7BE,EAAaF,EAAmB,GAEhCG,EAAsB5B,IAAkB,GACxC6B,EAAUD,EAAoB,GAC9B3Q,EAAa2Q,EAAoB,GAEjCE,EAAsB9B,IAAuC,IAArBmB,GACxCY,EAAUD,EAAoB,GAC9BE,EAAaF,EAAoB,GAEjCG,GAAU5X,EAAAA,EAAAA,QAAO,MACjB6X,GAASC,EAAAA,EAAAA,GAAazB,EAAcuB,GAepCG,ECjES,SAAwBH,EAASnK,GAC9C,IAAIuK,GAAoBhY,EAAAA,EAAAA,QAAO,MAEE,MAA7BgY,EAAkBzX,UACpByX,EAAkBzX,QAAU,IAAI0P,GAAexC,IAGjD,IAAIwK,EAAiBD,EAAkBzX,QAavC,OAXAqC,EAAAA,EAAAA,YAAU,WACRqV,EAAexH,UAAUhD,KACxB,CAACA,EAAQwK,KAGZrV,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLqV,EAAepH,WAEhB,CAACoH,KACJC,EAAAA,EAAAA,eAAczK,GACPwK,EAAehH,mBD6CGkH,CAAeP,GAdtBQ,EAAAA,EAAAA,UAAQ,WACxB,MAAO,CACLzG,eAAgBA,EAChBH,gBAAiB8E,EACjB3B,cAAe4B,EACf7I,SAAUA,EACV2F,YAAaA,EACbtB,QAASA,EACTwC,cAAeoD,EACfnD,aAAcmC,EACdpE,YAAaA,EACbkC,WAAYmC,KAEb,CAACjF,EAAgB2E,EAAcC,EAAe7I,EAAU2F,EAAatB,EAAS4E,EAAWpE,EAAaqE,EAAYe,KAEjHU,EAAqBN,EAAmBvE,cACxC8E,EAAiBP,EAAmBhX,UACxCwM,GAASqK,EAAS,CAChBhY,SAAS,EACT8N,SAAUA,EACVE,cAAe0J,EACf3J,aAAc8I,EACd3I,WAAY4I,IAEd,IAAI6B,EAAmB,CACrBlB,QAASA,EACTG,QAASA,EACTE,QAASA,GAEPc,EAAcC,EAAAA,aAAkB,SAAUzX,GACxCA,EAAE8H,YAAY3G,SAAWyV,EAAQrX,UACnCqG,GAAW,GAEG,MAAVvE,GACFA,EAAOrB,MAGV,CAAC4W,EAAShR,EAAYvE,IACrBqW,EAAeD,EAAAA,aAAkB,SAAUzX,GACzCA,EAAE8H,YAAY3G,SAAWyV,EAAQrX,UACnCqG,GAAW,GAEI,MAAX1E,GACFA,EAAQlB,MAGX,CAAC4W,EAAShR,EAAY1E,IACrByW,EAAqBF,EAAAA,aAAkB,SAAUzX,GACzB,MAAtBqX,GACFA,EAAmBrX,GAGA,MAAjBwS,GACFA,EAAcxS,KAEf,CAACwS,EAAe6E,IACfO,EAAiBH,EAAAA,aAAkB,SAAUzX,GACzB,MAAlBsX,GACFA,EAAetX,GAGA,MAAbD,GACFA,EAAUC,KAEX,CAACD,EAAWuX,IACf,OAAoBG,EAAAA,cAAoBI,GAAAA,EAAM1D,GAAS,GAAI4B,EAAMgB,EAAoB,CACnFe,sBAAuBpL,EACvB8I,WAAY9I,IAA0B,IAAd8I,EACxBnU,OAAQmW,EACRhF,cAAemF,EACfzW,QAASwW,EACT3X,UAAW6X,EACXxU,IAAKyT,EACL9Y,MAAO,EAAE2O,GAAYoI,GAAOlR,KAAuB,oBAAV7F,EAAuBA,EAAMwZ,GAAoBxZ,KACpE,oBAAbY,EAA0BA,EAAS4Y,GAAoB5Y,OAkBpEuW,GAAgB6C,YAAc,YAC9B,U,24CE7JS5D,KAA2Q,OAA9PA,GAAWtN,OAAOuN,QAAU,SAAUjT,GAAU,IAAK,IAAIkT,EAAI,EAAGA,EAAIC,UAAUxT,OAAQuT,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIpU,KAAOsU,EAAc1N,OAAO8I,UAAU6E,eAAeC,KAAKF,EAAQtU,KAAQkB,EAAOlB,GAAOsU,EAAOtU,IAAY,OAAOkB,GAAkBgT,GAASO,MAAMlQ,KAAM8P,WASzS,IAAM/H,GAAW,WACtB,IAAgCkL,EAAqB,GAArBA,EAAAA,UAAe,GAAK,GAA7CO,EAAyBP,EAAqB,GAAnCnB,EAAcmB,EAAqB,GACrD,MAAO,CACLQ,WAAY,CACVxC,UAAW,WAAMa,OAAAA,GAAW,IAC5BZ,WAAY,WAAMY,OAAAA,GAAW,KAE/B0B,UAAAA,IAGSE,GAAW,WACtB,IAAgCT,EAAqB,GAArBA,EAAAA,UAAe,GAAK,GAA7ChS,EAAyBgS,EAAqB,GAAnC7R,EAAc6R,EAAqB,GACrD,MAAO,CACLtR,WAAY,CACVjF,QAAS,WAAM0E,OAAAA,GAAW,IAC1BvE,OAAQ,WAAMuE,OAAAA,GAAW,KAE3BH,UAAAA,IAGS0S,GAAe,WAC1B,IAAkCV,EAAqB,GAArBA,EAAAA,UAAe,GAAK,GAA/CW,EAA2BX,EAAqB,GAArCY,EAAgBZ,EAAqB,GACvD,MAAO,CACLa,eAAgB,CACd3C,UAAW,WAAM0C,OAAAA,GAAa,IAC9BzC,WAAY,WAAMyC,OAAAA,GAAa,KAEjCD,UAAAA,IAGEG,IAAkBC,EAAAA,GAAAA,GAAoBC,IAsE5C,IAA4BtD,EAAAA,EAAAA,OAAmBC,EAAAA,EAAAA,aApE7B,SACb,EAQFhS,GAAS,IARVzE,EAAQ,EAARA,SACAuH,EAAU,EAAVA,WACAwG,EAAQ,EAARA,SACWgM,EAAa,EAAxBV,UACWW,EAAa,EAAxBP,UACWQ,EAAa,EAAxBnT,UACgBoT,EAAkB,EAAlCnT,eACGhH,EAAK,MAPRC,WACAuH,aACAwG,WACAsL,YACAI,YACA3S,YACAC,mBAMI6G,EAAAA,KAFF0L,EAEE1L,EAFF0L,WACAD,EACEzL,EADFyL,UAKEG,EAAAA,KAFFG,EAEEH,EAFFG,eACAF,EACED,EADFC,UAKEF,EAAAA,KAFF/R,EAEE+R,EAFF/R,WACAV,EACEyS,EADFzS,UAKEqT,GAAAA,EAAAA,GAAAA,MAFFpT,EAEEoT,EAFFpT,eACYqT,EACVD,EADF3S,WAUE6S,GAAAA,EAAAA,GAAAA,GAAmB,YAAata,EAAO,CACzC0Z,UAAWO,GAAiBP,EAC5B3S,UAAWmT,GAAiBnT,EAC5BuS,UAAWU,GAAiBV,EAC5BtS,eAAgBmT,GAAsBnT,EACtCQ,WAAYwG,GAAYxG,IAZxByP,EAOEqD,EAPFrD,UACAC,EAMEoD,EANFpD,WACAH,EAKEuD,EALFvD,UACAC,EAIEsD,EAJFtD,WACAxU,EAGE8X,EAHF9X,QACAG,EAEE2X,EAFF3X,OACG4X,EAAa,GACdD,EAMF,CAbArD,YACAC,aACAH,YACAC,aACAxU,UACAG,WAWF,OAAI6X,EAAAA,GAAAA,GAAsBxa,GACjB,KAIW+Y,EAAAA,cAAoBc,GAAiBpE,GAAS,CAChE/Q,IAAKA,EACLuS,WAAWwD,EAAAA,GAAAA,GAAqBxD,EAAW2C,EAAe3C,WAC1DC,YAAYuD,EAAAA,GAAAA,GAAqBvD,EAAY0C,EAAe1C,YAE5DH,WAAW0D,EAAAA,GAAAA,GAAqB1D,EAAWwC,EAAWxC,WAEtDC,YAAYyD,EAAAA,GAAAA,GAAqBzD,EAAYuC,EAAWvC,YAExDxU,SAASiY,EAAAA,GAAAA,IAAqBA,EAAAA,GAAAA,GAAqBjY,EAASiF,EAAWjF,SAAU6X,EAAe7X,SAEhGG,QAAQ8X,EAAAA,GAAAA,IAAqBA,EAAAA,GAAAA,GAAqB9X,EAAQ8E,EAAW9E,QAAS0X,EAAe1X,QAC7FqL,SAAUA,GAAYxG,GACrB+S,GAAoC,oBAAbta,EAA0BA,EAAWA,EAAS,CACtEyZ,UAAAA,EACAJ,UAAAA,EACAvS,UAAAA","sources":["webpack://_N_E/packages/@react-aria/focus/src/focusSafely.ts","webpack://_N_E/packages/@react-aria/focus/src/isElementVisible.ts","webpack://_N_E/packages/@react-aria/focus/src/FocusScope.tsx","webpack://_N_E/packages/@react-aria/focus/src/useFocusRing.ts","webpack://_N_E/packages/@react-aria/focus/src/useFocusable.tsx","webpack://_N_E/FocusScope.web.tsx","webpack://_N_E/./node_modules/react-native-web/dist/modules/createEventHandle/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/modality/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/useEvent/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/useHover/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","webpack://_N_E/./node_modules/react-native-web/dist/exports/Pressable/index.js","webpack://_N_E/./node_modules/react-native-web/dist/modules/usePressEvents/index.js","webpack://_N_E/./node_modules/native-base/lib/module/components/primitives/Pressable/Pressable.js"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusWithoutScrolling, runAfterTransition} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\n\n/**\n * A utility function that focuses an element while avoiding undesired side effects such\n * as page scrolling and screen reader issues with CSS transitions.\n */\nexport function focusSafely(element: FocusableElement) {\n  // If the user is interacting with a virtual cursor, e.g. screen reader, then\n  // wait until after any animated transitions that are currently occurring on\n  // the page before shifting focus. This avoids issues with VoiceOver on iOS\n  // causing the page to scroll when moving focus if the element is transitioning\n  // from off the screen.\n  if (getInteractionModality() === 'virtual') {\n    let lastFocusedElement = document.activeElement;\n    runAfterTransition(() => {\n      // If focus did not move and the element is still in the document, focus it.\n      if (document.activeElement === lastFocusedElement && document.contains(element)) {\n        focusWithoutScrolling(element);\n      }\n    });\n  } else {\n    focusWithoutScrolling(element);\n  }\n}\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction isStyleVisible(element: Element) {\n  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement)) {\n    return false;\n  }\n\n  let {display, visibility} = element.style;\n\n  let isVisible = (\n    display !== 'none' &&\n    visibility !== 'hidden' &&\n    visibility !== 'collapse'\n  );\n\n  if (isVisible) {\n    const {getComputedStyle} = element.ownerDocument.defaultView;\n    let {display: computedDisplay, visibility: computedVisibility} = getComputedStyle(element);\n\n    isVisible = (\n      computedDisplay !== 'none' &&\n      computedVisibility !== 'hidden' &&\n      computedVisibility !== 'collapse'\n    );\n  }\n\n  return isVisible;\n}\n\nfunction isAttributeVisible(element: Element, childElement?: Element) {\n  return (\n    !element.hasAttribute('hidden') &&\n    (element.nodeName === 'DETAILS' &&\n      childElement &&\n      childElement.nodeName !== 'SUMMARY'\n      ? element.hasAttribute('open')\n      : true)\n  );\n}\n\n/**\n * Adapted from https://github.com/testing-library/jest-dom and \n * https://github.com/vuejs/vue-test-utils-next/.\n * Licensed under the MIT License.\n * @param element - Element to evaluate for display or visibility.\n */  \nexport function isElementVisible(element: Element, childElement?: Element) {\n  return (\n    element.nodeName !== '#comment' &&\n    isStyleVisible(element) &&\n    isAttributeVisible(element, childElement) &&\n    (!element.parentElement || isElementVisible(element.parentElement, element))\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {focusSafely} from './focusSafely';\nimport {isElementVisible} from './isElementVisible';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useLayoutEffect} from '@react-aria/utils';\n\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement,\n    /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement\n}\n\ntype ScopeRef = RefObject<Element[]>;\ninterface IFocusContext {\n  scopeRef: ScopeRef,\n  focusManager: FocusManager\n}\n\nconst FocusContext = React.createContext<IFocusContext>(null);\n\nlet activeScope: ScopeRef = null;\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps) {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>();\n  let endRef = useRef<HTMLSpanElement>();\n  let scopeRef = useRef<Element[]>([]);\n  let ctx = useContext(FocusContext);\n  // if there is no scopeRef on the context, then the parent is the focusScopeTree's root, represented by null\n  let parentScope = ctx?.scopeRef ?? null;\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current.nextSibling;\n    let nodes = [];\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node = node.nextSibling;\n    }\n\n    scopeRef.current = nodes;\n  }, [children, parentScope]);\n\n  // add to the focus scope tree in render order because useEffects/useLayoutEffects run children first whereas render runs parent first\n  // which matters when constructing a tree\n  if (focusScopeTree.getTreeNode(parentScope) && !focusScopeTree.getTreeNode(scopeRef)) {\n    focusScopeTree.addTreeNode(scopeRef, parentScope);\n  }\n\n  let node = focusScopeTree.getTreeNode(scopeRef);\n  node.contain = contain;\n\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  // this layout effect needs to run last so that focusScopeTree cleanup happens at the last moment possible\n  useLayoutEffect(() => {\n    if (scopeRef && (parentScope || parentScope == null)) {\n      return () => {\n        // Restore the active scope on unmount if this scope or a descendant scope is active.\n        // Parent effect cleanups run before children, so we need to check if the\n        // parent scope actually still exists before restoring the active scope to it.\n        if (\n          (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n          (!parentScope || focusScopeTree.getTreeNode(parentScope))\n        ) {\n          activeScope = parentScope;\n        }\n        focusScopeTree.removeTreeNode(scopeRef);\n      };\n    }\n  }, [scopeRef, parentScope]);\n\n  let focusManager = createFocusManagerForScope(scopeRef);\n\n  return (\n    <FocusContext.Provider value={{scopeRef, focusManager}}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[]>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[0].previousElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || document.activeElement;\n      let sentinel = scope[scope.length - 1].nextElementSibling;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current;\n      let {tabbable, accept} = opts;\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nconst focusableElements = [\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'a[href]',\n  'area[href]',\n  'summary',\n  'iframe',\n  'object',\n  'embed',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]'\n];\n\nconst FOCUSABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]),') + ',[tabindex]:not([disabled]):not([hidden])';\n\nfocusableElements.push('[tabindex]:not([tabindex=\"-1\"]):not([disabled])');\nconst TABBABLE_ELEMENT_SELECTOR = focusableElements.join(':not([hidden]):not([tabindex=\"-1\"]),');\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement;\n}\n\nfunction shouldContainFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return true;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[]>, contain: boolean) {\n  let focusedNode = useRef<FocusableElement>();\n\n  let raf = useRef(null);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = null;\n      }\n      return;\n    }\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef)) {\n        return;\n      }\n\n      let focusedElement = document.activeElement;\n      let scope = scopeRef.current;\n      if (!isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: true}, scope);\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode())  as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n        focusedNode.current = e.target;\n      } else if (shouldContainFocus(scopeRef) && !isElementInChildScope(e.target, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (shouldContainFocus(scopeRef)) {\n        focusedNode.current = e.target;\n      }\n    };\n\n    let onBlur = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      raf.current = requestAnimationFrame(() => {\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        if (shouldContainFocus(scopeRef) && !isElementInChildScope(document.activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          if (document.body.contains(e.target)) {\n            focusedNode.current = e.target;\n            focusedNode.current.focus();\n          } else if (activeScope) {\n            focusFirstInScope(activeScope.current);\n          }\n        }\n      });\n    };\n\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  return isElementInChildScope(element);\n}\n\nfunction isElementInScope(element: Element, scope: Element[]) {\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef = null) {\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let {scopeRef: s} of focusScopeTree.traverse(focusScopeTree.getTreeNode(scope))) {\n    if (isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = focusScopeTree.getTreeNode(scope)?.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch (err) {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch (err) {\n      // ignore\n    }\n  }\n}\n\nfunction focusFirstInScope(scope: Element[], tabbable:boolean = true) {\n  let sentinel = scope[0].previousElementSibling;\n  let walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable}, scope);\n  walker.currentNode = sentinel;\n  let nextNode = walker.nextNode();\n\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    walker = getFocusableTreeWalker(getScopeRoot(scope), {tabbable: false}, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n\n  focusElement(nextNode as FocusableElement);\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[]>, autoFocus: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      if (!isElementInScope(document.activeElement, activeScope.current)) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[]>, restoreFocus: boolean, contain: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? document.activeElement as FocusableElement : null);\n\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!restoreFocus || contain) {\n      return;\n    }\n\n    let onFocus = () => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if (!activeScope || isAncestorScope(activeScope, scopeRef)) {\n        activeScope = scopeRef;\n      }\n    };\n\n    document.addEventListener('focusin', onFocus, false);\n    scope.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      document.removeEventListener('focusin', onFocus, false);\n      scope.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  }, [scopeRef, contain]);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    focusScopeTree.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;\n    if (!restoreFocus) {\n      return;\n    }\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey) {\n        return;\n      }\n\n      let focusedElement = document.activeElement as FocusableElement;\n      if (!isElementInScope(focusedElement, scopeRef.current)) {\n        return;\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(document.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {\n        nodeToRestore = null;\n        focusScopeTree.getTreeNode(scopeRef).nodeToRestore = null;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInScope(nextElement, scopeRef.current));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n           // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n           // then move focus to the body.\n           // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      document.addEventListener('keydown', onKeyDown, true);\n    }\n\n    return () => {\n      if (!contain) {\n        document.removeEventListener('keydown', onKeyDown, true);\n      }\n      let nodeToRestore = focusScopeTree.getTreeNode(scopeRef).nodeToRestore;\n\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      if (\n        restoreFocus\n        && nodeToRestore\n        && (\n          isElementInScope(document.activeElement, scopeRef.current)\n          || (document.activeElement === document.body && activeScope === scopeRef)\n        )\n      ) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        let clonedTree = focusScopeTree.clone();\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (document.activeElement === document.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            let treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {\n                focusElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]) {\n  let selector = opts?.tabbable ? TABBABLE_ELEMENT_SELECTOR : FOCUSABLE_ELEMENT_SELECTOR;\n  let walker = document.createTreeWalker(\n    root,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if ((node as Element).matches(selector)\n          && isElementVisible(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || document.activeElement;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        previousNode = last(walker);\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next;\n    }\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n\n\nclass Tree {\n  private root: TreeNode;\n  private fastMap = new Map<ScopeRef, TreeNode>();\n\n  constructor() {\n    this.root = new TreeNode({scopeRef: null});\n    this.fastMap.set(null, this.root);\n  }\n\n  get size() {\n    return this.fastMap.size;\n  }\n\n  getTreeNode(data: ScopeRef) {\n    return this.fastMap.get(data);\n  }\n\n  addTreeNode(scopeRef: ScopeRef, parent: ScopeRef, nodeToRestore?: FocusableElement) {\n    let parentNode = this.fastMap.get(parent ?? null);\n    let node = new TreeNode({scopeRef});\n    parentNode.addChild(node);\n    node.parent = parentNode;\n    this.fastMap.set(scopeRef, node);\n    if (nodeToRestore) {\n      node.nodeToRestore = nodeToRestore;\n    }\n  }\n\n  removeTreeNode(scopeRef: ScopeRef) {\n    // never remove the root\n    if (scopeRef === null) {\n      return;\n    }\n    let node = this.fastMap.get(scopeRef);\n    let parentNode = node.parent;\n    // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n    // if we are, then replace the siblings restore with the restore from the scope we're removing\n    for (let current of this.traverse()) {\n      if (\n        current !== node &&\n        node.nodeToRestore &&\n        current.nodeToRestore &&\n        node.scopeRef.current &&\n        isElementInScope(current.nodeToRestore, node.scopeRef.current)\n      ) {\n        current.nodeToRestore = node.nodeToRestore;\n      }\n    }\n    let children = node.children;\n    parentNode.removeChild(node);\n    if (children.length > 0) {\n      children.forEach(child => parentNode.addChild(child));\n    }\n    this.fastMap.delete(node.scopeRef);\n  }\n\n  // Pre Order Depth First\n  *traverse(node: TreeNode = this.root): Generator<TreeNode> {\n    if (node.scopeRef != null) {\n      yield node;\n    }\n    if (node.children.length > 0) {\n      for (let child of node.children) {\n        yield* this.traverse(child);\n      }\n    }\n  }\n\n  clone(): Tree {\n    let newTree = new Tree();\n    for (let node of this.traverse()) {\n      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);\n    }\n    return newTree;\n  }\n}\n\nclass TreeNode {\n  public scopeRef: ScopeRef;\n  public nodeToRestore: FocusableElement;\n  public parent: TreeNode;\n  public children: TreeNode[] = [];\n  public contain = false;\n\n  constructor(props: {scopeRef: ScopeRef}) {\n    this.scopeRef = props.scopeRef;\n  }\n  addChild(node: TreeNode) {\n    this.children.push(node);\n    node.parent = this;\n  }\n  removeChild(node: TreeNode) {\n    this.children.splice(this.children.indexOf(node), 1);\n    node.parent = undefined;\n  }\n}\n\nexport let focusScopeTree = new Tree();\n","import {DOMAttributes} from '@react-types/shared';\nimport {isFocusVisible, useFocus, useFocusVisibleListener, useFocusWithin} from '@react-aria/interactions';\nimport {useCallback, useState} from 'react';\nimport {useRef} from 'react';\n\nexport interface AriaFocusRingProps {\n  /**\n   * Whether to show the focus ring when something\n   * inside the container element has focus (true), or\n   * only if the container itself has focus (false).\n   * @default 'false'\n   */\n  within?: boolean,\n\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\nexport interface FocusRingAria {\n  /** Whether the element is currently focused. */\n  isFocused: boolean,\n\n  /** Whether keyboard focus should be visible. */\n  isFocusVisible: boolean,\n\n  /** Props to apply to the container element with the focus ring. */\n  focusProps: DOMAttributes\n}\n\n/**\n * Determines whether a focus ring should be shown to indicate keyboard focus.\n * Focus rings are visible only when the user is interacting with a keyboard,\n * not with a mouse, touch, or other input methods.\n */\nexport function useFocusRing(props: AriaFocusRingProps = {}): FocusRingAria {\n  let {\n    autoFocus = false,\n    isTextInput,\n    within\n  } = props;\n  let state = useRef({\n    isFocused: false,\n    isFocusVisible: autoFocus || isFocusVisible()\n  });\n  let [isFocused, setFocused] = useState(false);\n  let [isFocusVisibleState, setFocusVisible] = useState(() => state.current.isFocused && state.current.isFocusVisible);\n\n  let updateState = useCallback(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);\n\n  let onFocusChange = useCallback(isFocused => {\n    state.current.isFocused = isFocused;\n    setFocused(isFocused);\n    updateState();\n  }, [updateState]);\n\n  useFocusVisibleListener((isFocusVisible) => {\n    state.current.isFocusVisible = isFocusVisible;\n    updateState();\n  }, [], {isTextInput});\n\n  let {focusProps} = useFocus({\n    isDisabled: within,\n    onFocusChange\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !within,\n    onFocusWithinChange: onFocusChange\n  });\n\n  return {\n    isFocused,\n    isFocusVisible: state.current.isFocused && isFocusVisibleState,\n    focusProps: within ? focusWithinProps : focusProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableDOMProps, FocusableElement, FocusableProps} from '@react-types/shared';\nimport {focusSafely} from './';\nimport {mergeProps, useSyncRef} from '@react-aria/utils';\nimport React, {MutableRefObject, ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\nimport {useFocus, useKeyboard} from '@react-aria/interactions';\n\nexport interface FocusableOptions extends FocusableProps, FocusableDOMProps {\n  /** Whether focus should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface FocusableProviderProps extends DOMAttributes {\n  /** The child element to provide DOM props to. */\n  children?: ReactNode\n}\n\ninterface FocusableContextValue extends FocusableProviderProps {\n  ref?: MutableRefObject<FocusableElement>\n}\n\nlet FocusableContext = React.createContext<FocusableContextValue>(null);\n\nfunction useFocusableContext(ref: RefObject<FocusableElement>): FocusableContextValue {\n  let context = useContext(FocusableContext) || {};\n  useSyncRef(context, ref);\n\n  // eslint-disable-next-line\n  let {ref: _, ...otherProps} = context;\n  return otherProps;\n}\n\n/**\n * Provides DOM props to the nearest focusable child.\n */\nfunction FocusableProvider(props: FocusableProviderProps, ref: RefObject<FocusableElement>) {\n  let {children, ...otherProps} = props;\n  let context = {\n    ...otherProps,\n    ref\n  };\n\n  return (\n    <FocusableContext.Provider value={context}>\n      {children}\n    </FocusableContext.Provider>\n  );\n}\n\nlet _FocusableProvider = React.forwardRef(FocusableProvider);\nexport {_FocusableProvider as FocusableProvider};\n\nexport interface FocusableAria {\n  /** Props for the focusable element. */\n  focusableProps: DOMAttributes\n}\n\n/**\n * Used to make an element focusable and capable of auto focus.\n */\nexport function useFocusable(props: FocusableOptions, domRef: RefObject<FocusableElement>): FocusableAria {\n  let {focusProps} = useFocus(props);\n  let {keyboardProps} = useKeyboard(props);\n  let interactions = mergeProps(focusProps, keyboardProps);\n  let domProps = useFocusableContext(domRef);\n  let interactionProps = props.isDisabled ? {} : domProps;\n  let autoFocusRef = useRef(props.autoFocus);\n\n  useEffect(() => {\n    if (autoFocusRef.current && domRef.current) {\n      focusSafely(domRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [domRef]);\n\n  return {\n    focusableProps: mergeProps(\n      {\n        ...interactions,\n        tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : undefined\n      },\n      interactionProps\n    )\n  };\n}\n","import React from 'react';\nimport {\n  FocusScope as AriaFocusScope,\n  useFocusManager,\n} from '@react-aria/focus';\nimport type { FocusScopeProps } from './FocusScope';\nconst FocusScope = ({ children, contain, ...props }: FocusScopeProps) => {\n  /* Todo: stoping mounted and unMounted everytime contain is change */\n  // if (contain === false) return <></>;\n\n  return (\n    <AriaFocusScope contain={contain} {...props}>\n      {children}\n    </AriaFocusScope>\n  );\n};\n\nexport { FocusScope, useFocusManager };\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nvar emptyFunction = function emptyFunction() {};\n\nfunction supportsPassiveEvents() {\n  var supported = false; // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get: function get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n\n  return supported;\n}\n\nvar canUsePassiveEvents = supportsPassiveEvents();\n\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\n\n\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\n\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n/**\n *\n */\n\n\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== 'function') {\n      throw new Error('createEventHandle: called on an invalid target.');\n    }\n\n    var element = target;\n\n    if (listener != null) {\n      var compatListener = function compatListener(e) {\n        return listener(normalizeEvent(e));\n      };\n\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createEventHandle from '../createEventHandle';\n\nvar supportsPointerEvent = function supportsPointerEvent() {\n  return !!(typeof window !== 'undefined' && window.PointerEvent != null);\n};\n\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n}; // Window events\n\nvar addBlurListener = createEventHandle(BLUR, bubbleOptions);\nvar addFocusListener = createEventHandle(FOCUS, bubbleOptions); // Must be capture phase because 'stopPropagation' might prevent these\n// events bubbling to the document.\n\nvar addVisibilityChangeListener = createEventHandle(VISIBILITYCHANGE, captureOptions);\nvar addKeyDownListener = createEventHandle(KEYDOWN, captureOptions);\nvar addPointerDownListener = createEventHandle(POINTERDOWN, captureOptions);\nvar addPointerMoveListener = createEventHandle(POINTERMOVE, captureOptions); // Fallback events\n\nvar addContextMenuListener = createEventHandle(CONTEXTMENU, captureOptions);\nvar addMouseDownListener = createEventHandle(MOUSEDOWN, captureOptions);\nvar addMouseMoveListener = createEventHandle(MOUSEMOVE, captureOptions);\nvar addMouseUpListener = createEventHandle(MOUSEUP, captureOptions);\nvar addScrollListener = createEventHandle(SCROLL, captureOptions);\nvar addSelectiomChangeListener = createEventHandle(SELECTIONCHANGE, captureOptions);\nvar addTouchCancelListener = createEventHandle(TOUCHCANCEL, captureOptions);\nvar addTouchMoveListener = createEventHandle(TOUCHMOVE, captureOptions);\nvar addTouchStartListener = createEventHandle(TOUCHSTART, captureOptions);\n\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n\n    callListeners();\n  }\n}\n\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners(); // for fallback events\n\n  isEmulatingMouseEvents = false;\n}\n\nfunction onFocusWindow() {\n  restoreModality();\n}\n\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\n\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\n\nfunction onPointerish(event) {\n  var eventType = event.type;\n\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n\n      return;\n    }\n\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n\n      return;\n    }\n  } // Fallback for non-PointerEvent environment\n  else {\n      if (!isEmulatingMouseEvents) {\n        if (eventType === MOUSEDOWN) {\n          if (activeModality !== MOUSE) {\n            modality = MOUSE;\n            activeModality = MOUSE;\n            callListeners();\n          }\n        }\n\n        if (eventType === MOUSEMOVE) {\n          if (modality !== MOUSE) {\n            modality = MOUSE;\n            callListeners();\n          }\n        }\n      } // Flag when browser may produce emulated events\n\n\n      if (eventType === TOUCHSTART) {\n        isEmulatingMouseEvents = true;\n\n        if (event.touches && event.touches.length > 1) {\n          isEmulatingMouseEvents = false;\n        }\n\n        if (activeModality !== TOUCH) {\n          modality = TOUCH;\n          activeModality = TOUCH;\n          callListeners();\n        }\n\n        return;\n      } // Remove flag after emulated events are finished or cancelled, and if an\n      // event occurs that cuts short a touch event sequence.\n\n\n      if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n        isEmulatingMouseEvents = false;\n      }\n    }\n}\n\nif (canUseDOM) {\n  addBlurListener(window, onBlurWindow);\n  addFocusListener(window, onFocusWindow);\n  addKeyDownListener(document, onKeyDown);\n  addPointerDownListener(document, onPointerish);\n  addPointerMoveListener(document, onPointerish);\n  addVisibilityChangeListener(document, onVisibilityChange); // fallbacks\n\n  addContextMenuListener(document, onPointerish);\n  addMouseDownListener(document, onPointerish);\n  addMouseMoveListener(document, onPointerish);\n  addMouseUpListener(document, onPointerish);\n  addTouchCancelListener(document, onPointerish);\n  addTouchMoveListener(document, onPointerish);\n  addTouchStartListener(document, onPointerish);\n  addSelectiomChangeListener(document, onPointerish);\n  addScrollListener(document, onPointerish);\n}\n\nfunction callListeners() {\n  var value = {\n    activeModality: activeModality,\n    modality: modality\n  };\n  listeners.forEach(function (listener) {\n    listener(value);\n  });\n}\n\nexport function getActiveModality() {\n  return activeModality;\n}\nexport function getModality() {\n  return modality;\n}\nexport function addModalityListener(listener) {\n  listeners.add(listener);\n  return function () {\n    listeners.delete(listener);\n  };\n}\nexport function testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport createEventHandle from '../createEventHandle';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(function () {\n    return new Map();\n  });\n  var addListener = useStable(function () {\n    var addEventListener = createEventHandle(event, options);\n    return function (target, callback) {\n      var removeTargetListener = targetListeners.get(target);\n\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(function () {\n    return function () {\n      targetListeners.forEach(function (removeListener) {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, []);\n  return addListener;\n}","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { getModality } from '../modality';\nimport useEvent from '../useEvent';\nimport useLayoutEffect from '../useLayoutEffect';\n/**\n * Types\n */\n\n/**\n * Implementation\n */\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\n\nvar supportsPointerEvent = function supportsPointerEvent() {\n  return !!(typeof window !== 'undefined' && window.PointerEvent != null);\n};\n\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n\n  var _ref = payload || emptyObject,\n      _ref$bubbles = _ref.bubbles,\n      bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n      _ref$cancelable = _ref.cancelable,\n      cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n      detail = _ref.detail;\n\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n} // This accounts for the non-PointerEvent fallback events.\n\n\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\n\nexport default function useHover(targetRef, config) {\n  var contain = config.contain,\n      disabled = config.disabled,\n      onHoverStart = config.onHoverStart,\n      onHoverChange = config.onHoverChange,\n      onHoverUpdate = config.onHoverUpdate,\n      onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts); // These custom events are used to implement the \"contain\" prop.\n\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(function () {\n    var target = targetRef.current;\n\n    if (target !== null) {\n      /**\n       * End the hover gesture\n       */\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        } // Remove the listeners once finished.\n\n\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n      /**\n       * Leave element\n       */\n\n\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n\n          hoverEnd(e);\n        }\n      };\n      /**\n       * Move within element\n       */\n\n\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            // Not all browsers have these properties\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n\n            onHoverUpdate(e);\n          }\n        }\n      };\n      /**\n       * Start the hover gesture\n       */\n\n\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        } // Set the listeners needed for the rest of the hover gesture.\n\n\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n      /**\n       * Enter element\n       */\n\n\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n\n          hoverStart(e);\n\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = function isActiveSignal(signal) {\n  return signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isButtonRole = function isButtonRole(element) {\n  return element.getAttribute('role') === 'button';\n};\n\nvar isPressStartSignal = function isPressStartSignal(signal) {\n  return signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n};\n\nvar isTerminalSignal = function isTerminalSignal(signal) {\n  return signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n};\n\nvar isValidKeyPress = function isValidKeyPress(event) {\n  var key = event.key,\n      target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\n\nvar PressResponder = /*#__PURE__*/function () {\n  function PressResponder(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  var _proto = PressResponder.prototype;\n\n  _proto.configure = function configure(config) {\n    this._config = config;\n  }\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  }\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  ;\n\n  _proto.getEventHandlers = function getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  };\n\n  _proto._createEventHandlers = function _createEventHandlers() {\n    var _this = this;\n\n    var start = function start(event, shouldDelay) {\n      event.persist();\n\n      _this._cancelPressOutDelayTimeout();\n\n      _this._longPressDispatched = false;\n      _this._selectionTerminated = false;\n      _this._touchState = NOT_RESPONDER;\n      _this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      _this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(_this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        _this._pressDelayTimeout = setTimeout(function () {\n          _this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        _this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(_this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      _this._longPressDelayTimeout = setTimeout(function () {\n        _this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = function end(event) {\n      _this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = function keyupHandler(event) {\n      var onPress = _this._config.onPress;\n      var target = event.target;\n\n      if (_this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: function onStartShouldSetResponder(event) {\n        var disabled = _this._config.disabled;\n\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: function onKeyDown(event) {\n        var disabled = _this._config.disabled;\n        var key = event.key,\n            target = event.target;\n\n        if (!disabled && isValidKeyPress(event)) {\n          if (_this._touchState === NOT_RESPONDER) {\n            start(event, false); // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: function onResponderGrant(event) {\n        return start(event);\n      },\n      onResponderMove: function onResponderMove(event) {\n        if (_this._config.onPressMove != null) {\n          _this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (_this._touchActivatePosition != null) {\n          var deltaX = _this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = _this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            _this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        return end(event);\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        if (event.nativeEvent.type === 'selectionchange') {\n          _this._selectionTerminated = true;\n        }\n\n        _this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: function onResponderTerminationRequest(event) {\n        var _this$_config = _this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress; // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n\n        if (!disabled && onLongPress != null && _this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: function onClick(event) {\n        var _this$_config2 = _this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n\n          if (_this._longPressDispatched || _this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: function onContextMenu(event) {\n        var _this$_config3 = _this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled) {\n          if (onLongPress != null && _this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  ;\n\n  _proto._receiveSignal = function _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  }\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  ;\n\n  _proto._performTransitionSideEffects = function _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      this._isPointerTouch = false;\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress; // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  };\n\n  _proto._activate = function _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  };\n\n  _proto._deactivate = function _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(function () {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  };\n\n  _proto._handleLongPress = function _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  };\n\n  _proto._cancelLongPressDelayTimeout = function _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressDelayTimeout = function _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  };\n\n  _proto._cancelPressOutDelayTimeout = function _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  };\n\n  return PressResponder;\n}();\n\nexport { PressResponder as default };\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { forwardRef, memo, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport useHover from '../../modules/useHover';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props, forwardedRef) {\n  var children = props.children,\n      delayLongPress = props.delayLongPress,\n      delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onBlur = props.onBlur,\n      onContextMenu = props.onContextMenu,\n      onFocus = props.onFocus,\n      onHoverIn = props.onHoverIn,\n      onHoverOut = props.onHoverOut,\n      onKeyDown = props.onKeyDown,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressMove = props.onPressMove,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      style = props.style,\n      testOnly_hovered = props.testOnly_hovered,\n      testOnly_pressed = props.testOnly_pressed,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"disabled\", \"focusable\", \"onBlur\", \"onContextMenu\", \"onFocus\", \"onHoverIn\", \"onHoverOut\", \"onKeyDown\", \"onLongPress\", \"onPress\", \"onPressMove\", \"onPressIn\", \"onPressOut\", \"style\", \"testOnly_hovered\", \"testOnly_pressed\"]);\n\n  var _useForceableState = useForceableState(testOnly_hovered === true),\n      hovered = _useForceableState[0],\n      setHovered = _useForceableState[1];\n\n  var _useForceableState2 = useForceableState(false),\n      focused = _useForceableState2[0],\n      setFocused = _useForceableState2[1];\n\n  var _useForceableState3 = useForceableState(testOnly_pressed === true),\n      pressed = _useForceableState3[0],\n      setPressed = _useForceableState3[1];\n\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var pressConfig = useMemo(function () {\n    return {\n      delayLongPress: delayLongPress,\n      delayPressStart: delayPressIn,\n      delayPressEnd: delayPressOut,\n      disabled: disabled,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressChange: setPressed,\n      onPressStart: onPressIn,\n      onPressMove: onPressMove,\n      onPressEnd: onPressOut\n    };\n  }, [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressMove, onPressOut, setPressed]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var onContextMenuPress = pressEventHandlers.onContextMenu,\n      onKeyDownPress = pressEventHandlers.onKeyDown;\n  useHover(hostRef, {\n    contain: true,\n    disabled: disabled,\n    onHoverChange: setHovered,\n    onHoverStart: onHoverIn,\n    onHoverEnd: onHoverOut\n  });\n  var interactionState = {\n    hovered: hovered,\n    focused: focused,\n    pressed: pressed\n  };\n  var blurHandler = React.useCallback(function (e) {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(false);\n\n      if (onBlur != null) {\n        onBlur(e);\n      }\n    }\n  }, [hostRef, setFocused, onBlur]);\n  var focusHandler = React.useCallback(function (e) {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(true);\n\n      if (onFocus != null) {\n        onFocus(e);\n      }\n    }\n  }, [hostRef, setFocused, onFocus]);\n  var contextMenuHandler = React.useCallback(function (e) {\n    if (onContextMenuPress != null) {\n      onContextMenuPress(e);\n    }\n\n    if (onContextMenu != null) {\n      onContextMenu(e);\n    }\n  }, [onContextMenu, onContextMenuPress]);\n  var keyDownHandler = React.useCallback(function (e) {\n    if (onKeyDownPress != null) {\n      onKeyDownPress(e);\n    }\n\n    if (onKeyDown != null) {\n      onKeyDown(e);\n    }\n  }, [onKeyDown, onKeyDownPress]);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    onBlur: blurHandler,\n    onContextMenu: contextMenuHandler,\n    onFocus: focusHandler,\n    onKeyDown: keyDownHandler,\n    ref: setRef,\n    style: [!disabled && styles.root, typeof style === 'function' ? style(interactionState) : style]\n  }), typeof children === 'function' ? children(interactionState) : children);\n}\n\nfunction useForceableState(forced) {\n  var _useState = useState(false),\n      bool = _useState[0],\n      setBool = _useState[1];\n\n  return [bool || forced, setBool];\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedPressable = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\nexport default MemoedPressable;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  useEffect(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  useEffect(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, memo } from 'react';\nimport { Pressable as RNPressable } from 'react-native';\nimport { composeEventHandlers } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFocusRing } from '@react-native-aria/focus';\nexport const useHover = () => {\n  const [isHovered, setHovered] = React.useState(false);\n  return {\n    hoverProps: {\n      onHoverIn: () => setHovered(true),\n      onHoverOut: () => setHovered(false)\n    },\n    isHovered\n  };\n};\nexport const useFocus = () => {\n  const [isFocused, setFocused] = React.useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false)\n    },\n    isFocused\n  };\n};\nexport const useIsPressed = () => {\n  const [isPressed, setIsPressed] = React.useState(false);\n  return {\n    pressableProps: {\n      onPressIn: () => setIsPressed(true),\n      onPressOut: () => setIsPressed(false)\n    },\n    isPressed\n  };\n};\nconst StyledPressable = makeStyledComponent(RNPressable);\n\nconst Pressable = ({\n  children,\n  isDisabled,\n  disabled,\n  isHovered: isHoveredProp,\n  isPressed: isPressedProp,\n  isFocused: isFocusedProp,\n  isFocusVisible: isFocusVisibleProp,\n  ...props\n}, ref) => {\n  const {\n    hoverProps,\n    isHovered\n  } = useHover();\n  const {\n    pressableProps,\n    isPressed\n  } = useIsPressed();\n  const {\n    focusProps,\n    isFocused\n  } = useFocus();\n  const {\n    isFocusVisible,\n    focusProps: focusRingProps\n  } = useFocusRing();\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('Pressable', props, {\n    isPressed: isPressedProp || isPressed,\n    isFocused: isFocusedProp || isFocused,\n    isHovered: isHoveredProp || isHovered,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n    isDisabled: disabled || isDisabled\n  }); // TODO: Replace Render props with Context Hook\n  //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  } // TODO: Replace Render props with Context Hook\n\n\n  return /*#__PURE__*/React.createElement(StyledPressable, _extends({\n    ref: ref,\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut) // @ts-ignore - web only\n    ,\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn) // @ts-ignore - web only\n    ,\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut) // @ts-ignore - web only\n    ,\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus), focusRingProps.onFocus) // @ts-ignore - web only\n    ,\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur), focusRingProps.onBlur),\n    disabled: disabled || isDisabled\n  }, resolvedProps), typeof children !== 'function' ? children : children({\n    isPressed,\n    isHovered,\n    isFocused\n  }));\n};\n\nexport default /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\n//# sourceMappingURL=Pressable.js.map"],"names":["element","lastFocusedElement","document","activeElement","contains","childElement","nodeName","HTMLElement","SVGElement","style","display","visibility","isVisible","getComputedStyle","ownerDocument","defaultView","computedDisplay","computedVisibility","hasAttribute","parentElement","props","children","contain","restoreFocus","autoFocus","startRef","useRef","endRef","scopeRef","ctx","useContext","parentScope","node","current","nextSibling","nodes","push","getTreeNode","addTreeNode","focusedNode","raf","onKeyDown","e","key","altKey","ctrlKey","metaKey","focusedElement","scope","walker","tabbable","currentNode","nextElement","shiftKey","previousNode","nextNode","length","nextElementSibling","previousElementSibling","preventDefault","onFocus","target","focus","onBlur","requestAnimationFrame","body","addEventListener","forEach","removeEventListener","cancelAnimationFrame","useEffect","nodeToRestoreRef","nodeToRestore","stopPropagation","blur","clonedTree","clone","treeNode","parent","autoFocusRef","removeTreeNode","focusManager","focusNext","opts","from","wrap","accept","sentinel","focusPrevious","focusFirst","focusLast","Provider","value","hidden","ref","join","some","traverse","s","ancestor","scroll","err","root","selector","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","FILTER_REJECT","matches","FILTER_SKIP","FILTER_ACCEPT","fastMap","Map","this","set","size","data","get","parentNode","addChild","removeChild","child","delete","newTree","splice","indexOf","undefined","isTextInput","within","state","isFocused","isFocusVisible","useState","setFocused","isFocusVisibleState","setFocusVisible","updateState","useCallback","onFocusChange","isDisabled","focusProps","onFocusWithinChange","focusWithinProps","context","FocusScope","emptyFunction","canUsePassiveEvents","supported","canUseDOM","options","Object","defineProperty","window","supportsPassiveEvents","isPropagationStopped","cancelBubble","isDefaultPrevented","defaultPrevented","createEventHandle","type","Boolean","capture","getOptions","listener","Error","compatListener","event","nativeEvent","persist","previousModality","previousActiveModality","activeModality","modality","isEmulatingMouseEvents","listeners","Set","KEYBOARD","MOUSE","TOUCH","CONTEXTMENU","MOUSEDOWN","MOUSEMOVE","MOUSEUP","POINTERDOWN","POINTERMOVE","SCROLL","SELECTIONCHANGE","TOUCHCANCEL","TOUCHMOVE","TOUCHSTART","bubbleOptions","passive","captureOptions","addBlurListener","addFocusListener","addVisibilityChangeListener","addKeyDownListener","addPointerDownListener","addPointerMoveListener","addContextMenuListener","addMouseDownListener","addMouseMoveListener","addMouseUpListener","addScrollListener","addSelectiomChangeListener","addTouchCancelListener","addTouchMoveListener","addTouchStartListener","restoreModality","callListeners","onPointerish","eventType","PointerEvent","pointerType","touches","visibilityState","useEvent","targetListeners","useStable","addListener","callback","removeTargetListener","useLayoutEffect","removeListener","clear","emptyObject","lockEventType","unlockEventType","dispatchCustomEvent","payload","createEvent","_ref","_ref$bubbles","bubbles","_ref$cancelable","cancelable","detail","initCustomEvent","dispatchEvent","getPointerType","useHover","targetRef","config","disabled","onHoverStart","onHoverChange","onHoverUpdate","onHoverEnd","canUsePE","addMoveListener","addEnterListener","addLeaveListener","addLockListener","addUnlockListener","hoverEnd","leaveListener","moveListener","x","clientX","y","clientY","hoverStart","lockEvent","DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","freeze","RESPONDER_GRANT","isActiveSignal","signal","isButtonRole","getAttribute","isPressStartSignal","isValidKeyPress","role","PressResponder","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","_proto","prototype","_config","reset","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","getEventHandlers","_createEventHandlers","_this","start","shouldDelay","_selectionTerminated","_receiveSignal","delayPressStart","normalizeDelay","setTimeout","delayLongPress","_handleLongPress","end","keyupHandler","onPress","elementType","tagName","toLowerCase","onStartShouldSetResponder","currentTarget","onResponderGrant","onResponderMove","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","deltaX","pageX","deltaY","pageY","Math","hypot","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","_this$_config","onLongPress","onClick","_this$_config2","onContextMenu","_this$_config3","prevState","nextState","console","error","_performTransitionSideEffects","isTerminalSignal","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","_this$_config5","onPressChange","onPressStart","onPressEnd","_this$_config6","delayPressEnd","clearTimeout","delay","min","fallback","max","_event$nativeEvent","changedTouches","_extends","assign","i","arguments","source","hasOwnProperty","call","apply","useForceableState","forced","_useState","styles","StyleSheet","cursor","touchAction","MemoedPressable","memo","forwardRef","forwardedRef","delayPressIn","delayPressOut","focusable","onHoverIn","onHoverOut","onPressIn","onPressOut","testOnly_hovered","testOnly_pressed","rest","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","_useForceableState","hovered","setHovered","_useForceableState2","focused","_useForceableState3","pressed","setPressed","hostRef","setRef","useMergeRefs","pressEventHandlers","pressResponderRef","pressResponder","useDebugValue","usePressEvents","useMemo","onContextMenuPress","onKeyDownPress","interactionState","blurHandler","React","focusHandler","contextMenuHandler","keyDownHandler","View","accessibilityDisabled","displayName","isHovered","hoverProps","useFocus","useIsPressed","isPressed","setIsPressed","pressableProps","StyledPressable","makeStyledComponent","RNPressable","isHoveredProp","isPressedProp","isFocusedProp","isFocusVisibleProp","useFocusRing","focusRingProps","usePropsResolution","resolvedProps","useHasResponsiveProps","composeEventHandlers"],"sourceRoot":""}