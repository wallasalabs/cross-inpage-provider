"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8644],{84284:function(e,t,i){i.d(t,{Ce:function(){return z},i8:function(){return _},Kj:function(){return E}});var s=i(50780),r=i(7286),n=i(79987),a=i(12407),o=i(20692),c=i(12639),u=i(9669),l=i(6230),d=Object.defineProperty,p=Object.getOwnPropertyDescriptor,h=(e,t)=>{for(var i in t)d(e,i,{get:t[i],enumerable:!0})},y=(e,t,i,s)=>{for(var r,n=s>1?void 0:s?p(t,i):t,a=e.length-1;a>=0;a--)(r=e[a])&&(n=(s?r(t,i,n):r(n))||n);return s&&n&&d(t,i,n),n},g=/^m(\/[0-9]+')+$/,f=e=>e.replace("'",""),m=(e,t,i=2147483648)=>{if(!(e=>!!g.test(e)&&!e.split("/").slice(1).map(f).some(Number.isNaN))(e))throw new Error("Invalid derivation path");const{key:s,chainCode:r}=(e=>{const t=a.b.create(o.o,"ed25519 seed").update((0,n.nr)(e)).digest();return{key:t.slice(0,32),chainCode:t.slice(32)}})(t);return e.split("/").slice(1).map(f).map((e=>parseInt(e,10))).reduce(((e,t)=>(({key:e,chainCode:t},i)=>{const s=new ArrayBuffer(4);new DataView(s).setUint32(0,i);const r=new Uint8Array(s),n=new Uint8Array([0]),c=new Uint8Array([...n,...e,...r]),u=a.b.create(o.o,t).update(c).digest();return{key:u.slice(0,32),chainCode:u.slice(32)}})(e,t+i)),{key:s,chainCode:r})},_=class{static fromBuffer(e){return _.fromUint8Array(e)}static fromUint8Array(e){return new _((0,n.ci)(e))}static ensure(e){return"string"===typeof e?new _(e):e}constructor(e){e.startsWith("0x")?this.hexString=e:this.hexString=`0x${e}`}hex(){return this.hexString}noPrefix(){return this.hexString.slice(2)}toString(){return this.hex()}toShortString(){return`0x${this.hexString.replace(/^0x0*/,"")}`}toUint8Array(){return Uint8Array.from((0,n.nr)(this.noPrefix()))}};async function w(e){return new Promise((t=>{setTimeout(t,e)}))}var v=2e5,b="0x1::aptos_coin::AptosCoin";function T(e){let t,i,s;return"object"===typeof e?(t=e.hashFunction,i=e.ttlMs,s=e.tags):t=e,(e,r,n)=>{if(null!=n.value)n.value=S(n.value,t,i,s);else{if(null==n.get)throw new Error("Only put a Memoize() decorator on a method or get accessor.");n.get=S(n.get,t,i,s)}}}var A=new Map;function S(e,t,i=0,s){const r=Symbol("__memoized_map__");return function(...n){let a;const o=this;o.hasOwnProperty(r)||Object.defineProperty(o,r,{configurable:!1,enumerable:!1,writable:!1,value:new Map});const c=o[r];if(Array.isArray(s))for(const e of s)A.has(e)?A.get(e).push(c):A.set(e,[c]);if(t||n.length>0||i>0){let s;s=!0===t?n.map((e=>e.toString())).join("!"):t?t.apply(o,n):n[0];const r=`${s}__timestamp`;let u=!1;if(i>0)if(c.has(r)){const e=c.get(r);u=Date.now()-e>i}else u=!0;c.has(s)&&!u?a=c.get(s):(a=e.apply(o,n),c.set(s,a),i>0&&c.set(r,Date.now()))}else{const t=o;c.has(t)?a=c.get(t):(a=e.apply(o,n),c.set(t,a))}return a}}async function R(e,t,i,s){var r;const n=[];let a;for(;;){const o=await e(_.ensure(t).hex(),null==(r=null==s?void 0:s.ledgerVersion)?void 0:r.toString(),a,i);if(a=o.__headers["x-aptos-cursor"],delete o.__headers,n.push(...o),null===a||void 0===a)break}return n}var E={};h(E,{AccountAddress:()=>K,AccountAuthenticator:()=>ae,AccountAuthenticatorEd25519:()=>oe,AccountAuthenticatorMultiEd25519:()=>ce,ArgumentABI:()=>Le,AuthenticationKey:()=>Je,ChainId:()=>Me,ChangeSet:()=>Re,Ed25519PublicKey:()=>Z,Ed25519Signature:()=>Q,EntryFunction:()=>Te,EntryFunctionABI:()=>je,Identifier:()=>ue,Module:()=>Ae,ModuleId:()=>Se,MultiAgentRawTransaction:()=>Ue,MultiEd25519PublicKey:()=>Y,MultiEd25519Signature:()=>te,RawTransaction:()=>ve,RawTransactionWithData:()=>qe,RotationProofChallenge:()=>Ze,Script:()=>be,ScriptABI:()=>Ve,SignedTransaction:()=>ze,StructTag:()=>we,Transaction:()=>Oe,TransactionArgument:()=>ke,TransactionArgumentAddress:()=>Pe,TransactionArgumentBool:()=>De,TransactionArgumentU128:()=>Ne,TransactionArgumentU64:()=>$e,TransactionArgumentU8:()=>Ce,TransactionArgumentU8Vector:()=>He,TransactionAuthenticator:()=>ie,TransactionAuthenticatorEd25519:()=>se,TransactionAuthenticatorMultiAgent:()=>ne,TransactionAuthenticatorMultiEd25519:()=>re,TransactionPayload:()=>Be,TransactionPayloadEntryFunction:()=>Ie,TransactionPayloadScript:()=>xe,TransactionScriptABI:()=>Fe,TypeArgumentABI:()=>Ge,TypeTag:()=>le,TypeTagAddress:()=>ge,TypeTagBool:()=>de,TypeTagSigner:()=>fe,TypeTagStruct:()=>_e,TypeTagU128:()=>ye,TypeTagU64:()=>he,TypeTagU8:()=>pe,TypeTagVector:()=>me,UserTransaction:()=>We,WriteSet:()=>Ee});var z={};h(z,{Deserializer:()=>M,Serializer:()=>x,bcsSerializeBool:()=>G,bcsSerializeBytes:()=>V,bcsSerializeFixedBytes:()=>F,bcsSerializeStr:()=>L,bcsSerializeU128:()=>W,bcsSerializeU16:()=>D,bcsSerializeU32:()=>O,bcsSerializeU8:()=>H,bcsSerializeUint64:()=>P,bcsToBytes:()=>N,deserializeVector:()=>$,serializeVector:()=>k,serializeVectorWithFunc:()=>C});var q=2**32-1,U=BigInt(2**64)-BigInt(1),B=BigInt(2**128)-BigInt(1),x=class{constructor(){this.buffer=new ArrayBuffer(64),this.offset=0}ensureBufferWillHandleSize(e){for(;this.buffer.byteLength<this.offset+e;){const e=new ArrayBuffer(2*this.buffer.byteLength);new Uint8Array(e).set(new Uint8Array(this.buffer)),this.buffer=e}}serialize(e){this.ensureBufferWillHandleSize(e.length),new Uint8Array(this.buffer,this.offset).set(e),this.offset+=e.length}serializeWithFunction(e,t,i){this.ensureBufferWillHandleSize(t);const s=new DataView(this.buffer,this.offset);e.apply(s,[0,i,!0]),this.offset+=t}serializeStr(e){const t=new TextEncoder;this.serializeBytes(t.encode(e))}serializeBytes(e){this.serializeU32AsUleb128(e.length),this.serialize(e)}serializeFixedBytes(e){this.serialize(e)}serializeBool(e){if("boolean"!==typeof e)throw new Error("Value needs to be a boolean");const t=e?1:0;this.serialize(new Uint8Array([t]))}serializeU8(e){this.serialize(new Uint8Array([e]))}serializeU16(e){this.serializeWithFunction(DataView.prototype.setUint16,2,e)}serializeU32(e){this.serializeWithFunction(DataView.prototype.setUint32,4,e)}serializeU64(e){const t=BigInt(e.toString())&BigInt(q),i=BigInt(e.toString())>>BigInt(32);this.serializeU32(Number(t)),this.serializeU32(Number(i))}serializeU128(e){const t=BigInt(e.toString())&U,i=BigInt(e.toString())>>BigInt(64);this.serializeU64(t),this.serializeU64(i)}serializeU32AsUleb128(e){let t=e;const i=[];for(;t>>>7!==0;)i.push(127&t|128),t>>>=7;i.push(t),this.serialize(new Uint8Array(i))}getBytes(){return new Uint8Array(this.buffer).slice(0,this.offset)}};function I(e,t,i){return(s,r,n)=>{const a=n.value;return n.value=function(s){const r=BigInt(s.toString());if(r>BigInt(t.toString())||r<BigInt(e.toString()))throw new Error(i||"Value is out of range");a.apply(this,[s])},n}}y([I(0,255)],x.prototype,"serializeU8",1),y([I(0,65535)],x.prototype,"serializeU16",1),y([I(0,q)],x.prototype,"serializeU32",1),y([I(BigInt(0),U)],x.prototype,"serializeU64",1),y([I(BigInt(0),B)],x.prototype,"serializeU128",1),y([I(0,q)],x.prototype,"serializeU32AsUleb128",1);var M=class{constructor(e){this.buffer=new ArrayBuffer(e.length),new Uint8Array(this.buffer).set(e,0),this.offset=0}read(e){if(this.offset+e>this.buffer.byteLength)throw new Error("Reached to the end of buffer");const t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}deserializeStr(){const e=this.deserializeBytes();return(new TextDecoder).decode(e)}deserializeBytes(){const e=this.deserializeUleb128AsU32();return new Uint8Array(this.read(e))}deserializeFixedBytes(e){return new Uint8Array(this.read(e))}deserializeBool(){const e=new Uint8Array(this.read(1))[0];if(1!==e&&0!==e)throw new Error("Invalid boolean value");return 1===e}deserializeU8(){return new DataView(this.read(1)).getUint8(0)}deserializeU16(){return new DataView(this.read(2)).getUint16(0,!0)}deserializeU32(){return new DataView(this.read(4)).getUint32(0,!0)}deserializeU64(){const e=this.deserializeU32(),t=this.deserializeU32();return BigInt(BigInt(t)<<BigInt(32)|BigInt(e))}deserializeU128(){const e=this.deserializeU64(),t=this.deserializeU64();return BigInt(t<<BigInt(64)|e)}deserializeUleb128AsU32(){let e=BigInt(0),t=0;for(;e<q;){const i=this.deserializeU8();if(e|=BigInt(127&i)<<BigInt(t),0===(128&i))break;t+=7}if(e>q)throw new Error("Overflow while parsing uleb128-encoded uint32 value");return Number(e)}};function k(e,t){t.serializeU32AsUleb128(e.length),e.forEach((e=>{e.serialize(t)}))}function C(e,t){const i=new x;i.serializeU32AsUleb128(e.length);const s=i[t];return e.forEach((e=>{s.call(i,e)})),i.getBytes()}function $(e,t){const i=e.deserializeUleb128AsU32(),s=[];for(let r=0;r<i;r+=1)s.push(t.deserialize(e));return s}function N(e){const t=new x;return e.serialize(t),t.getBytes()}function P(e){const t=new x;return t.serializeU64(e),t.getBytes()}function H(e){const t=new x;return t.serializeU8(e),t.getBytes()}function D(e){const t=new x;return t.serializeU16(e),t.getBytes()}function O(e){const t=new x;return t.serializeU32(e),t.getBytes()}function W(e){const t=new x;return t.serializeU128(e),t.getBytes()}function G(e){const t=new x;return t.serializeBool(e),t.getBytes()}function L(e){const t=new x;return t.serializeStr(e),t.getBytes()}function V(e){const t=new x;return t.serializeBytes(e),t.getBytes()}function F(e){const t=new x;return t.serializeFixedBytes(e),t.getBytes()}var j=class{constructor(e){if(e.length!==j.LENGTH)throw new Error("Expected address of length 32");this.address=e}static fromHex(e){let t=_.ensure(e);t.noPrefix().length%2!==0&&(t=new _(`0${t.noPrefix()}`));const i=t.toUint8Array();if(i.length>j.LENGTH)throw new Error("Hex string is too long. Address's length is 32 bytes.");if(i.length===j.LENGTH)return new j(i);const s=new Uint8Array(j.LENGTH);return s.set(i,j.LENGTH-i.length),new j(s)}serialize(e){e.serializeFixedBytes(this.address)}static deserialize(e){return new j(e.deserializeFixedBytes(j.LENGTH))}},K=j;K.LENGTH=32,K.CORE_CODE_ADDRESS=j.fromHex("0x1");var J=class{constructor(e){if(e.length!==J.LENGTH)throw new Error(`Ed25519PublicKey length should be ${J.LENGTH}`);this.value=e}toBytes(){return this.value}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const t=e.deserializeBytes();return new J(t)}},Z=J;Z.LENGTH=32;var X=class{constructor(e){if(this.value=e,e.length!==X.LENGTH)throw new Error(`Ed25519Signature length should be ${X.LENGTH}`)}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const t=e.deserializeBytes();return new X(t)}},Q=X;Q.LENGTH=64;var Y=class{constructor(e,t){if(this.public_keys=e,this.threshold=t,t>32)throw new Error('"threshold" cannot be larger than 32')}toBytes(){const e=new Uint8Array(this.public_keys.length*Z.LENGTH+1);return this.public_keys.forEach(((t,i)=>{e.set(t.value,i*Z.LENGTH)})),e[this.public_keys.length*Z.LENGTH]=this.threshold,e}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const t=e.deserializeBytes(),i=t[t.length-1],s=[];for(let r=0;r<t.length-1;r+=Z.LENGTH){const e=r;s.push(new Z(t.subarray(e,e+Z.LENGTH)))}return new Y(s,i)}},ee=class{constructor(e,t){if(this.signatures=e,this.bitmap=t,t.length!==ee.BITMAP_LEN)throw new Error(`"bitmap" length should be ${ee.BITMAP_LEN}`)}toBytes(){const e=new Uint8Array(this.signatures.length*Q.LENGTH+ee.BITMAP_LEN);return this.signatures.forEach(((t,i)=>{e.set(t.value,i*Q.LENGTH)})),e.set(this.bitmap,this.signatures.length*Q.LENGTH),e}static createBitmap(e){const t=new Uint8Array([0,0,0,0]),i=new Set;return e.forEach((e=>{if(e>=32)throw new Error(`Invalid bit value ${e}.`);if(i.has(e))throw new Error("Duplicated bits detected.");i.add(e);const s=Math.floor(e/8);let r=t[s];r|=128>>e%8,t[s]=r})),t}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const t=e.deserializeBytes(),i=t.subarray(t.length-4),s=[];for(let r=0;r<t.length-i.length;r+=Q.LENGTH){const e=r;s.push(new Q(t.subarray(e,e+Q.LENGTH)))}return new ee(s,i)}},te=ee;te.BITMAP_LEN=4;var ie=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return se.load(e);case 1:return re.load(e);case 2:return ne.load(e);default:throw new Error(`Unknown variant index for TransactionAuthenticator: ${t}`)}}},se=class extends ie{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=Z.deserialize(e),i=Q.deserialize(e);return new se(t,i)}},re=class extends ie{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=Y.deserialize(e),i=te.deserialize(e);return new re(t,i)}},ne=class extends ie{constructor(e,t,i){super(),this.sender=e,this.secondary_signer_addresses=t,this.secondary_signers=i}serialize(e){e.serializeU32AsUleb128(2),this.sender.serialize(e),k(this.secondary_signer_addresses,e),k(this.secondary_signers,e)}static load(e){const t=ae.deserialize(e),i=$(e,K),s=$(e,ae);return new ne(t,i,s)}},ae=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return oe.load(e);case 1:return ce.load(e);default:throw new Error(`Unknown variant index for AccountAuthenticator: ${t}`)}}},oe=class extends ae{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=Z.deserialize(e),i=Q.deserialize(e);return new oe(t,i)}},ce=class extends ae{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=Y.deserialize(e),i=te.deserialize(e);return new ce(t,i)}},ue=class{constructor(e){this.value=e}serialize(e){e.serializeStr(this.value)}static deserialize(e){const t=e.deserializeStr();return new ue(t)}},le=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return de.load(e);case 1:return pe.load(e);case 2:return he.load(e);case 3:return ye.load(e);case 4:return ge.load(e);case 5:return fe.load(e);case 6:return me.load(e);case 7:return _e.load(e);default:throw new Error(`Unknown variant index for TypeTag: ${t}`)}}},de=class extends le{serialize(e){e.serializeU32AsUleb128(0)}static load(e){return new de}},pe=class extends le{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new pe}},he=class extends le{serialize(e){e.serializeU32AsUleb128(2)}static load(e){return new he}},ye=class extends le{serialize(e){e.serializeU32AsUleb128(3)}static load(e){return new ye}},ge=class extends le{serialize(e){e.serializeU32AsUleb128(4)}static load(e){return new ge}},fe=class extends le{serialize(e){e.serializeU32AsUleb128(5)}static load(e){return new fe}},me=class extends le{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),this.value.serialize(e)}static load(e){const t=le.deserialize(e);return new me(t)}},_e=class extends le{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),this.value.serialize(e)}static load(e){const t=we.deserialize(e);return new _e(t)}isStringTypeTag(){return"string"===this.value.module_name.value&&"String"===this.value.name.value&&this.value.address===K.fromHex("0x1")}},we=class{constructor(e,t,i,s){this.address=e,this.module_name=t,this.name=i,this.type_args=s}static fromString(e){if(e.includes("<"))throw new Error("Not implemented");const t=e.split("::");if(3!==t.length)throw new Error("Invalid struct tag string literal.");return new we(K.fromHex(t[0]),new ue(t[1]),new ue(t[2]),[])}serialize(e){this.address.serialize(e),this.module_name.serialize(e),this.name.serialize(e),k(this.type_args,e)}static deserialize(e){const t=K.deserialize(e),i=ue.deserialize(e),s=ue.deserialize(e),r=$(e,le);return new we(t,i,s,r)}},ve=class{constructor(e,t,i,s,r,n,a){this.sender=e,this.sequence_number=t,this.payload=i,this.max_gas_amount=s,this.gas_unit_price=r,this.expiration_timestamp_secs=n,this.chain_id=a}serialize(e){this.sender.serialize(e),e.serializeU64(this.sequence_number),this.payload.serialize(e),e.serializeU64(this.max_gas_amount),e.serializeU64(this.gas_unit_price),e.serializeU64(this.expiration_timestamp_secs),this.chain_id.serialize(e)}static deserialize(e){const t=K.deserialize(e),i=e.deserializeU64(),s=Be.deserialize(e),r=e.deserializeU64(),n=e.deserializeU64(),a=e.deserializeU64(),o=Me.deserialize(e);return new ve(t,i,s,r,n,a,o)}},be=class{constructor(e,t,i){this.code=e,this.ty_args=t,this.args=i}serialize(e){e.serializeBytes(this.code),k(this.ty_args,e),k(this.args,e)}static deserialize(e){const t=e.deserializeBytes(),i=$(e,le),s=$(e,ke);return new be(t,i,s)}},Te=class{constructor(e,t,i,s){this.module_name=e,this.function_name=t,this.ty_args=i,this.args=s}static natural(e,t,i,s){return new Te(Se.fromStr(e),new ue(t),i,s)}static natual(e,t,i,s){return Te.natural(e,t,i,s)}serialize(e){this.module_name.serialize(e),this.function_name.serialize(e),k(this.ty_args,e),e.serializeU32AsUleb128(this.args.length),this.args.forEach((t=>{e.serializeBytes(t)}))}static deserialize(e){const t=Se.deserialize(e),i=ue.deserialize(e),s=$(e,le),r=e.deserializeUleb128AsU32(),n=[];for(let a=0;a<r;a+=1)n.push(e.deserializeBytes());return new Te(t,i,s,n)}},Ae=class{constructor(e){this.code=e}serialize(e){e.serializeBytes(this.code)}static deserialize(e){const t=e.deserializeBytes();return new Ae(t)}},Se=class{constructor(e,t){this.address=e,this.name=t}static fromStr(e){const t=e.split("::");if(2!==t.length)throw new Error("Invalid module id.");return new Se(K.fromHex(new _(t[0])),new ue(t[1]))}serialize(e){this.address.serialize(e),this.name.serialize(e)}static deserialize(e){const t=K.deserialize(e),i=ue.deserialize(e);return new Se(t,i)}},Re=class{serialize(e){throw new Error("Not implemented.")}static deserialize(e){throw new Error("Not implemented.")}},Ee=class{serialize(e){throw new Error("Not implmented.")}static deserialize(e){throw new Error("Not implmented.")}},ze=class{constructor(e,t){this.raw_txn=e,this.authenticator=t}serialize(e){this.raw_txn.serialize(e),this.authenticator.serialize(e)}static deserialize(e){const t=ve.deserialize(e),i=ie.deserialize(e);return new ze(t,i)}},qe=class{static deserialize(e){const t=e.deserializeUleb128AsU32();if(0===t)return Ue.load(e);throw new Error(`Unknown variant index for RawTransactionWithData: ${t}`)}},Ue=class extends qe{constructor(e,t){super(),this.raw_txn=e,this.secondary_signer_addresses=t}serialize(e){e.serializeU32AsUleb128(0),this.raw_txn.serialize(e),k(this.secondary_signer_addresses,e)}static load(e){const t=ve.deserialize(e),i=$(e,K);return new Ue(t,i)}},Be=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return xe.load(e);case 2:return Ie.load(e);default:throw new Error(`Unknown variant index for TransactionPayload: ${t}`)}}},xe=class extends Be{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){const t=be.deserialize(e);return new xe(t)}},Ie=class extends Be{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),this.value.serialize(e)}static load(e){const t=Te.deserialize(e);return new Ie(t)}},Me=class{constructor(e){this.value=e}serialize(e){e.serializeU8(this.value)}static deserialize(e){const t=e.deserializeU8();return new Me(t)}},ke=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Ce.load(e);case 1:return $e.load(e);case 2:return Ne.load(e);case 3:return Pe.load(e);case 4:return He.load(e);case 5:return De.load(e);default:throw new Error(`Unknown variant index for TransactionArgument: ${t}`)}}},Ce=class extends ke{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),e.serializeU8(this.value)}static load(e){const t=e.deserializeU8();return new Ce(t)}},$e=class extends ke{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(1),e.serializeU64(this.value)}static load(e){const t=e.deserializeU64();return new $e(t)}},Ne=class extends ke{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),e.serializeU128(this.value)}static load(e){const t=e.deserializeU128();return new Ne(t)}},Pe=class extends ke{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){const t=K.deserialize(e);return new Pe(t)}},He=class extends ke{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(4),e.serializeBytes(this.value)}static load(e){const t=e.deserializeBytes();return new He(t)}},De=class extends ke{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(5),e.serializeBool(this.value)}static load(e){const t=e.deserializeBool();return new De(t)}},Oe=class{getHashSalt(){const e=c.DZ.create();return e.update("APTOS::Transaction"),e.digest()}static deserialize(e){const t=e.deserializeUleb128AsU32();if(0===t)return We.load(e);throw new Error(`Unknown variant index for Transaction: ${t}`)}},We=class extends Oe{constructor(e){super(),this.value=e}hash(){const e=c.DZ.create();return e.update(this.getHashSalt()),e.update(N(this)),e.digest()}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){return new We(ze.deserialize(e))}},Ge=class{constructor(e){this.name=e}serialize(e){e.serializeStr(this.name)}static deserialize(e){const t=e.deserializeStr();return new Ge(t)}},Le=class{constructor(e,t){this.name=e,this.type_tag=t}serialize(e){e.serializeStr(this.name),this.type_tag.serialize(e)}static deserialize(e){const t=e.deserializeStr(),i=le.deserialize(e);return new Le(t,i)}},Ve=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Fe.load(e);case 1:return je.load(e);default:throw new Error(`Unknown variant index for TransactionPayload: ${t}`)}}},Fe=class extends Ve{constructor(e,t,i,s,r){super(),this.name=e,this.doc=t,this.code=i,this.ty_args=s,this.args=r}serialize(e){e.serializeU32AsUleb128(0),e.serializeStr(this.name),e.serializeStr(this.doc),e.serializeBytes(this.code),k(this.ty_args,e),k(this.args,e)}static load(e){const t=e.deserializeStr(),i=e.deserializeStr(),s=e.deserializeBytes(),r=$(e,Ge),n=$(e,Le);return new Fe(t,i,s,r,n)}},je=class extends Ve{constructor(e,t,i,s,r){super(),this.name=e,this.module_name=t,this.doc=i,this.ty_args=s,this.args=r}serialize(e){e.serializeU32AsUleb128(1),e.serializeStr(this.name),this.module_name.serialize(e),e.serializeStr(this.doc),k(this.ty_args,e),k(this.args,e)}static load(e){const t=e.deserializeStr(),i=Se.deserialize(e),s=e.deserializeStr(),r=$(e,Ge),n=$(e,Le);return new je(t,i,s,r,n)}},Ke=class{constructor(e){if(e.length!==Ke.LENGTH)throw new Error("Expected a byte array of length 32");this.bytes=e}static fromMultiEd25519PublicKey(e){const t=e.toBytes(),i=new Uint8Array(t.length+1);i.set(t),i.set([Ke.MULTI_ED25519_SCHEME],t.length);const s=c.DZ.create();return s.update(i),new Ke(s.digest())}static fromEd25519PublicKey(e){const t=e.value,i=new Uint8Array(t.length+1);i.set(t),i.set([Ke.ED25519_SCHEME],t.length);const s=c.DZ.create();return s.update(i),new Ke(s.digest())}derivedAddress(){return _.fromUint8Array(this.bytes)}},Je=Ke;Je.LENGTH=32,Je.MULTI_ED25519_SCHEME=1,Je.ED25519_SCHEME=0;var Ze=class{constructor(e,t,i,s,r,n,a){this.accountAddress=e,this.moduleName=t,this.structName=i,this.sequenceNumber=s,this.originator=r,this.currentAuthKey=n,this.newPublicKey=a}serialize(e){this.accountAddress.serialize(e),e.serializeStr(this.moduleName),e.serializeStr(this.structName),e.serializeU64(this.sequenceNumber),this.originator.serialize(e),this.currentAuthKey.serialize(e),e.serializeBytes(this.newPublicKey)}},Xe=class{static fromAptosAccountObject(e){return new Xe(_.ensure(e.privateKeyHex).toUint8Array(),e.address)}static fromDerivePath(e,t){if(!Xe.isValidPath(e))throw new Error("Invalid derivation path");const i=t.trim().split(/\s+/).map((e=>e.toLowerCase())).join(" "),{key:s}=m(e,(0,n.ci)(r.Z1(i)));return new Xe(s)}constructor(e,t){this.signingKey=e?s.sign.keyPair.fromSeed(e.slice(0,32)):s.sign.keyPair(),this.accountAddress=_.ensure(t||this.authKey().hex())}address(){return this.accountAddress}authKey(){const e=new Z(this.signingKey.publicKey);return Je.fromEd25519PublicKey(e).derivedAddress()}pubKey(){return _.fromUint8Array(this.signingKey.publicKey)}signBuffer(e){const t=s.sign(e,this.signingKey.secretKey);return _.fromUint8Array(t.slice(0,64))}signHexString(e){const t=_.ensure(e).toUint8Array();return this.signBuffer(t)}toPrivateKeyObject(){return{address:this.address().hex(),publicKeyHex:this.pubKey().hex(),privateKeyHex:_.fromUint8Array(this.signingKey.secretKey.slice(0,32)).hex()}}},Qe=Xe;Qe.isValidPath=e=>!!/^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'+$/.test(e),y([T()],Qe.prototype,"authKey",1);h({},{$AccountData:()=>Rt,$AccountSignature:()=>Et,$AccountSignature_Ed25519Signature:()=>zt,$AccountSignature_MultiEd25519Signature:()=>qt,$Address:()=>Ut,$AptosError:()=>Bt,$AptosErrorCode:()=>xt,$Block:()=>It,$BlockMetadataTransaction:()=>Mt,$DecodedTableData:()=>kt,$DeleteModule:()=>$t,$DeleteResource:()=>Nt,$DeleteTableItem:()=>Pt,$DeletedTableData:()=>Ct,$DirectWriteSet:()=>Ht,$Ed25519Signature:()=>Dt,$EncodeSubmissionRequest:()=>Ot,$EntryFunctionId:()=>Wt,$EntryFunctionPayload:()=>Gt,$Event:()=>Lt,$EventGuid:()=>Vt,$GasEstimation:()=>Ft,$GenesisPayload:()=>jt,$GenesisPayload_WriteSetPayload:()=>Kt,$GenesisTransaction:()=>Jt,$HashValue:()=>Zt,$HealthCheckSuccess:()=>Xt,$HexEncodedBytes:()=>Qt,$IdentifierWrapper:()=>Yt,$IndexResponse:()=>ei,$ModuleBundlePayload:()=>ti,$MoveAbility:()=>ii,$MoveFunction:()=>si,$MoveFunctionGenericTypeParam:()=>ri,$MoveFunctionVisibility:()=>ni,$MoveModule:()=>ai,$MoveModuleBytecode:()=>oi,$MoveModuleId:()=>ci,$MoveResource:()=>ui,$MoveScriptBytecode:()=>li,$MoveStruct:()=>di,$MoveStructField:()=>pi,$MoveStructGenericTypeParam:()=>hi,$MoveStructTag:()=>yi,$MoveStructValue:()=>gi,$MoveType:()=>fi,$MoveValue:()=>mi,$MultiAgentSignature:()=>_i,$MultiEd25519Signature:()=>wi,$PendingTransaction:()=>vi,$RawTableItemRequest:()=>bi,$RoleType:()=>Ti,$ScriptPayload:()=>Ai,$ScriptWriteSet:()=>Si,$StateCheckpointTransaction:()=>Ri,$StateKeyWrapper:()=>Ei,$SubmitTransactionRequest:()=>zi,$TableItemRequest:()=>qi,$Transaction:()=>Ui,$TransactionPayload:()=>Ci,$TransactionPayload_EntryFunctionPayload:()=>$i,$TransactionPayload_ModuleBundlePayload:()=>Ni,$TransactionPayload_ScriptPayload:()=>Pi,$TransactionSignature:()=>Oi,$TransactionSignature_Ed25519Signature:()=>Wi,$TransactionSignature_MultiAgentSignature:()=>Gi,$TransactionSignature_MultiEd25519Signature:()=>Li,$Transaction_BlockMetadataTransaction:()=>Bi,$Transaction_GenesisTransaction:()=>xi,$Transaction_PendingTransaction:()=>Ii,$Transaction_StateCheckpointTransaction:()=>Mi,$Transaction_UserTransaction:()=>ki,$TransactionsBatchSingleSubmissionFailure:()=>Hi,$TransactionsBatchSubmissionResult:()=>Di,$U128:()=>Vi,$U64:()=>Fi,$UserTransaction:()=>ji,$VersionedEvent:()=>Ki,$WriteModule:()=>Ji,$WriteResource:()=>Zi,$WriteSet:()=>Xi,$WriteSetChange:()=>es,$WriteSetChange_DeleteModule:()=>ts,$WriteSetChange_DeleteResource:()=>is,$WriteSetChange_DeleteTableItem:()=>ss,$WriteSetChange_WriteModule:()=>rs,$WriteSetChange_WriteResource:()=>ns,$WriteSetChange_WriteTableItem:()=>as,$WriteSetPayload:()=>os,$WriteSet_DirectWriteSet:()=>Qi,$WriteSet_ScriptWriteSet:()=>Yi,$WriteTableItem:()=>cs,AccountsService:()=>yt,ApiError:()=>et,AptosErrorCode:()=>Tt,AptosGeneratedClient:()=>vt,BaseHttpRequest:()=>Ye,BlocksService:()=>gt,CancelError:()=>tt,CancelablePromise:()=>it,EventsService:()=>ft,GeneralService:()=>mt,MoveFunctionVisibility:()=>At,OpenAPI:()=>bt,RoleType:()=>St,TablesService:()=>_t,TransactionsService:()=>wt});var Ye=class{constructor(e){this.config=e}},et=class extends Error{constructor(e,t,i){super(i),this.name="ApiError",this.url=t.url,this.status=t.status,this.statusText=t.statusText,this.body=t.body,this.request=e}},tt=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},it=class{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this._cancelHandlers=[],this._promise=new Promise(((t,i)=>{this._resolve=t,this._reject=i;const s=e=>{this._isResolved||this._isRejected||this._isCancelled||this._cancelHandlers.push(e)};return Object.defineProperty(s,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(s,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(s,"isCancelled",{get:()=>this._isCancelled}),e((e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,null==(t=this._resolve)||t.call(this,e))}),(e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,null==(t=this._reject)||t.call(this,e))}),s)}))}then(e,t){return this._promise.then(e,t)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(){var e;if(!(this._isResolved||this._isRejected||this._isCancelled)){if(this._isCancelled=!0,this._cancelHandlers.length)try{for(const e of this._cancelHandlers)e()}catch(t){return void console.warn("Cancellation threw an error",t)}this._cancelHandlers.length=0,null==(e=this._reject)||e.call(this,new tt("Request aborted"))}}get isCancelled(){return this._isCancelled}};Symbol.toStringTag;var st=class{constructor(e=new Map){this.jar=e}setCookie(e,t){var i;const s=e.origin.toLowerCase();this.jar.has(s)||this.jar.set(s,[]);const r=st.parse(t);this.jar.set(s,[...(null==(i=this.jar.get(s))?void 0:i.filter((e=>e.name!==r.name)))||[],r])}getCookies(e){var t;const i=e.origin.toLowerCase();return this.jar.get(i)&&(null==(t=this.jar.get(i))?void 0:t.filter((e=>!e.expires||e.expires>new Date)))||[]}static parse(e){if("string"!==typeof e)throw new Error("argument str must be a string");const t=e.split(";").map((e=>e.trim()));let i;if(!(t.length>0))throw new Error("Invalid cookie");{const[e,s]=t[0].split("=");if(!e||!s)throw new Error("Invalid cookie");i={name:e,value:s}}return t.slice(1).forEach((e=>{const[t,s]=e.split("=");if(!t.trim())throw new Error("Invalid cookie");const r=t.toLowerCase(),n="'"===(null==s?void 0:s.charAt(0))||'"'===(null==s?void 0:s.charAt(0))?null==s?void 0:s.slice(1,-1):s;if("expires"===r&&(i.expires=new Date(n)),"path"===r&&(i.path=n),"samesite"===r){if("Lax"!==n&&"None"!==n&&"Strict"!==n)throw new Error("Invalid cookie SameSite value");i.sameSite=n}"secure"===r&&(i.secure=!0)})),i}},rt=new st;u.interceptors.response.use((e=>(Array.isArray(e.headers["set-cookie"])&&e.headers["set-cookie"].forEach((t=>{rt.setCookie(new URL(e.config.url),t)})),e))),u.interceptors.request.use((function(e){const t=rt.getCookies(new URL(e.url));return(null==t?void 0:t.length)>0&&e.headers&&(e.headers.cookie=t.map((e=>`${e.name}=${e.value}`)).join("; ")),e}));var nt=e=>void 0!==e&&null!==e,at=e=>"string"===typeof e,ot=e=>at(e)&&""!==e,ct=e=>"object"===typeof e&&"string"===typeof e.type&&"function"===typeof e.stream&&"function"===typeof e.arrayBuffer&&"function"===typeof e.constructor&&"string"===typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag]),ut=e=>{const t=[],i=(e,s)=>{nt(s)&&(Array.isArray(s)?s.forEach((t=>{i(e,t)})):"object"===typeof s?Object.entries(s).forEach((([t,s])=>{i(`${e}[${t}]`,s)})):((e,i)=>{t.push(`${encodeURIComponent(e)}=${encodeURIComponent(String(i))}`)})(e,s))};return Object.entries(e).forEach((([e,t])=>{i(e,t)})),t.length>0?`?${t.join("&")}`:""},lt=async(e,t)=>"function"===typeof t?t(e):t,dt=async(e,t,i)=>{const s=await lt(t,e.TOKEN),r=await lt(t,e.USERNAME),n=await lt(t,e.PASSWORD),a=await lt(t,e.HEADERS),o="function"===typeof(null==i?void 0:i.getHeaders)&&(null==i?void 0:i.getHeaders())||{},c=Object.entries({Accept:"application/json",...a,...t.headers,...o}).filter((([e,t])=>nt(t))).reduce(((e,[t,i])=>({...e,[t]:String(i)})),{});if(ot(s)&&(c.Authorization=`Bearer ${s}`),ot(r)&&ot(n)){const e=btoa(`${r}:${n}`);c.Authorization=`Basic ${e}`}return t.body&&(t.mediaType?c["Content-Type"]=t.mediaType:ct(t.body)?c["Content-Type"]=t.body.type||"application/octet-stream":at(t.body)?c["Content-Type"]="text/plain":t.body instanceof l||(c["Content-Type"]="application/json")),c},pt=(e,t)=>new it((async(i,s,r)=>{try{const s=((e,t)=>{const i=e.ENCODE_PATH||encodeURI,s=t.url.replace("{api-version}",e.VERSION).replace(/{(.*?)}/g,((e,s)=>{var r;return(null==(r=t.path)?void 0:r.hasOwnProperty(s))?i(String(t.path[s])):e})),r=`${e.BASE}${s}`;return t.query?`${r}${ut(t.query)}`:r})(e,t),o=(e=>{if(e.formData){const t=new l,i=(e,i)=>{at(i)||ct(i)?t.append(e,i):t.append(e,JSON.stringify(i))};return Object.entries(e.formData).filter((([e,t])=>nt(t))).forEach((([e,t])=>{Array.isArray(t)?t.forEach((t=>i(e,t))):i(e,t)})),t}})(t),c=(e=>{if(e.body)return e.body})(t),d=await dt(e,t,o);if(!r.isCancelled){const l=await(async(e,t,i,s,r,n,a)=>{const o=u.CancelToken.source(),c={url:i,headers:n,data:null!=s?s:r,method:t.method,withCredentials:e.WITH_CREDENTIALS,cancelToken:o.token};Object.keys(e.HEADERS||{}).filter((e=>"accept"===e.toLowerCase())).map((t=>e.HEADERS[t])).includes("application/x-bcs")&&(c.responseType="arraybuffer"),a((()=>o.cancel("The user aborted a request.")));try{return await u.request(c)}catch(l){const e=l;if(e.response)return e.response;throw l}})(e,t,s,c,o,d,r),p=(e=>{if(204!==e.status)return e.data})(l),h=((e,t)=>{if(t){const i=e.headers[t];if(at(i))return i}})(l,t.responseHeader),y={url:s,ok:(n=l.status,n>=200&&n<300),status:l.status,statusText:l.statusText,body:null!=h?h:p};((e,t)=>{const i={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...e.errors}[t.status];if(i)throw new et(e,t,i);if(!t.ok)throw new et(e,t,"Generic Error")})(t,y);const g=y.body;try{g.__headers=l.headers}catch(a){}i(g)}}catch(o){s(o)}var n})),ht=class extends Ye{constructor(e){super(e)}request(e){return pt(this.config,e)}},yt=class{constructor(e){this.httpRequest=e}getAccount(e,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}",path:{address:e},query:{ledger_version:t}})}getAccountResources(e,t,i,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resources",path:{address:e},query:{ledger_version:t,start:i,limit:s}})}getAccountModules(e,t,i,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/modules",path:{address:e},query:{ledger_version:t,start:i,limit:s}})}getAccountResource(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resource/{resource_type}",path:{address:e,resource_type:t},query:{ledger_version:i}})}getAccountModule(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/module/{module_name}",path:{address:e,module_name:t},query:{ledger_version:i}})}},gt=class{constructor(e){this.httpRequest=e}getBlockByHeight(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_height/{block_height}",path:{block_height:e},query:{with_transactions:t}})}getBlockByVersion(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_version/{version}",path:{version:e},query:{with_transactions:t}})}},ft=class{constructor(e){this.httpRequest=e}getEventsByCreationNumber(e,t,i,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{creation_number}",path:{address:e,creation_number:t},query:{start:i,limit:s}})}getEventsByEventHandle(e,t,i,s,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{event_handle}/{field_name}",path:{address:e,event_handle:t,field_name:i},query:{start:s,limit:r}})}},mt=class{constructor(e){this.httpRequest=e}spec(){return this.httpRequest.request({method:"GET",url:"/spec"})}healthy(e){return this.httpRequest.request({method:"GET",url:"/-/healthy",query:{duration_secs:e}})}getLedgerInfo(){return this.httpRequest.request({method:"GET",url:"/"})}},_t=class{constructor(e){this.httpRequest=e}getTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}getRawTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/raw_item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}},wt=class{constructor(e){this.httpRequest=e}getTransactions(e,t){return this.httpRequest.request({method:"GET",url:"/transactions",query:{start:e,limit:t}})}submitTransaction(e){return this.httpRequest.request({method:"POST",url:"/transactions",body:e,mediaType:"application/json"})}getTransactionByHash(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_hash/{txn_hash}",path:{txn_hash:e}})}getTransactionByVersion(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_version/{txn_version}",path:{txn_version:e}})}getAccountTransactions(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/transactions",path:{address:e},query:{start:t,limit:i}})}submitBatchTransactions(e){return this.httpRequest.request({method:"POST",url:"/transactions/batch",body:e,mediaType:"application/json"})}simulateTransaction(e,t,i,s){return this.httpRequest.request({method:"POST",url:"/transactions/simulate",query:{estimate_max_gas_amount:t,estimate_gas_unit_price:i,estimate_prioritized_gas_unit_price:s},body:e,mediaType:"application/json"})}encodeSubmission(e){return this.httpRequest.request({method:"POST",url:"/transactions/encode_submission",body:e,mediaType:"application/json"})}estimateGasPrice(){return this.httpRequest.request({method:"GET",url:"/estimate_gas_price"})}},vt=class{constructor(e,t=ht){var i,s,r,n;this.request=new t({BASE:null!=(i=null==e?void 0:e.BASE)?i:"/v1",VERSION:null!=(s=null==e?void 0:e.VERSION)?s:"1.2.0",WITH_CREDENTIALS:null!=(r=null==e?void 0:e.WITH_CREDENTIALS)&&r,CREDENTIALS:null!=(n=null==e?void 0:e.CREDENTIALS)?n:"include",TOKEN:null==e?void 0:e.TOKEN,USERNAME:null==e?void 0:e.USERNAME,PASSWORD:null==e?void 0:e.PASSWORD,HEADERS:null==e?void 0:e.HEADERS,ENCODE_PATH:null==e?void 0:e.ENCODE_PATH}),this.accounts=new yt(this.request),this.blocks=new gt(this.request),this.events=new ft(this.request),this.general=new mt(this.request),this.tables=new _t(this.request),this.transactions=new wt(this.request)}},bt={BASE:"/v1",VERSION:"1.2.0",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0},Tt=(e=>(e.ACCOUNT_NOT_FOUND="account_not_found",e.RESOURCE_NOT_FOUND="resource_not_found",e.MODULE_NOT_FOUND="module_not_found",e.STRUCT_FIELD_NOT_FOUND="struct_field_not_found",e.VERSION_NOT_FOUND="version_not_found",e.TRANSACTION_NOT_FOUND="transaction_not_found",e.TABLE_ITEM_NOT_FOUND="table_item_not_found",e.BLOCK_NOT_FOUND="block_not_found",e.VERSION_PRUNED="version_pruned",e.BLOCK_PRUNED="block_pruned",e.INVALID_INPUT="invalid_input",e.INVALID_TRANSACTION_UPDATE="invalid_transaction_update",e.SEQUENCE_NUMBER_TOO_OLD="sequence_number_too_old",e.VM_ERROR="vm_error",e.HEALTH_CHECK_FAILED="health_check_failed",e.MEMPOOL_IS_FULL="mempool_is_full",e.INTERNAL_ERROR="internal_error",e.WEB_FRAMEWORK_ERROR="web_framework_error",e.BCS_NOT_SUPPORTED="bcs_not_supported",e.API_DISABLED="api_disabled",e))(Tt||{}),At=(e=>(e.PRIVATE="private",e.PUBLIC="public",e.FRIEND="friend",e))(At||{}),St=(e=>(e.VALIDATOR="validator",e.FULL_NODE="full_node",e))(St||{}),Rt={description:"Account data\n\n    A simplified version of the onchain Account resource",properties:{sequence_number:{type:"U64",isRequired:!0},authentication_key:{type:"HexEncodedBytes",isRequired:!0}}},Et={type:"one-of",description:"Account signature scheme\n\n    The account signature scheme allows you to have two types of accounts:\n\n    1. A single Ed25519 key account, one private key\n    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.",contains:[{type:"AccountSignature_Ed25519Signature"},{type:"AccountSignature_MultiEd25519Signature"}]},zt={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},qt={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},Ut={type:"string",description:"A hex encoded 32 byte Aptos account address.\n\n    This is represented in a string as a 64 character hex string, sometimes\n    shortened by stripping leading 0s, and adding a 0x.\n\n    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.\n    ",format:"hex"},Bt={description:"This is the generic struct we use for all API errors, it contains a string\n    message and an Aptos API specific error code.",properties:{message:{type:"string",description:"A message describing the error",isRequired:!0},error_code:{type:"AptosErrorCode",isRequired:!0},vm_error_code:{type:"number",description:"A code providing VM error details when submitting transactions to the VM",format:"uint64"}}},xt={type:"Enum"},It={description:"A Block with or without transactions\n\n    This contains the information about a transactions along with\n    associated transactions if requested",properties:{block_height:{type:"U64",isRequired:!0},block_hash:{type:"HashValue",isRequired:!0},block_timestamp:{type:"U64",isRequired:!0},first_version:{type:"U64",isRequired:!0},last_version:{type:"U64",isRequired:!0},transactions:{type:"array",contains:{type:"Transaction"}}}},Mt={description:"A block metadata transaction\n\n    This signifies the beginning of a block, and contains information\n    about the specific block",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},id:{type:"HashValue",isRequired:!0},epoch:{type:"U64",isRequired:!0},round:{type:"U64",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0},previous_block_votes_bitvec:{type:"array",contains:{type:"number",format:"uint8"},isRequired:!0},proposer:{type:"Address",isRequired:!0},failed_proposer_indices:{type:"array",contains:{type:"number",format:"uint32"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},kt={description:"Decoded table data",properties:{key:{description:"Key of table in JSON",properties:{},isRequired:!0},key_type:{type:"string",description:"Type of key",isRequired:!0},value:{description:"Value of table in JSON",properties:{},isRequired:!0},value_type:{type:"string",description:"Type of value",isRequired:!0}}},Ct={description:"Deleted table data",properties:{key:{description:"Deleted key",properties:{},isRequired:!0},key_type:{type:"string",description:"Deleted key type",isRequired:!0}}},$t={description:"Delete a module",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},module:{type:"MoveModuleId",isRequired:!0}}},Nt={description:"Delete a resource",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},resource:{type:"MoveStructTag",isRequired:!0}}},Pt={description:"Delete a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DeletedTableData"}}},Ht={properties:{changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},Dt={description:"A single Ed25519 signature",properties:{public_key:{type:"HexEncodedBytes",isRequired:!0},signature:{type:"HexEncodedBytes",isRequired:!0}}},Ot={description:"Request to encode a submission",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},secondary_signers:{type:"array",contains:{type:"Address"}}}},Wt={type:"string",description:"Entry function id is string representation of a entry function defined on-chain.\n\n    Format: `{address}::{module name}::{function name}`\n\n    Both `module name` and `function name` are case-sensitive.\n    "},Gt={description:"Payload which runs a single entry function",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},Lt={description:"An event from a transaction",properties:{guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},Vt={properties:{creation_number:{type:"U64",isRequired:!0},account_address:{type:"Address",isRequired:!0}}},Ft={description:"Struct holding the outputs of the estimate gas API",properties:{deprioritized_gas_estimate:{type:"number",description:"The deprioritized estimate for the gas unit price",format:"uint64"},gas_estimate:{type:"number",description:"The current estimate for the gas unit price",isRequired:!0,format:"uint64"},prioritized_gas_estimate:{type:"number",description:"The prioritized estimate for the gas unit price",format:"uint64"}}},jt={type:"one-of",description:"The writeset payload of the Genesis transaction",contains:[{type:"GenesisPayload_WriteSetPayload"}]},Kt={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteSetPayload"}]},Jt={description:"The genesis transaction\n\n    This only occurs at the genesis transaction (version 0)",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},payload:{type:"GenesisPayload",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},Zt={type:"string"},Xt={description:"Representation of a successful healthcheck",properties:{message:{type:"string",isRequired:!0}}},Qt={type:"string",description:"All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the `Address` type, HexEncodedBytes will not trim any zeros.\n    ",format:"hex"},Yt={type:"string"},ei={description:'The struct holding all data returned to the client by the\n    index endpoint (i.e., GET "/").  Only for responding in JSON',properties:{chain_id:{type:"number",description:"Chain ID of the current chain",isRequired:!0,format:"uint8"},epoch:{type:"U64",isRequired:!0},ledger_version:{type:"U64",isRequired:!0},oldest_ledger_version:{type:"U64",isRequired:!0},ledger_timestamp:{type:"U64",isRequired:!0},node_role:{type:"RoleType",isRequired:!0},oldest_block_height:{type:"U64",isRequired:!0},block_height:{type:"U64",isRequired:!0},git_hash:{type:"string"}}},ti={properties:{modules:{type:"array",contains:{type:"MoveModuleBytecode"},isRequired:!0}}},ii={type:"string"},si={description:"Move function",properties:{name:{type:"IdentifierWrapper",isRequired:!0},visibility:{type:"MoveFunctionVisibility",isRequired:!0},is_entry:{type:"boolean",description:"Whether the function can be called as an entry function directly in a transaction",isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveFunctionGenericTypeParam"},isRequired:!0},params:{type:"array",contains:{type:"MoveType"},isRequired:!0},return:{type:"array",contains:{type:"MoveType"},isRequired:!0}}},ri={description:"Move function generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},ni={type:"Enum"},ai={description:"A Move module",properties:{address:{type:"Address",isRequired:!0},name:{type:"IdentifierWrapper",isRequired:!0},friends:{type:"array",contains:{type:"MoveModuleId"},isRequired:!0},exposed_functions:{type:"array",contains:{type:"MoveFunction"},isRequired:!0},structs:{type:"array",contains:{type:"MoveStruct"},isRequired:!0}}},oi={description:"Move module bytecode along with it's ABI",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveModule"}}},ci={type:"string",description:"Move module id is a string representation of Move module.\n\n    Format: `{address}::{module name}`\n\n    `address` should be hex-encoded 32 byte account address that is prefixed with `0x`.\n\n    Module name is case-sensitive.\n    "},ui={description:"A parsed Move resource",properties:{type:{type:"MoveStructTag",isRequired:!0},data:{type:"MoveStructValue",isRequired:!0}}},li={description:"Move script bytecode",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveFunction"}}},di={description:"A move struct",properties:{name:{type:"IdentifierWrapper",isRequired:!0},is_native:{type:"boolean",description:"Whether the struct is a native struct of Move",isRequired:!0},abilities:{type:"array",contains:{type:"MoveAbility"},isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveStructGenericTypeParam"},isRequired:!0},fields:{type:"array",contains:{type:"MoveStructField"},isRequired:!0}}},pi={description:"Move struct field",properties:{name:{type:"IdentifierWrapper",isRequired:!0},type:{type:"MoveType",isRequired:!0}}},hi={description:"Move generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},yi={type:"string",description:"String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. `move_module_address`, `module_name` and `struct_name`, all joined by `::`\n    2. `struct generic type parameters` joined by `, `\n\n    Examples:\n     * `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`\n     * `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/basics-accounts) for more details.\n    ",pattern:"^0x[0-9a-zA-Z:_<>]+$"},gi={description:'This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move `bool` type value is serialized into `boolean`.\n\n    Move `u8` type value is serialized into `integer`.\n\n    Move `u64` and `u128` type value is serialized into `string`.\n\n    Move `address` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - `0x1`\n    - `0x1668f6be25668c1a17cd8caf6b8d2f25`\n\n    Move `vector` type value is serialized into `array`, except `vector<u8>` which is serialized into a\n    HexEncodedBytes string with `0x` prefix.\n    For example:\n    - `vector<u64>{255, 255}` => `["255", "255"]`\n    - `vector<u8>{255, 255}` => `0xffff`\n\n    Move `struct` type value is serialized into `object` that looks like this (except some Move stdlib types, see the following section):\n    ```json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    ```\n\n    For example:\n    `{ "created": "0xa550c18", "role_id": "0" }`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into `string`. For example, struct value `0x1::string::String{bytes: b"Hello World!"}`\n    is serialized as `"Hello World!"` in JSON.\n    ',properties:{}},fi={type:"string",description:"String representation of an on-chain Move type tag that is exposed in transaction payload.\n    Values:\n    - bool\n    - u8\n    - u64\n    - u128\n    - address\n    - signer\n    - vector: `vector<{non-reference MoveTypeId}>`\n    - struct: `{address}::{module_name}::{struct_name}::<{generic types}>`\n\n    Vector type value examples:\n    - `vector<u8>`\n    - `vector<vector<u64>>`\n    - `vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>`\n\n    Struct type value examples:\n    - `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\n    - `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n    ",pattern:"^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$"},mi={type:"any-of",description:"An enum of the possible Move value types",contains:[{type:"number",format:"uint8"},{type:"U64"},{type:"U128"},{type:"boolean"},{type:"Address"},{type:"array",contains:{type:"MoveValue"}},{type:"HexEncodedBytes"},{type:"MoveStructValue"},{type:"string"}]},_i={description:"Multi agent signature for multi agent transactions\n\n    This allows you to have transactions across multiple accounts",properties:{sender:{type:"AccountSignature",isRequired:!0},secondary_signer_addresses:{type:"array",contains:{type:"Address"},isRequired:!0},secondary_signers:{type:"array",contains:{type:"AccountSignature"},isRequired:!0}}},wi={description:"A Ed25519 multi-sig signature\n\n    This allows k-of-n signing for a transaction",properties:{public_keys:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},signatures:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},threshold:{type:"number",description:"The number of signatures required for a successful transaction",isRequired:!0,format:"uint8"},bitmap:{type:"HexEncodedBytes",isRequired:!0}}},vi={description:"A transaction waiting in mempool",properties:{hash:{type:"HashValue",isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"}}},bi={description:"Table Item request for the GetTableItemRaw API",properties:{key:{type:"HexEncodedBytes",isRequired:!0}}},Ti={type:"Enum"},Ai={description:"Payload which runs a script that can run multiple functions",properties:{code:{type:"MoveScriptBytecode",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},Si={properties:{execute_as:{type:"Address",isRequired:!0},script:{type:"ScriptPayload",isRequired:!0}}},Ri={description:"A state checkpoint transaction",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},Ei={type:"string",description:"Representation of a StateKey as a hex string. This is used for cursor based pagination.\n    "},zi={description:"A request to submit a transaction\n\n    This requires a transaction and a signature of it",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature",isRequired:!0}}},qi={description:"Table Item request for the GetTableItem API",properties:{key_type:{type:"MoveType",isRequired:!0},value_type:{type:"MoveType",isRequired:!0},key:{description:"The value of the table item's key",properties:{},isRequired:!0}}},Ui={type:"one-of",description:"Enum of the different types of transactions in Aptos",contains:[{type:"Transaction_PendingTransaction"},{type:"Transaction_UserTransaction"},{type:"Transaction_GenesisTransaction"},{type:"Transaction_BlockMetadataTransaction"},{type:"Transaction_StateCheckpointTransaction"}]},Bi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"BlockMetadataTransaction"}]},xi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"GenesisTransaction"}]},Ii={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"PendingTransaction"}]},Mi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"StateCheckpointTransaction"}]},ki={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"UserTransaction"}]},Ci={type:"one-of",description:"An enum of the possible transaction payloads",contains:[{type:"TransactionPayload_EntryFunctionPayload"},{type:"TransactionPayload_ScriptPayload"},{type:"TransactionPayload_ModuleBundlePayload"}]},$i={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"EntryFunctionPayload"}]},Ni={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ModuleBundlePayload"}]},Pi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptPayload"}]},Hi={description:"Information telling which batch submission transactions failed",properties:{error:{type:"AptosError",isRequired:!0},transaction_index:{type:"number",description:"The index of which transaction failed, same as submission order",isRequired:!0,format:"uint64"}}},Di={description:"Batch transaction submission result\n\n    Tells which transactions failed",properties:{transaction_failures:{type:"array",contains:{type:"TransactionsBatchSingleSubmissionFailure"},isRequired:!0}}},Oi={type:"one-of",description:"An enum representing the different transaction signatures available",contains:[{type:"TransactionSignature_Ed25519Signature"},{type:"TransactionSignature_MultiEd25519Signature"},{type:"TransactionSignature_MultiAgentSignature"}]},Wi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},Gi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiAgentSignature"}]},Li={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},Vi={type:"string",description:"A string containing a 128-bit unsigned integer.\n\n    We represent u128 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    ",format:"uint64"},Fi={type:"string",description:"A string containing a 64-bit unsigned integer.\n\n    We represent u64 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    ",format:"uint64"},ji={description:"A transaction submitted by a user to change the state of the blockchain",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"},events:{type:"array",contains:{type:"Event"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},Ki={description:"An event from a transaction with a version",properties:{version:{type:"U64",isRequired:!0},guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},Ji={description:"Write a new module or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveModuleBytecode",isRequired:!0}}},Zi={description:"Write a resource or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveResource",isRequired:!0}}},Xi={type:"one-of",description:"The associated writeset with a payload",contains:[{type:"WriteSet_ScriptWriteSet"},{type:"WriteSet_DirectWriteSet"}]},Qi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DirectWriteSet"}]},Yi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptWriteSet"}]},es={type:"one-of",description:"A final state change of a transaction on a resource or module",contains:[{type:"WriteSetChange_DeleteModule"},{type:"WriteSetChange_DeleteResource"},{type:"WriteSetChange_DeleteTableItem"},{type:"WriteSetChange_WriteModule"},{type:"WriteSetChange_WriteResource"},{type:"WriteSetChange_WriteTableItem"}]},ts={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteModule"}]},is={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteResource"}]},ss={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteTableItem"}]},rs={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteModule"}]},ns={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteResource"}]},as={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteTableItem"}]},os={description:"A writeset payload, used only for genesis",properties:{write_set:{type:"WriteSet",isRequired:!0}}},cs={description:"Change set to write a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},value:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DecodedTableData"}}};function us(e,t,i){if(!(null==t?void 0:t.includes(typeof e)))throw new Error(i||`Invalid arg: ${e} type should be ${t instanceof Array?t.join(" or "):t}`)}function ls(e){throw new Error(e)}function ds(e){return!!e.match(/\s/)}function ps(e){return!!e.match(/[_A-Za-z0-9]/g)}function hs(e,t){const i=e[t];if(":"===i){if("::"===e.slice(t,t+2))return[["COLON","::"],2];ls("Unrecognized token.")}else{if("<"===i)return[["LT","<"],1];if(">"===i)return[["GT",">"],1];if(","===i)return[["COMMA",","],1];if(ds(i)){let i="";for(let s=t;s<e.length;s+=1){const t=e[s];if(!ds(t))break;i=`${i}${t}`}return[["SPACE",i],i.length]}if(ps(i)){let i="";for(let s=t;s<e.length;s+=1){const t=e[s];if(!ps(t))break;i=`${i}${t}`}return[["IDENT",i],i.length]}}throw new Error("Unrecognized token.")}var ys=class{constructor(e){this.tokens=function(e){let t=0;const i=[];for(;t<e.length;){const[s,r]=hs(e,t);"SPACE"!==s[0]&&i.push(s),t+=r}return i}(e)}consume(e){const t=this.tokens.shift();t&&t[1]===e||ls("Invalid type tag.")}parseCommaList(e,t){const i=[];for(this.tokens.length<=0&&ls("Invalid type tag.");this.tokens[0][1]!==e&&(i.push(this.parseTypeTag()),!(this.tokens.length>0&&this.tokens[0][1]===e))&&(this.consume(","),!(this.tokens.length>0&&this.tokens[0][1]===e&&t));)this.tokens.length<=0&&ls("Invalid type tag.");return i}parseTypeTag(){0===this.tokens.length&&ls("Invalid type tag.");const[e,t]=this.tokens.shift();if("u8"===t)return new pe;if("u64"===t)return new he;if("u128"===t)return new ye;if("bool"===t)return new de;if("address"===t)return new ge;if("vector"===t){this.consume("<");const e=this.parseTypeTag();return this.consume(">"),new me(e)}if("IDENT"===e&&(t.startsWith("0x")||t.startsWith("0X"))){const e=t;this.consume("::");const[i,s]=this.tokens.shift();"IDENT"!==i&&ls("Invalid type tag."),this.consume("::");const[r,n]=this.tokens.shift();"IDENT"!==r&&ls("Invalid type tag.");let a=[];this.tokens.length>0&&"<"===this.tokens[0][1]&&(this.consume("<"),a=this.parseCommaList(">",!0),this.consume(">"));const o=new we(K.fromHex(e),new ue(s),new ue(n),a);return new _e(o)}throw new Error("Invalid type tag.")}};function gs(e){if(us(e,["boolean","string"]),"boolean"===typeof e)return e;if("true"===e)return!0;if("false"===e)return!1;throw new Error("Invalid boolean string.")}function fs(e){if(us(e,["number","string"]),"number"===typeof e)return e;const t=Number.parseInt(e,10);if(Number.isNaN(t))throw new Error("Invalid number string.");return t}function ms(e){return us(e,["number","bigint","string"]),BigInt(e)}function _s(e,t,i){if(t instanceof de)i.serializeBool(gs(e));else if(t instanceof pe)i.serializeU8(fs(e));else if(t instanceof he)i.serializeU64(ms(e));else if(t instanceof ye)i.serializeU128(ms(e));else{if(!(t instanceof ge)){if(t instanceof me){if(t.value instanceof pe){if(e instanceof Uint8Array)return void i.serializeBytes(e);if("string"===typeof e)return void i.serializeStr(e)}if(!(e instanceof Array))throw new Error("Invalid vector args.");return i.serializeU32AsUleb128(e.length),void e.forEach((e=>_s(e,t.value,i)))}if(t instanceof _e){const{address:s,module_name:r,name:n}=t.value;if("0x1::string::String"!==`${_.fromUint8Array(s.address).toShortString()}::${r.value}::${n.value}`)throw new Error("The only supported struct arg is of type 0x1::string::String");return us(e,["string"]),void i.serializeStr(e)}throw new Error("Unsupported arg type.")}{let t;if("string"===typeof e||e instanceof _)t=K.fromHex(e);else{if(!(e instanceof K))throw new Error("Invalid account address.");t=e}t.serialize(i)}}}var ws,vs,bs=class{constructor(e,t){this.rawTxnBuilder=t,this.signingFunction=e}build(e,t,i){if(!this.rawTxnBuilder)throw new Error("this.rawTxnBuilder doesn't exist.");return this.rawTxnBuilder.build(e,t,i)}static getSigningMessage(e){const t=c.DZ.create();if(e instanceof ve)t.update("APTOS::RawTransaction");else{if(!(e instanceof Ue))throw new Error("Unknown transaction type.");t.update("APTOS::RawTransactionWithData")}const i=t.digest(),s=N(e),r=new Uint8Array(i.length+s.length);return r.set(i),r.set(s,i.length),r}},Ts=class extends bs{constructor(e,t,i){super(e,i),this.publicKey=t}rawToSigned(e){const t=bs.getSigningMessage(e),i=this.signingFunction(t),s=new se(new Z(this.publicKey),i);return new ze(e,s)}sign(e){return N(this.rawToSigned(e))}},As=class extends bs{constructor(e,t){super(e),this.publicKey=t}rawToSigned(e){const t=bs.getSigningMessage(e),i=this.signingFunction(t),s=new re(this.publicKey,i);return new ze(e,s)}sign(e){return N(this.rawToSigned(e))}},Ss=class{constructor(e,t){this.abiMap=new Map,e.forEach((e=>{const t=new M(e),i=Ve.deserialize(t);let s;if(i instanceof je){const e=i,{address:t,name:r}=e.module_name;s=`${_.fromUint8Array(t.address).toShortString()}::${r.value}::${e.name}`}else{s=i.name}if(this.abiMap.has(s))throw new Error("Found conflicting ABI interfaces");this.abiMap.set(s,i)})),this.builderConfig={maxGasAmount:BigInt(v),expSecFromNow:20,...t}}static toBCSArgs(e,t){if(e.length!==t.length)throw new Error("Wrong number of args provided.");return t.map(((t,i)=>{const s=new x;return _s(t,e[i].type_tag,s),s.getBytes()}))}static toTransactionArguments(e,t){if(e.length!==t.length)throw new Error("Wrong number of args provided.");return t.map(((t,i)=>function(e,t){if(t instanceof de)return new De(gs(e));if(t instanceof pe)return new Ce(fs(e));if(t instanceof he)return new $e(ms(e));if(t instanceof ye)return new Ne(ms(e));if(t instanceof ge){let t;if("string"===typeof e||e instanceof _)t=K.fromHex(e);else{if(!(e instanceof K))throw new Error("Invalid account address.");t=e}return new Pe(t)}if(t instanceof me&&t.value instanceof pe){if(!(e instanceof Uint8Array))throw new Error(`${e} should be an instance of Uint8Array`);return new He(e)}throw new Error("Unknown type for TransactionArgument.")}(t,e[i].type_tag)))}setSequenceNumber(e){this.builderConfig.sequenceNumber=BigInt(e)}buildTransactionPayload(e,t,i){const s=t.map((e=>new ys(e).parseTypeTag()));let r;if(!this.abiMap.has(e))throw new Error(`Cannot find function: ${e}`);const n=this.abiMap.get(e);if(n instanceof je){const e=n,t=Ss.toBCSArgs(e.args,i);r=new Ie(new Te(e.module_name,new ue(e.name),s,t))}else{if(!(n instanceof Fe))throw new Error("Unknown ABI format.");{const e=n,t=Ss.toTransactionArguments(e.args,i);r=new xe(new be(e.code,s,t))}}return r}build(e,t,i){const{sender:s,sequenceNumber:r,gasUnitPrice:n,maxGasAmount:a,expSecFromNow:o,chainId:c}=this.builderConfig;if(!n)throw new Error("No gasUnitPrice provided.");const u=s instanceof K?s:K.fromHex(s),l=BigInt(Math.floor(Date.now()/1e3)+Number(o)),d=this.buildTransactionPayload(e,t,i);if(d)return new ve(u,BigInt(r),d,BigInt(a),BigInt(n),l,new Me(Number(c)));throw new Error("Invalid ABI.")}},Rs=class{constructor(e,t){this.aptosClient=e,this.builderConfig=t}async fetchABI(e){const t=(await this.aptosClient.getAccountModules(e)).map((e=>e.abi)).flatMap((e=>e.exposed_functions.filter((e=>e.is_entry)).map((t=>({fullName:`${e.address}::${e.name}::${t.name}`,...t}))))),i=new Map;return t.forEach((e=>{i.set(e.fullName,e)})),i}async build(e,t,i){if(3!==(e=e.replace(/^0[xX]0*/g,"0x")).split("::").length)throw new Error("'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer");const[s,r]=e.split("::"),n=await this.fetchABI(s);if(!n.has(e))throw new Error(`${e} doesn't exist.`);const a=n.get(e),o=a.params.filter((e=>"signer"!==e&&"&signer"!==e)).map(((e,t)=>new Le(`var${t}`,new ys(e).parseTypeTag()))),c=new je(a.name,Se.fromStr(`${s}::${r}`),"",a.generic_type_params.map(((e,t)=>new Ge(`${t}`))),o),{sender:u,...l}=this.builderConfig,d=u instanceof K?_.fromUint8Array(u.address):u,[{sequence_number:p},h,{gas_estimate:y}]=await Promise.all([(null==l?void 0:l.sequenceNumber)?Promise.resolve({sequence_number:null==l?void 0:l.sequenceNumber}):this.aptosClient.getAccount(d),(null==l?void 0:l.chainId)?Promise.resolve(null==l?void 0:l.chainId):this.aptosClient.getChainId(),(null==l?void 0:l.gasUnitPrice)?Promise.resolve({gas_estimate:null==l?void 0:l.gasUnitPrice}):this.aptosClient.estimateGasPrice()]);return new Ss([N(c)],{sender:u,sequenceNumber:p,chainId:h,gasUnitPrice:BigInt(y),...l}).build(e,t,i)}};y([(ws=6e5,T({ttlMs:ws,hashFunction:vs}))],Rs.prototype,"fetchABI",1);var Es=class{constructor(e,t,i=!1){if(!e)throw new Error("Node URL cannot be empty.");const s=void 0===t||null===t?{}:{...t};this.nodeUrl=i?e:function(e){let t=`${e}`;return t.endsWith("/")&&(t=t.substring(0,t.length-1)),t.endsWith("/v1")||(t=`${t}/v1`),t}(e),s.BASE=this.nodeUrl,!1===(null==t?void 0:t.WITH_CREDENTIALS)?s.WITH_CREDENTIALS=!1:s.WITH_CREDENTIALS=!0,this.client=new vt(s)}async getAccount(e){return this.client.accounts.getAccount(_.ensure(e).hex())}async getAccountTransactions(e,t){var i;return this.client.transactions.getAccountTransactions(_.ensure(e).hex(),null==(i=null==t?void 0:t.start)?void 0:i.toString(),null==t?void 0:t.limit)}async getAccountModules(e,t){const i=this.client.accounts.getAccountModules.bind({httpRequest:this.client.request});return await R(i,e,100,t)}async getAccountModule(e,t,i){var s;return this.client.accounts.getAccountModule(_.ensure(e).hex(),t,null==(s=null==i?void 0:i.ledgerVersion)?void 0:s.toString())}async getAccountResources(e,t){const i=this.client.accounts.getAccountResources.bind({httpRequest:this.client.request});return await R(i,e,1e3,t)}async getAccountResource(e,t,i){var s;return this.client.accounts.getAccountResource(_.ensure(e).hex(),t,null==(s=null==i?void 0:i.ledgerVersion)?void 0:s.toString())}static generateBCSTransaction(e,t){return new Ts((t=>{const i=e.signBuffer(t);return new E.Ed25519Signature(i.toUint8Array())}),e.pubKey().toUint8Array()).sign(t)}static generateBCSSimulation(e,t){return new Ts((e=>{const t=new Uint8Array(64);return new E.Ed25519Signature(t)}),e.pubKey().toUint8Array()).sign(t)}async generateTransaction(e,t,i){const s={sender:e};if((null==i?void 0:i.sequence_number)&&(s.sequenceNumber=i.sequence_number),(null==i?void 0:i.gas_unit_price)&&(s.gasUnitPrice=i.gas_unit_price),(null==i?void 0:i.max_gas_amount)&&(s.maxGasAmount=i.max_gas_amount),null==i?void 0:i.expiration_timestamp_secs){const e=Number.parseInt(i.expiration_timestamp_secs,10);s.expSecFromNow=e-Math.floor(Date.now()/1e3)}return new Rs(this,s).build(t.function,t.type_arguments,t.arguments)}async signTransaction(e,t){return Promise.resolve(Es.generateBCSTransaction(e,t))}async getEventsByCreationNumber(e,t,i){var s;return this.client.events.getEventsByCreationNumber(_.ensure(e).hex(),t.toString(),null==(s=null==i?void 0:i.start)?void 0:s.toString(),null==i?void 0:i.limit)}async getEventsByEventHandle(e,t,i,s){var r;return this.client.events.getEventsByEventHandle(_.ensure(e).hex(),t,i,null==(r=null==s?void 0:s.start)?void 0:r.toString(),null==s?void 0:s.limit)}async submitTransaction(e){return this.submitSignedBCSTransaction(e)}async simulateTransaction(e,t,i){let s;if(e instanceof Qe)s=Es.generateBCSSimulation(e,t);else if(e instanceof Y){s=new As((()=>{const{threshold:t}=e,i=[],s=[];for(let e=0;e<t;e+=1)i.push(e),s.push(new E.Ed25519Signature(new Uint8Array(64)));const r=E.MultiEd25519Signature.createBitmap(i);return new E.MultiEd25519Signature(s,r)}),e).sign(t)}else{s=new Ts((()=>{const e=new Uint8Array(64);return new E.Ed25519Signature(e)}),e.toBytes()).sign(t)}return this.submitBCSSimulation(s,i)}async submitSignedBCSTransaction(e){return this.client.request.request({url:"/transactions",method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async submitBCSSimulation(e,t){var i,s,r;const n={estimate_gas_unit_price:null!=(i=null==t?void 0:t.estimateGasUnitPrice)&&i,estimate_max_gas_amount:null!=(s=null==t?void 0:t.estimateMaxGasAmount)&&s,estimate_prioritized_gas_unit_price:null!=(r=null==t?void 0:t.estimatePrioritizedGasUnitPrice)&&r};return this.client.request.request({url:"/transactions/simulate",query:n,method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async getTransactions(e){var t;return this.client.transactions.getTransactions(null==(t=null==e?void 0:e.start)?void 0:t.toString(),null==e?void 0:e.limit)}async getTransactionByHash(e){return this.client.transactions.getTransactionByHash(e)}async getTransactionByVersion(e){return this.client.transactions.getTransactionByVersion(e.toString())}async transactionPending(e){try{return"pending_transaction"===(await this.client.transactions.getTransactionByHash(e)).type}catch(t){if(404===(null==t?void 0:t.status))return!0;throw t}}async waitForTransactionWithResult(e,t){var i,s;const r=null!=(i=null==t?void 0:t.timeoutSecs)?i:20,n=null!=(s=null==t?void 0:t.checkSuccess)&&s;let a,o=!0,c=0;for(;o&&!(c>=r);){try{if(a=await this.client.transactions.getTransactionByHash(e),o="pending_transaction"===a.type,!o)break}catch(u){const e=u instanceof et,t=e&&404!==u.status&&u.status>=400&&u.status<500;if(!e||t)throw u}await w(1e3),c+=1}if(void 0===a)throw new Error(`Waiting for transaction ${e} failed`);if(o)throw new Us(`Waiting for transaction ${e} timed out after ${r} seconds`,a);if(!n)return a;if(!(null==a?void 0:a.success))throw new Bs(`Transaction ${e} committed to the blockchain but execution failed`,a);return a}async waitForTransaction(e,t){await this.waitForTransactionWithResult(e,t)}async getLedgerInfo(){return this.client.general.getLedgerInfo()}async getChainId(){return(await this.getLedgerInfo()).chain_id}async getTableItem(e,t,i){var s;return await this.client.tables.getTableItem(e,t,null==(s=null==i?void 0:i.ledgerVersion)?void 0:s.toString())}async generateRawTransaction(e,t,i){const[{sequence_number:s},r,{gas_estimate:n}]=await Promise.all([this.getAccount(e),this.getChainId(),(null==i?void 0:i.gasUnitPrice)?Promise.resolve({gas_estimate:i.gasUnitPrice}):this.estimateGasPrice()]),{maxGasAmount:a,gasUnitPrice:o,expireTimestamp:c}={maxGasAmount:BigInt(v),gasUnitPrice:BigInt(n),expireTimestamp:BigInt(Math.floor(Date.now()/1e3)+20),...i};return new E.RawTransaction(E.AccountAddress.fromHex(e),BigInt(s),t,a,o,c,new E.ChainId(r))}async generateSignSubmitTransaction(e,t,i){const s=await this.generateRawTransaction(e.address(),t,i),r=Es.generateBCSTransaction(e,s);return(await this.submitSignedBCSTransaction(r)).hash}async publishPackage(e,t,i,s){const r=new x;k(i,r);const n=new E.TransactionPayloadEntryFunction(E.EntryFunction.natural("0x1::code","publish_package_txn",[],[V(t),r.getBytes()]));return this.generateSignSubmitTransaction(e,n,s)}async generateSignSubmitWaitForTransaction(e,t,i){const s=await this.generateSignSubmitTransaction(e,t,i);return this.waitForTransactionWithResult(s,i)}async estimateGasPrice(){return this.client.transactions.estimateGasPrice()}async estimateMaxGasAmount(e){const t=`0x1::coin::CoinStore<${b}>`,[{gas_estimate:i},s]=await Promise.all([this.estimateGasPrice(),this.getAccountResources(e)]),r=s.find((e=>e.type===t));return BigInt(r.data.coin.value)/BigInt(i)}async rotateAuthKeyEd25519(e,t,i){const{sequence_number:s,authentication_key:r}=await this.getAccount(e.address()),n=new Qe(t),a=new E.RotationProofChallenge(E.AccountAddress.CORE_CODE_ADDRESS,"account","RotationProofChallenge",BigInt(s),E.AccountAddress.fromHex(e.address()),new E.AccountAddress(new _(r).toUint8Array()),n.pubKey().toUint8Array()),o=_.fromUint8Array(N(a)),c=e.signHexString(o),u=n.signHexString(o),l=new E.TransactionPayloadEntryFunction(E.EntryFunction.natural("0x1::account","rotate_authentication_key",[],[H(0),V(e.pubKey().toUint8Array()),H(0),V(n.pubKey().toUint8Array()),V(c.toUint8Array()),V(u.toUint8Array())])),d=await this.generateRawTransaction(e.address(),l,i),p=Es.generateBCSTransaction(e,d);return this.submitSignedBCSTransaction(p)}async lookupOriginalAddress(e){const t=await this.getAccountResource("0x1","0x1::account::OriginatingAddress"),{address_map:{handle:i}}=t.data,s=await this.getTableItem(i,{key_type:"address",value_type:"address",key:_.ensure(e).hex()});return new _(s)}async getBlockByHeight(e,t){return this.client.blocks.getBlockByHeight(e,t)}async getBlockByVersion(e,t){return this.client.blocks.getBlockByVersion(e,t)}clearCache(e){!function(e){const t=new Set;for(const i of e){const e=A.get(i);if(e)for(const i of e)t.has(i)||(i.clear(),t.add(i))}t.size}(e)}},zs=Es;y([xs],zs.prototype,"getAccount",1),y([xs],zs.prototype,"getAccountTransactions",1),y([xs],zs.prototype,"getAccountModules",1),y([xs],zs.prototype,"getAccountModule",1),y([xs],zs.prototype,"getAccountResources",1),y([xs],zs.prototype,"getAccountResource",1),y([xs],zs.prototype,"getEventsByCreationNumber",1),y([xs],zs.prototype,"getEventsByEventHandle",1),y([xs],zs.prototype,"submitSignedBCSTransaction",1),y([xs],zs.prototype,"submitBCSSimulation",1),y([xs],zs.prototype,"getTransactions",1),y([xs],zs.prototype,"getTransactionByHash",1),y([xs],zs.prototype,"getTransactionByVersion",1),y([xs],zs.prototype,"getLedgerInfo",1),y([T()],zs.prototype,"getChainId",1),y([xs],zs.prototype,"getTableItem",1),y([xs,T({ttlMs:3e5,tags:["gas_estimates"]})],zs.prototype,"estimateGasPrice",1),y([xs],zs.prototype,"estimateMaxGasAmount",1),y([xs],zs.prototype,"getBlockByHeight",1),y([xs],zs.prototype,"getBlockByVersion",1);var qs=class extends Error{constructor(e,t,i,s){super(t),this.status=e,this.message=t,this.errorCode=i,this.vmErrorCode=s}},Us=class extends Error{constructor(e,t){super(e),this.lastSubmittedTransaction=t}},Bs=class extends Error{constructor(e,t){super(e),this.transaction=t}};function xs(e,t,i){const s=i.value;return i.value=async function(...e){var t,i;try{return await s.apply(this,[...e])}catch(r){if(r instanceof et)throw new qs(r.status,JSON.stringify({message:r.message,...r.body}),null==(t=r.body)?void 0:t.error_code,null==(i=r.body)?void 0:i.vm_error_code);throw r}},i}}}]);
//# sourceMappingURL=ec5020c3.d0c5f1b4f6844cf1.js.map