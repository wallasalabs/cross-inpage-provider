{"version":3,"file":"static/chunks/3382.06b21c37e0e80888.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@solana/buffer-layout/lib/Layout.js","webpack://_N_E/./node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","webpack://_N_E/./node_modules/@solana/web3.js/node_modules/borsh/lib/index.js","webpack://_N_E/./node_modules/@solana/web3.js/node_modules/bs58/index.js","webpack://_N_E/./node_modules/@solana/web3.js/node_modules/buffer/index.js","webpack://_N_E/./node_modules/bigint-buffer/dist/browser.js","webpack://_N_E/./node_modules/bs58/index.js","webpack://_N_E/./node_modules/bs58/node_modules/base-x/src/index.js","webpack://_N_E/./node_modules/@noble/hashes/esm/sha3.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-solana-provider/dist/ProviderSolanaBase.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-solana-provider/dist/utils.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-solana-provider/dist/ProviderSolana.js","webpack://_N_E/./node_modules/superstruct/lib/index.es.js"],"sourcesContent":["/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import { IInjectedProviderNames } from '@onekeyfe/cross-inpage-provider-types';\nimport { ProviderBase } from '@onekeyfe/cross-inpage-provider-core';\nclass ProviderSolanaBase extends ProviderBase {\n    constructor(props) {\n        super(props);\n        this.providerName = IInjectedProviderNames.solana;\n    }\n    request(data) {\n        return this.bridgeRequest(data);\n    }\n}\nexport { ProviderSolanaBase };\n","import { Transaction } from '@solana/web3.js';\nimport base58 from 'bs58';\nexport const encodeTransaction = (transaction) => {\n    return base58.encode(transaction.serialize({ requireAllSignatures: false }));\n};\nexport const decodeSignedTransaction = (message) => {\n    return Transaction.from(base58.decode(message));\n};\nexport function isWalletEventMethodMatch(method, name) {\n    return method === `metamask_${name}` || method === `wallet_events_${name}`;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PublicKey } from '@solana/web3.js';\nimport { getOrCreateExtInjectedJsBridge } from '@onekeyfe/extension-bridge-injected';\nimport base58 from 'bs58';\nimport { ProviderSolanaBase } from './ProviderSolanaBase';\nimport { decodeSignedTransaction, encodeTransaction, isWalletEventMethodMatch } from './utils';\nconst PROVIDER_EVENTS = {\n    'connect': 'connect',\n    'disconnect': 'disconnect',\n    'accountChanged': 'accountChanged',\n    'message_low_level': 'message_low_level',\n};\nclass ProviderSolana extends ProviderSolanaBase {\n    constructor(props) {\n        super(Object.assign(Object.assign({}, props), { bridge: props.bridge || getOrCreateExtInjectedJsBridge({ timeout: props.timeout }) }));\n        this.isPhantom = true;\n        this.isSolflare = true;\n        this.isGlow = true;\n        this._publicKey = null;\n        this._registerEvents();\n    }\n    get publicKey() {\n        return this._publicKey;\n    }\n    get isConnected() {\n        return this._publicKey !== null;\n    }\n    _registerEvents() {\n        window.addEventListener('onekey_bridge_disconnect', () => {\n            this._handleDisconnected();\n        });\n        this.on(PROVIDER_EVENTS.message_low_level, (payload) => {\n            const { method, params } = payload;\n            if (isWalletEventMethodMatch(method, PROVIDER_EVENTS.accountChanged)) {\n                this._handleAccountChange(params);\n            }\n        });\n    }\n    _callBridge(params) {\n        return this.bridgeRequest(params);\n    }\n    postMessage(param) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return this._callBridge(param);\n    }\n    connect(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.publicKey) {\n                return { publicKey: this.publicKey };\n            }\n            // TODO: pass options to connect\n            const result = yield this._callBridge({\n                method: 'connect',\n                params: options,\n            });\n            const publicKey = new PublicKey(result.publicKey);\n            this._handleConnected(publicKey, { emit: true });\n            return { publicKey };\n        });\n    }\n    _handleConnected(publicKey, options = { emit: true }) {\n        this._publicKey = publicKey;\n        if (options.emit && this.isConnectionStatusChanged('connected')) {\n            this.connectionStatus = 'connected';\n            this.emit('connect', publicKey);\n            this.emit('accountChanged', publicKey);\n        }\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._callBridge({\n                method: 'disconnect',\n                params: void 0,\n            });\n            this._handleDisconnected();\n        });\n    }\n    _handleDisconnected(options = { emit: true }) {\n        this._publicKey = null;\n        if (options.emit && this.isConnectionStatusChanged('disconnected')) {\n            this.connectionStatus = 'disconnected';\n            this.emit('disconnect');\n            this.emit('accountChanged', null);\n        }\n    }\n    isAccountsChanged(account) {\n        var _a;\n        return (account === null || account === void 0 ? void 0 : account.publicKey) !== ((_a = this._publicKey) === null || _a === void 0 ? void 0 : _a.toBase58());\n    }\n    // trigger by bridge account change event\n    _handleAccountChange(payload) {\n        const account = payload.accounts[0];\n        let publicKey;\n        try {\n            publicKey = new PublicKey(account.publicKey);\n        }\n        catch (error) {\n            // noop\n        }\n        if (this.isAccountsChanged(account)) {\n            this.emit('accountChanged', publicKey || null);\n        }\n        if (!account) {\n            this._handleDisconnected();\n            return;\n        }\n        if (publicKey) {\n            this._handleConnected(publicKey, { emit: false });\n        }\n    }\n    signAndSendTransaction(transaction, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._handleSignAndSendTransaction({\n                message: encodeTransaction(transaction),\n                options,\n            });\n        });\n    }\n    _handleSignAndSendTransaction(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._callBridge({\n                method: 'signAndSendTransaction',\n                params,\n            });\n            return result;\n        });\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._handleSignTransaction({\n                message: encodeTransaction(transaction),\n            });\n        });\n    }\n    _handleSignTransaction(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._callBridge({\n                method: 'signTransaction',\n                params,\n            });\n            return decodeSignedTransaction(result);\n        });\n    }\n    signAllTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._handleSignAllTransactions({\n                message: transactions.map(encodeTransaction),\n            });\n        });\n    }\n    _handleSignAllTransactions(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._callBridge({\n                method: 'signAllTransactions',\n                params,\n            });\n            return result.map(decodeSignedTransaction);\n        });\n    }\n    signMessage(message, display) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._handleSignMessage({ message, display });\n        });\n    }\n    _handleSignMessage(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { message, display } = params;\n            const result = yield this._callBridge({\n                method: 'signMessage',\n                params: {\n                    message: typeof message === 'string' ? message : base58.encode(message),\n                    display,\n                },\n            });\n            return {\n                signature: base58.decode(result.signature),\n                publicKey: new PublicKey(result.publicKey),\n            };\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    request(...args) {\n        let method;\n        let params;\n        if (typeof args[0] === 'string') {\n            method = args[0];\n            params = args[1];\n        }\n        else {\n            const payload = args[0];\n            method = payload.method;\n            params = payload.params;\n        }\n        switch (method) {\n            case 'connect':\n                return this.connect(params);\n            case 'disconnect':\n                return this.disconnect();\n            case 'signTransaction':\n                return this._handleSignTransaction(params);\n            case 'signAllTransactions':\n                return this._handleSignAllTransactions(params);\n            case 'signMessage':\n                return this._handleSignMessage(params);\n            case 'signAndSendTransaction':\n                return this._handleSignAndSendTransaction(params);\n        }\n        return this._callBridge({ method, params });\n    }\n    on(event, listener) {\n        return super.on(event, listener);\n    }\n    emit(event, ...args) {\n        return super.emit(event, ...args);\n    }\n}\nexport { ProviderSolana };\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n  constructor(failure, failures) {\n    let cached;\n    const {\n      message,\n      ...rest\n    } = failure;\n    const {\n      path\n    } = failure;\n    const msg = path.length === 0 ? message : \"At path: \" + path.join('.') + \" -- \" + message;\n    super(msg);\n    Object.assign(this, rest);\n    this.name = this.constructor.name;\n\n    this.failures = () => {\n      var _cached;\n\n      return (_cached = cached) != null ? _cached : cached = [failure, ...failures()];\n    };\n  }\n\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\n\n\nfunction isObject(x) {\n  return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\n\nfunction isPlainObject(x) {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(x);\n  return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\n\nfunction print(value) {\n  return typeof value === 'string' ? JSON.stringify(value) : \"\" + value;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nfunction shiftIterator(input) {\n  const {\n    done,\n    value\n  } = input.next();\n  return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\n\nfunction toFailure(result, context, struct, value) {\n  if (result === true) {\n    return;\n  } else if (result === false) {\n    result = {};\n  } else if (typeof result === 'string') {\n    result = {\n      message: result\n    };\n  }\n\n  const {\n    path,\n    branch\n  } = context;\n  const {\n    type\n  } = struct;\n  const {\n    refinement,\n    message = \"Expected a value of type `\" + type + \"`\" + (refinement ? \" with refinement `\" + refinement + \"`\" : '') + \", but received: `\" + print(value) + \"`\"\n  } = result;\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message\n  };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nfunction* toFailures(result, context, struct, value) {\n  if (!isIterable(result)) {\n    result = [result];\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value);\n\n    if (failure) {\n      yield failure;\n    }\n  }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nfunction* run(value, struct, options = {}) {\n  const {\n    path = [],\n    branch = [value],\n    coerce = false,\n    mask = false\n  } = options;\n  const ctx = {\n    path,\n    branch\n  };\n\n  if (coerce) {\n    value = struct.coercer(value, ctx);\n\n    if (mask && struct.type !== 'type' && isObject(struct.schema) && isObject(value) && !Array.isArray(value)) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key];\n        }\n      }\n    }\n  }\n\n  let valid = true;\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false;\n    yield [failure, undefined];\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask\n    });\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false;\n        yield [t[0], undefined];\n      } else if (coerce) {\n        v = t[1];\n\n        if (k === undefined) {\n          value = v;\n        } else if (value instanceof Map) {\n          value.set(k, v);\n        } else if (value instanceof Set) {\n          value.add(v);\n        } else if (isObject(value)) {\n          value[k] = v;\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value, ctx)) {\n      valid = false;\n      yield [failure, undefined];\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value];\n  }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nclass Struct {\n  constructor(props) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = value => value,\n      entries = function* () {}\n    } = props;\n    this.type = type;\n    this.schema = schema;\n    this.entries = entries;\n    this.coercer = coercer;\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.validator = () => [];\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context);\n        return toFailures(result, context, this, value);\n      };\n    } else {\n      this.refiner = () => [];\n    }\n  }\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n\n  assert(value) {\n    return assert(value, this);\n  }\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n\n  create(value) {\n    return create(value, this);\n  }\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n\n  is(value) {\n    return is(value, this);\n  }\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n\n  mask(value) {\n    return mask(value, this);\n  }\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n\n  validate(value, options = {}) {\n    return validate(value, this, options);\n  }\n\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nfunction assert(value, struct) {\n  const result = validate(value, struct);\n\n  if (result[0]) {\n    throw result[0];\n  }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nfunction create(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nfunction mask(value, struct) {\n  const result = validate(value, struct, {\n    coerce: true,\n    mask: true\n  });\n\n  if (result[0]) {\n    throw result[0];\n  } else {\n    return result[1];\n  }\n}\n/**\n * Check if a value passes a struct.\n */\n\nfunction is(value, struct) {\n  const result = validate(value, struct);\n  return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nfunction validate(value, struct, options = {}) {\n  const tuples = run(value, struct, options);\n  const tuple = shiftIterator(tuples);\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0];\n        }\n      }\n    });\n    return [error, undefined];\n  } else {\n    const v = tuple[1];\n    return [undefined, v];\n  }\n}\n\nfunction assign(...Structs) {\n  const schemas = Structs.map(s => s.schema);\n  const schema = Object.assign({}, ...schemas);\n  return object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\n\nfunction define(name, validator) {\n  return new Struct({\n    type: name,\n    schema: null,\n    validator\n  });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nfunction deprecated(struct, log) {\n  return new Struct({ ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true;\n      } else {\n        log(value, ctx);\n        return struct.validator(value, ctx);\n      }\n    }\n\n  });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nfunction dynamic(fn) {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n\n    *entries(value, ctx) {\n      const struct = fn(value, ctx);\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      const struct = fn(value, ctx);\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nfunction lazy(fn) {\n  let struct;\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n\n    *entries(value, ctx) {\n      var _struct;\n\n      (_struct = struct) != null ? _struct : struct = fn();\n      yield* struct.entries(value, ctx);\n    },\n\n    validator(value, ctx) {\n      var _struct2;\n\n      (_struct2 = struct) != null ? _struct2 : struct = fn();\n      return struct.validator(value, ctx);\n    },\n\n    coercer(value, ctx) {\n      var _struct3;\n\n      (_struct3 = struct) != null ? _struct3 : struct = fn();\n      return struct.coercer(value, ctx);\n    }\n\n  });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nfunction omit(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = { ...schema\n  };\n\n  for (const key of keys) {\n    delete subschema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nfunction partial(struct) {\n  const schema = struct instanceof Struct ? { ...struct.schema\n  } : { ...struct\n  };\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key]);\n  }\n\n  return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nfunction pick(struct, keys) {\n  const {\n    schema\n  } = struct;\n  const subschema = {};\n\n  for (const key of keys) {\n    subschema[key] = schema[key];\n  }\n\n  return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nfunction struct(name, validator) {\n  console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n  return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\n\nfunction any() {\n  return define('any', () => true);\n}\nfunction array(Element) {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value;\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array value, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a boolean.\n */\n\nfunction boolean() {\n  return define('boolean', value => {\n    return typeof value === 'boolean';\n  });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nfunction date() {\n  return define('date', value => {\n    return value instanceof Date && !isNaN(value.getTime()) || \"Expected a valid `Date` object, but received: \" + print(value);\n  });\n}\nfunction enums(values) {\n  const schema = {};\n  const description = values.map(v => print(v)).join();\n\n  for (const key of values) {\n    schema[key] = key;\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n\n    validator(value) {\n      return values.includes(value) || \"Expected one of `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a function.\n */\n\nfunction func() {\n  return define('func', value => {\n    return typeof value === 'function' || \"Expected a function, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nfunction instance(Class) {\n  return define('instance', value => {\n    return value instanceof Class || \"Expected a `\" + Class.name + \"` instance, but received: \" + print(value);\n  });\n}\n/**\n * Ensure that a value is an integer.\n */\n\nfunction integer() {\n  return define('integer', value => {\n    return typeof value === 'number' && !isNaN(value) && Number.isInteger(value) || \"Expected an integer, but received: \" + print(value);\n  });\n}\nfunction intersection(Structs) {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx);\n      }\n    },\n\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx);\n      }\n    },\n\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx);\n      }\n    }\n\n  });\n}\nfunction literal(constant) {\n  const description = print(constant);\n  const t = typeof constant;\n  return new Struct({\n    type: 'literal',\n    schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n\n    validator(value) {\n      return value === constant || \"Expected the literal `\" + description + \"`, but received: \" + print(value);\n    }\n\n  });\n}\nfunction map(Key, Value) {\n  return new Struct({\n    type: 'map',\n    schema: null,\n\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Map || \"Expected a `Map` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that no value ever passes validation.\n */\n\nfunction never() {\n  return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nfunction nullable(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is a number.\n */\n\nfunction number() {\n  return define('number', value => {\n    return typeof value === 'number' && !isNaN(value) || \"Expected a number, but received: \" + print(value);\n  });\n}\nfunction object(schema) {\n  const knowns = schema ? Object.keys(schema) : [];\n  const Never = never();\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value));\n\n        for (const key of knowns) {\n          unknowns.delete(key);\n          yield [key, value[key], schema[key]];\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    },\n\n    coercer(value) {\n      return isObject(value) ? { ...value\n      } : value;\n    }\n\n  });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nfunction optional(struct) {\n  return new Struct({ ...struct,\n    validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx)\n  });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nfunction record(Key, Value) {\n  return new Struct({\n    type: 'record',\n    schema: null,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k];\n          yield [k, k, Key];\n          yield [k, v, Value];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nfunction regexp() {\n  return define('regexp', value => {\n    return value instanceof RegExp;\n  });\n}\nfunction set(Element) {\n  return new Struct({\n    type: 'set',\n    schema: null,\n\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v, v, Element];\n        }\n      }\n    },\n\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value;\n    },\n\n    validator(value) {\n      return value instanceof Set || \"Expected a `Set` object, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value is a string.\n */\n\nfunction string() {\n  return define('string', value => {\n    return typeof value === 'string' || \"Expected a string, but received: \" + print(value);\n  });\n}\nfunction tuple(Elements) {\n  const Never = never();\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length);\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never];\n        }\n      }\n    },\n\n    validator(value) {\n      return Array.isArray(value) || \"Expected an array, but received: \" + print(value);\n    }\n\n  });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nfunction type(schema) {\n  const keys = Object.keys(schema);\n  return new Struct({\n    type: 'type',\n    schema,\n\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]];\n        }\n      }\n    },\n\n    validator(value) {\n      return isObject(value) || \"Expected an object, but received: \" + print(value);\n    }\n\n  });\n}\nfunction union(Structs) {\n  const description = Structs.map(s => s.type).join(' | ');\n  return new Struct({\n    type: 'union',\n    schema: null,\n\n    validator(value, ctx) {\n      const failures = [];\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx);\n        const [first] = tuples;\n\n        if (!first[0]) {\n          return [];\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure);\n            }\n          }\n        }\n      }\n\n      return [\"Expected the value to satisfy a union of `\" + description + \"`, but received: \" + print(value), ...failures];\n    }\n\n  });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nfunction unknown() {\n  return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction coerce(struct, condition, coercer) {\n  return new Struct({ ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition) ? struct.coercer(coercer(value, ctx), ctx) : struct.coercer(value, ctx);\n    }\n  });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction defaulted(struct, fallback, options = {}) {\n  return coerce(struct, unknown(), x => {\n    const f = typeof fallback === 'function' ? fallback() : fallback;\n\n    if (x === undefined) {\n      return f;\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x\n      };\n      let changed = false;\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key];\n          changed = true;\n        }\n      }\n\n      if (changed) {\n        return ret;\n      }\n    }\n\n    return x;\n  });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nfunction trimmed(struct) {\n  return coerce(struct, string(), x => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nfunction empty(struct) {\n  const expected = \"Expected an empty \" + struct.type;\n  return refine(struct, 'empty', value => {\n    if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return size === 0 || expected + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return length === 0 || expected + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nfunction max(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'max', value => {\n    return exclusive ? value < threshold : value <= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nfunction min(struct, threshold, options = {}) {\n  const {\n    exclusive\n  } = options;\n  return refine(struct, 'min', value => {\n    return exclusive ? value > threshold : value >= threshold || \"Expected a \" + struct.type + \" greater than \" + (exclusive ? '' : 'or equal to ') + threshold + \" but received `\" + value + \"`\";\n  });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\n\nfunction pattern(struct, regexp) {\n  return refine(struct, 'pattern', value => {\n    return regexp.test(value) || \"Expected a \" + struct.type + \" matching `/\" + regexp.source + \"/` but received \\\"\" + value + \"\\\"\";\n  });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nfunction size(struct, min, max = min) {\n  const expected = \"Expected a \" + struct.type;\n  const of = min === max ? \"of `\" + min + \"`\" : \"between `\" + min + \"` and `\" + max + \"`\";\n  return refine(struct, 'size', value => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return min <= value && value <= max || expected + \" \" + of + \" but received `\" + value + \"`\";\n    } else if (value instanceof Map || value instanceof Set) {\n      const {\n        size\n      } = value;\n      return min <= size && size <= max || expected + \" with a size \" + of + \" but received one with a size of `\" + size + \"`\";\n    } else {\n      const {\n        length\n      } = value;\n      return min <= length && length <= max || expected + \" with a length \" + of + \" but received one with a length of `\" + length + \"`\";\n    }\n  });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nfunction refine(struct, name, refiner) {\n  return new Struct({ ...struct,\n\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx);\n      const result = refiner(value, ctx);\n      const failures = toFailures(result, ctx, struct, value);\n\n      for (const failure of failures) {\n        yield { ...failure,\n          refinement: name\n        };\n      }\n    }\n\n  });\n}\n\nexport { Struct, StructError, any, array, assert, assign, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.es.js.map\n"],"names":["exports","u8","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","this","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","ExternalLayout","isCount","Error","GreedyCount","elementSpan","super","decode","rem","Math","floor","encode","src","OffsetLayout","layout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","module","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","end","mul","len","min","move","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","imuln","_iaddn","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","__createBinding","k2","defineProperty","enumerable","get","__setModuleDefault","__decorate","decorators","target","key","desc","d","arguments","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","result","__importDefault","deserializeUnchecked","deserialize","serialize","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","encoding","textDecoder","TextDecoder","fatal","default","INITIAL_LENGTH","message","fieldPath","originalMessage","addToFieldPath","fieldName","splice","join","buf","alloc","maybeResize","concat","writeU8","writeUInt8","writeU16","writeUInt16LE","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","subarray","writeString","writeFixedArray","array","writeArray","fn","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","apply","code","indexOf","readU8","readUInt8","readU16","readUInt16LE","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","charAt","toUpperCase","serializeField","schema","fieldType","writer","item","kind","type","forEach","serializeStruct","error","obj","borshSerialize","structSchema","map","field","deserializeField","reader","arr","Map","set","deserializeStruct","classType","borshDeserialize","Writer","Reader","basex","base64","ieee754","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","setPrototypeOf","arg","encodingOrOffset","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","data","fromObject","toPrimitive","assertSize","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","toLocaleString","equals","trim","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUintBE","readUint8","readUint16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUint16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","errors","E","sym","getMessage","Base","writable","configurable","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","BufferBigIntNotDefined","reversed","reverse","hex","padStart","ALPHABET","BASE_MAP","xc","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","R","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","blockLen","suffix","outputLen","enableXOF","rounds","posOut","finished","destroyed","state","state32","keccak","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","update","take","finish","writeInto","bufferOut","xofInto","xof","digestInto","destroy","digest","_cloneInto","to","gen","keccak_256","genShake","opts","dkLen","ProviderSolanaBase","props","providerName","request","bridgeRequest","encodeTransaction","transaction","requireAllSignatures","decodeSignedTransaction","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","PROVIDER_EVENTS","ProviderSolana","bridge","timeout","isPhantom","isSolflare","isGlow","_publicKey","_registerEvents","publicKey","isConnected","addEventListener","_handleDisconnected","on","payload","method","params","isWalletEventMethodMatch","_handleAccountChange","_callBridge","postMessage","param","connect","options","_handleConnected","emit","isConnectionStatusChanged","connectionStatus","disconnect","isAccountsChanged","account","_a","toBase58","accounts","signAndSendTransaction","_handleSignAndSendTransaction","signTransaction","_handleSignTransaction","signAllTransactions","transactions","_handleSignAllTransactions","signMessage","display","_handleSignMessage","signature","event","listener","StructError","failure","failures","cached","rest","path","_cached","isObject","print","JSON","stringify","toFailure","context","struct","branch","refinement","toFailures","iterator","run","coerce","coercer","valid","validator","entries","ts","Set","refiner","Struct","validate","is","tuples","tuple","shiftIterator","define","any","Element","boolean","instance","Class","literal","constant","description","never","nullable","isNaN","optional","record","Key","Value","Elements","Never","keys","Structs","S","unknown","condition"],"sourceRoot":""}