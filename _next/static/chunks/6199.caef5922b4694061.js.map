{"version":3,"file":"static/chunks/6199.caef5922b4694061.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@onekeyfe/onekey-cardano-provider/dist/ProviderCardanoBase.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-cardano-provider/dist/ProviderCardano.js","webpack://_N_E/./node_modules/@onekeyfe/onekey-cardano-provider/dist/utils.js","webpack://_N_E/./components/cardano/dapps.config.ts","webpack://_N_E/./components/cardano/CardanoExample.tsx","webpack://_N_E/./components/dappList/DAppList.tsx","webpack://_N_E/./node_modules/@onekeyfe/extension-bridge-injected/dist/JsBridgeExtInjected.js"],"sourcesContent":["import { IInjectedProviderNames } from '@onekeyfe/cross-inpage-provider-types';\nimport { ProviderBase } from '@onekeyfe/cross-inpage-provider-core';\nclass ProviderCardanoBase extends ProviderBase {\n    constructor(props) {\n        super(props);\n        this.providerName = IInjectedProviderNames.cardano;\n    }\n    request(data) {\n        return this.bridgeRequest(data);\n    }\n}\nexport { ProviderCardanoBase };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ProviderCardanoBase } from './ProviderCardanoBase';\nimport { getOrCreateExtInjectedJsBridge } from '@onekeyfe/extension-bridge-injected';\nimport { isWalletEventMethodMatch } from './utils';\nconst PROVIDER_EVENTS = {\n    'connect': 'connect',\n    'disconnect': 'disconnect',\n    'accountChanged': 'accountChanged',\n    'message_low_level': 'message_low_level',\n};\nclass ProviderCardano extends ProviderCardanoBase {\n    constructor(props) {\n        super(Object.assign(Object.assign({}, props), { bridge: props.bridge || getOrCreateExtInjectedJsBridge({ timeout: props.timeout }) }));\n        this._account = null;\n        this._registerEvents();\n    }\n    get account() {\n        return this._account;\n    }\n    get isConnected() {\n        return this._account !== null;\n    }\n    get onekey() {\n        return this.walletInfo();\n    }\n    get nami() {\n        return this.walletInfo();\n    }\n    _registerEvents() {\n        window.addEventListener('onekey_bridge_disconnect', () => {\n            this._handleDisconnected();\n        });\n        this.on(PROVIDER_EVENTS.message_low_level, (payload) => {\n            const { method, params } = payload;\n            if (isWalletEventMethodMatch(method, PROVIDER_EVENTS.accountChanged)) {\n                this._handleAccountChange(params);\n            }\n        });\n    }\n    _callBridge(params) {\n        return this.bridgeRequest(params);\n    }\n    postMessage(param) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        return this._callBridge(param);\n    }\n    _handleConnected(account, options) {\n        this._account = account;\n        if (options.emit && this.isConnectionStatusChanged('connected')) {\n            this.connectionStatus = 'connected';\n            this.emit('connect', account);\n            this.emit('accountChanged', account);\n        }\n    }\n    _handleDisconnected(options = { emit: true }) {\n        if (options.emit && this.isConnectionStatusChanged('disconnected')) {\n            this.connectionStatus = 'disconnected';\n            this.emit('disconnect');\n            this.emit('accountChanged', null);\n        }\n    }\n    isAccountsChanged(address) {\n        return address !== this._account;\n    }\n    _handleAccountChange(payload) {\n        const account = payload.accounts.address;\n        if (this.isAccountsChanged(account)) {\n            this.emit('accountChanged', account || null);\n        }\n        if (!account) {\n            this._handleDisconnected();\n            return;\n        }\n        if (account) {\n            this._handleConnected(account, { emit: false });\n        }\n    }\n    on(event, listener) {\n        return super.on(event, listener);\n    }\n    emit(event, ...args) {\n        return super.emit(event, ...args);\n    }\n    // CIP30 Wallet API 👇\n    walletInfo() {\n        return {\n            apiVersion: '0.1.0',\n            name: 'OneKey',\n            icon: 'https://theme.zdassets.com/theme_assets/10237731/cd8f795ce97bdd7657dd4fb4b19fde3f32b50349.png',\n            isEnabled: () => Promise.resolve(true),\n            enable: () => this.enable()\n        };\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const API = {\n                getNetworkId: () => this.getNetworkId(),\n                getUtxos: (amount, paginate) => this.getUtxos(amount, paginate),\n                getCollateral: () => this.getCollateral(),\n                getBalance: () => this.getBalance(),\n                getUsedAddresses: () => this.getUsedAddresses(),\n                getUnusedAddresses: () => this.getUnUsedAddress(),\n                getChangeAddress: () => this.getChangeAddress(),\n                getRewardAddresses: () => this.getRewardAddresses(),\n                signTx: (tx, partialSign) => this.signTx(tx, partialSign),\n                signData: (addr, payload) => this.signData(addr, payload),\n                submitTx: (tx) => this.submitTx(tx)\n            };\n            if (!this.account) {\n                const result = yield this._callBridge({\n                    method: 'connect',\n                    params: undefined\n                });\n                this._handleConnected(result.account, { emit: true });\n                return API;\n            }\n            return Promise.resolve(API);\n        });\n    }\n    // CIP30 Dapp API 👇\n    getNetworkId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getNetworkId',\n                params: undefined\n            });\n        });\n    }\n    getUtxos(amount, paginate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getUtxos',\n                params: {\n                    amount,\n                    paginate\n                }\n            });\n        });\n    }\n    getCollateral() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve(null);\n        });\n    }\n    getBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getBalance',\n                params: undefined\n            });\n        });\n    }\n    getUsedAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getUsedAddresses',\n                params: undefined\n            });\n        });\n    }\n    getUnUsedAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getUnusedAddresses',\n                params: undefined\n            });\n        });\n    }\n    getChangeAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getChangeAddress',\n                params: undefined\n            });\n        });\n    }\n    getRewardAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'getRewardAddresses',\n                params: undefined\n            });\n        });\n    }\n    signTx(tx, partialSign) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'signTx',\n                params: {\n                    tx,\n                    partialSign\n                }\n            });\n        });\n    }\n    signData(addr, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'signData',\n                params: {\n                    addr,\n                    payload\n                }\n            });\n        });\n    }\n    submitTx(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._callBridge({\n                method: 'submitTx',\n                params: tx\n            });\n        });\n    }\n}\nexport { ProviderCardano };\n","export function isWalletEventMethodMatch(method, name) {\n    return method === `metamask_${name}` || method === `wallet_events_${name}`;\n}\n","export var dapps=[{name:'Minswap',url:'https://app.minswap.org/'},{name:'SundaeSwap',url:'https://sundaeswap.finance/'}];","import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import React,{useState,useEffect,useCallback}from'react';import{ProviderCardano}from'@onekeyfe/onekey-cardano-provider';import{dapps}from'./dapps.config';import{DAppList}from'../dappList/DAppList';var useProvider=function useProvider(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),provider=_useState2[0],setProvider=_useState2[1];useEffect(function(){var injectedProvider=window.cardano;var cardanoProvider=injectedProvider||new ProviderCardano({});setProvider(cardanoProvider);},[]);return provider;};export default function CardanoExample(){var provider=useProvider();var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),connected=_useState4[0],setConnected=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),API=_useState6[0],setAPI=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),networkId=_useState8[0],setNetworkId=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),utxos=_useState10[0],setUtxos=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),usedAddresses=_useState12[0],setUsedAddresses=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),unusedAddresses=_useState14[0],setUnusedAddresses=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),changeAddress=_useState16[0],setChangeAddress=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),rewardAddresses=_useState18[0],setRewardAddresses=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),balance=_useState20[0],setBalance=_useState20[1];var getWalletInfo=useCallback(function _callee(){var api;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(provider.onekey.enable());case 2:api=_context.sent;try{void api.getNetworkId().then(function(id){return setNetworkId(id);});void api.getUtxos().then(function(utxos){return setUtxos(utxos);});void api.getBalance().then(function(balance){return setBalance(balance);});void api.getUsedAddresses().then(function(addresses){return setUsedAddresses(addresses);});void api.getUnusedAddresses().then(function(addresses){return setUnusedAddresses(addresses);});void api.getRewardAddresses().then(function(addresses){return setRewardAddresses(addresses);});void api.getChangeAddress().then(function(address){return setChangeAddress(address);});}catch(_unused){}case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);},[provider]);useEffect(function(){if(!provider)return;try{provider.on('connect',function(address){console.log(\"cardanoWallet.on [connect] \"+address);getWalletInfo().catch(function(e){return console.error(e);});});}catch(e){console.error(e);}try{provider.on('accountChanged',function(address){console.log(\"cardanoWallet.on [accountChange] \"+address);getWalletInfo().catch(function(e){return console.error(e);});});}catch(e){console.error(e);}return function(){};},[provider,getWalletInfo]);var connectWallet=function connectWallet(){var api;return _regeneratorRuntime.async(function connectWallet$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(provider.onekey.enable());case 3:api=_context2.sent;setAPI(api);setConnected(true);_context2.next=13;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);setAPI(null);setConnected(false);case 13:case\"end\":return _context2.stop();}}},null,null,[[0,8]],Promise);};var signTransaction=function signTransaction(){var txHex,witness;return _regeneratorRuntime.async(function signTransaction$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:txHex='84a300818258200528ed5dd2134534df4d999c9cd712e8b47441a0363cc972bf5d5c72635c3e5100018282583901cd5aa28518568615ed6bd4ad40e6cecd65734373bf578489b02830e38d6dc22f3b6dfd333cf6495e8fb3fffbc2936cc010827b32d92eca1b1a000f424082583901922941c2e490c9f9f8706c66f7f46b5abec243fcb663f02817fb9b83aa618af8973bc5f1fdb9c9db97d1c55f0d4d4a1e633bbb14ab43b4fc1a001449d5021a00029075a0f5f6';_context3.next=3;return _regeneratorRuntime.awrap(API.signTx(txHex,true));case 3:witness=_context3.sent;console.log(witness);case 5:case\"end\":return _context3.stop();}}},null,null,null,Promise);};var signData=function signData(){var signature;return _regeneratorRuntime.async(function signData$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(API.signData(usedAddresses==null?void 0:usedAddresses[0],Buffer.from('hello world','utf8').toString('hex')));case 2:signature=_context4.sent;console.log(signature);case 4:case\"end\":return _context4.stop();}}},null,null,null,Promise);};return React.createElement(\"div\",null,React.createElement(DAppList,{dapps:dapps}),React.createElement(\"div\",{style:{padding:'20px'}},\"Cardano \\u8FD4\\u56DE\\u6570\\u636E\\u683C\\u5F0F\\u5927\\u90E8\\u5206\\u4E3A CBOR \\u7684\\u5305\\u88C5\\u683C\\u5F0F\\uFF0C\\u9700\\u8981\\u5BF9\\u5E94 SDK \\u89E3\\u6790\\u3002\\u7531\\u4E8E\\u672C\\u9879\\u76EE\\u4E0D\\u5F15\\u5165\\u7B2C\\u4E09\\u65B9 SDK, \\u6240\\u4EE5\\u793A\\u4F8B\\u9879\\u76EE\\u76F4\\u63A5\\u5C55\\u793A\\u539F\\u59CB\\u5B57\\u7B26\\u4E32\"),!provider&&React.createElement(\"a\",{target:\"_blank\",href:'https://www.onekey.so/download/'},\"Install OneKey Extension \\u2192\"),React.createElement(\"main\",null,provider&&connected?React.createElement(\"div\",null,React.createElement(\"ul\",null,\"walletName: \",React.createElement(\"img\",{src:provider.onekey.icon,style:{height:'24px',width:'24px'}}),\" \",provider.onekey.name),React.createElement(\"ul\",null,\"apiVersion: \",provider.onekey.apiVersion),React.createElement(\"ul\",null,\"networkId: \",networkId),React.createElement(\"ul\",{style:{width:'80%'}},\"Utxos: \",utxos.map(function(u){return React.createElement(\"li\",{style:{overflow:'hidden',textOverflow:'ellipsis'},key:u},u);})),React.createElement(\"ul\",null,\"balance: \",balance),React.createElement(\"ul\",{style:{width:'80%'}},\"UsedAddresses: \",usedAddresses.map(function(addr){return React.createElement(\"li\",{style:{overflow:'hidden',textOverflow:'ellipsis'},key:addr},addr);})),React.createElement(\"ul\",{style:{width:'80%'}},\"UnusedAddresses: \",unusedAddresses.map(function(addr){return React.createElement(\"li\",{style:{overflow:'hidden',textOverflow:'ellipsis'},key:addr},addr);})),React.createElement(\"ul\",{style:{width:'80%'}},\"rewardAddresses: \",rewardAddresses.map(function(addr){return React.createElement(\"li\",{style:{overflow:'hidden',textOverflow:'ellipsis'},key:addr},addr);})),React.createElement(\"ul\",null,\"changeAddress: \",changeAddress),React.createElement(\"button\",{onClick:function onClick(){return signTransaction();}},\"SignTransaction\"),React.createElement(\"button\",{onClick:function onClick(){return signData();}},\"SignData\")):React.createElement(\"button\",{onClick:function onClick(){return connectWallet();}},\"Connect Wallet\")));}","import React from'react';import styles from'../../styles/Home.module.css';function DAppList(props){var dapps=props.dapps;return React.createElement(\"div\",{className:styles.container},React.createElement(\"h3\",null,\"Top DApps\"),React.createElement(\"ul\",null,dapps.map(function(dapp){return React.createElement(\"li\",{key:dapp.name},React.createElement(\"a\",{href:dapp.url,target:'_blank'},dapp.name,\" \\u2197\"));})));}export{DAppList};","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { fakeDebugLogger, consts } from '@onekeyfe/cross-inpage-provider-core';\nimport { JsBridgeBase, injectedProviderReceiveHandler, injectJsBridge, } from '@onekeyfe/cross-inpage-provider-core';\nconst { JS_BRIDGE_MESSAGE_DIRECTION, JS_BRIDGE_MESSAGE_EXT_CHANNEL } = consts;\nfunction getOrCreateExtInjectedJsBridge(options = {}) {\n    // create ext bridge by default\n    const bridgeCreator = () => new JsBridgeExtInjected(Object.assign(Object.assign({}, options), { receiveHandler: injectedProviderReceiveHandler }));\n    const bridge = injectJsBridge(bridgeCreator);\n    return bridge;\n}\nlet postMessageListenerAdded = false;\nfunction setupPostMessageListener(options = {}) {\n    const debugLogger = options.debugLogger || fakeDebugLogger;\n    if (postMessageListenerAdded) {\n        return;\n    }\n    postMessageListenerAdded = true;\n    // - receive\n    // #### content-script -> injected\n    window.addEventListener('message', (event) => {\n        var _a, _b;\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n        const eventData = event.data;\n        // only accept extension messages\n        if (eventData.channel === JS_BRIDGE_MESSAGE_EXT_CHANNEL &&\n            eventData.direction === JS_BRIDGE_MESSAGE_DIRECTION.HOST_TO_INPAGE) {\n            debugLogger.extInjected('onWindowPostMessage', eventData);\n            const payload = eventData.payload;\n            const jsBridge = (_a = options.bridge) !== null && _a !== void 0 ? _a : (_b = window === null || window === void 0 ? void 0 : window.$onekey) === null || _b === void 0 ? void 0 : _b.jsBridge;\n            if (jsBridge) {\n                jsBridge.receive(payload);\n            }\n        }\n    }, false);\n}\nclass JsBridgeExtInjected extends JsBridgeBase {\n    constructor(config) {\n        super(config);\n        this.sendAsString = false;\n        this.isInjected = true;\n        // receive message\n        setupPostMessageListener({\n            debugLogger: this.debugLogger,\n            bridge: this,\n        });\n    }\n    // send message\n    sendPayload(payloadObj) {\n        window.postMessage({\n            channel: JS_BRIDGE_MESSAGE_EXT_CHANNEL,\n            direction: JS_BRIDGE_MESSAGE_DIRECTION.INPAGE_TO_HOST,\n            payload: payloadObj,\n        });\n    }\n}\nexport { JsBridgeExtInjected, getOrCreateExtInjectedJsBridge };\n"],"names":["ProviderCardanoBase","constructor","props","super","this","providerName","request","data","bridgeRequest","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","PROVIDER_EVENTS","ProviderCardano","Object","assign","bridge","timeout","_account","_registerEvents","account","isConnected","onekey","walletInfo","nami","window","addEventListener","_handleDisconnected","on","payload","method","params","name","isWalletEventMethodMatch","_handleAccountChange","_callBridge","postMessage","param","_handleConnected","options","emit","isConnectionStatusChanged","connectionStatus","isAccountsChanged","address","accounts","event","listener","args","apiVersion","icon","isEnabled","enable","API","getNetworkId","getUtxos","amount","paginate","getCollateral","getBalance","getUsedAddresses","getUnusedAddresses","getUnUsedAddress","getChangeAddress","getRewardAddresses","signTx","tx","partialSign","signData","addr","submitTx","undefined","dapps","url","CardanoExample","provider","_useState","useState","_useState2","_slicedToArray","setProvider","useEffect","cardanoProvider","cardano","useProvider","_useState3","_useState4","connected","setConnected","_useState5","_useState6","setAPI","_useState7","_useState8","networkId","setNetworkId","_useState9","_useState10","utxos","setUtxos","_useState11","_useState12","usedAddresses","setUsedAddresses","_useState13","_useState14","unusedAddresses","setUnusedAddresses","_useState15","_useState16","changeAddress","setChangeAddress","_useState17","_useState18","rewardAddresses","setRewardAddresses","_useState19","_useState20","balance","setBalance","getWalletInfo","useCallback","api","_regeneratorRuntime","_context","prev","sent","id","addresses","_unused","stop","console","log","catch","error","React","DAppList","style","padding","target","href","createElement","src","height","width","map","u","overflow","textOverflow","key","onClick","witness","_context3","signTransaction","signature","_context4","Buffer","from","toString","_context2","t0","connectWallet","className","styles","dapp","JS_BRIDGE_MESSAGE_DIRECTION","JS_BRIDGE_MESSAGE_EXT_CHANNEL","getOrCreateExtInjectedJsBridge","JsBridgeExtInjected","receiveHandler","postMessageListenerAdded","config","sendAsString","isInjected","debugLogger","_a","_b","source","eventData","channel","direction","HOST_TO_INPAGE","extInjected","jsBridge","$onekey","receive","setupPostMessageListener","sendPayload","payloadObj","INPAGE_TO_HOST"],"sourceRoot":""}